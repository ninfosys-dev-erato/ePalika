syntax = "proto3";

package auth.v1;

option go_package = "github.com/epalika/internal-libs/proto/auth/v1;authv1";

import "google/protobuf/timestamp.proto";

// User service for account management
service UserService {
  // Create a new user account
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  
  // Get user by ID
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  
  // Get user by email
  rpc GetUserByEmail(GetUserByEmailRequest) returns (GetUserByEmailResponse);
  
  // Update user information
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  
  // Delete user account
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  
  // List users with pagination
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
  
  // Change user password
  rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse);
  
  // Reset user password
  rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse);
}

// User entity
message User {
  string id = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  string phone = 5;
  UserRole role = 6;
  UserStatus status = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
  string organization_id = 10;
  string department = 11;
  string position = 12;
}

// User role enumeration
enum UserRole {
  USER_ROLE_UNSPECIFIED = 0;
  USER_ROLE_CITIZEN = 1;
  USER_ROLE_EMPLOYEE = 2;
  USER_ROLE_SUPERVISOR = 3;
  USER_ROLE_ADMIN = 4;
  USER_ROLE_SUPER_ADMIN = 5;
}

// User status enumeration
enum UserStatus {
  USER_STATUS_UNSPECIFIED = 0;
  USER_STATUS_ACTIVE = 1;
  USER_STATUS_INACTIVE = 2;
  USER_STATUS_SUSPENDED = 3;
  USER_STATUS_PENDING_VERIFICATION = 4;
}

// Create user request
message CreateUserRequest {
  string email = 1;
  string password = 2;
  string first_name = 3;
  string last_name = 4;
  string phone = 5;
  UserRole role = 6;
  string organization_id = 7;
  string department = 8;
  string position = 9;
}

// Create user response
message CreateUserResponse {
  User user = 1;
}

// Get user request
message GetUserRequest {
  string id = 1;
}

// Get user response
message GetUserResponse {
  User user = 1;
}

// Get user by email request
message GetUserByEmailRequest {
  string email = 1;
}

// Get user by email response
message GetUserByEmailResponse {
  User user = 1;
}

// Update user request
message UpdateUserRequest {
  string id = 1;
  optional string first_name = 2;
  optional string last_name = 3;
  optional string phone = 4;
  optional UserRole role = 5;
  optional UserStatus status = 6;
  optional string department = 7;
  optional string position = 8;
}

// Update user response
message UpdateUserResponse {
  User user = 1;
}

// Delete user request
message DeleteUserRequest {
  string id = 1;
}

// Delete user response
message DeleteUserResponse {
  bool success = 1;
}

// List users request
message ListUsersRequest {
  int32 page = 1;
  int32 page_size = 2;
  optional string organization_id = 3;
  optional UserRole role = 4;
  optional UserStatus status = 5;
  optional string search = 6;
}

// List users response
message ListUsersResponse {
  repeated User users = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 page_size = 4;
}

// Change password request
message ChangePasswordRequest {
  string user_id = 1;
  string current_password = 2;
  string new_password = 3;
}

// Change password response
message ChangePasswordResponse {
  bool success = 1;
}

// Reset password request
message ResetPasswordRequest {
  string email = 1;
}

// Reset password response
message ResetPasswordResponse {
  bool success = 1;
  string reset_token = 2;
}