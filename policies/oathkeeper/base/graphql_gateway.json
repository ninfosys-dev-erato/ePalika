[
  {
    "id": "graphql-gateway-query",
    "version": "v0.40.9",
    "description": "GraphQL Gateway - Query and Mutation endpoint",
    "upstream": {
      "url": "http://graphql-gateway:8000"
    },
    "match": {
      "url": "http://<.*>:<4455|443|80>/query",
      "methods": ["POST", "OPTIONS"]
    },
    "authenticators": [
      {
        "handler": "jwt"
      }
    ],
    "authorizer": {
      "handler": "remote_json",
      "config": {
        "remote": "http://pdp:8080/authorize",
        "payload": "{\"subject\": \"{{ .Subject }}\", \"resource\": \"graphql:query\", \"action\": \"execute\", \"claims\": {\"tenant\": \"{{ .Extra.tenant }}\", \"roles\": {{ .Extra.roles | toJson }}}, \"context\": {\"time\": \"{{ now | date \"2006-01-02T15:04:05Z07:00\" }}\", \"ip\": \"{{ .MatchContext.Header.Get \"X-Forwarded-For\" }}\"}}",
        "forward_response_headers_to_upstream": ["X-Authz-Decision", "X-Authz-Reason"],
        "retry": {
          "give_up_after": "2s",
          "max_delay": "200ms"
        }
      }
    },
    "mutators": [
      {
        "handler": "header",
        "config": {
          "headers": {
            "X-User-ID": "{{ print .Subject }}",
            "X-Tenant": "{{ .Extra.tenant }}",
            "X-Roles": "{{ join .Extra.roles \",\" }}",
            "X-Request-ID": "{{ printUUID }}",
            "X-Forwarded-User": "{{ .Extra.email }}",
            "X-User-Name": "{{ .Extra.name }}",
            "Traceparent": "00-{{ printUUID | replace \"-\" \"\" | trunc 32 }}-{{ printUUID | replace \"-\" \"\" | trunc 16 }}-01"
          }
        }
      }
    ],
    "errors": [
      {
        "handler": "json"
      }
    ]
  },
  {
    "id": "graphql-playground",
    "version": "v0.40.9",
    "description": "GraphQL Playground - Development only",
    "upstream": {
      "url": "http://graphql-gateway:8000"
    },
    "match": {
      "url": "http://<.*>:<4455|443|80>/playground",
      "methods": ["GET"]
    },
    "authenticators": [
      {
        "handler": "noop"
      }
    ],
    "authorizer": {
      "handler": "allow"
    },
    "mutators": [
      {
        "handler": "noop"
      }
    ],
    "errors": [
      {
        "handler": "json"
      }
    ]
  },
  {
    "id": "graphql-health",
    "version": "v0.40.9",
    "description": "GraphQL Gateway - Health check endpoint",
    "upstream": {
      "url": "http://graphql-gateway:8000"
    },
    "match": {
      "url": "http://<.*>:<4455|443|80>/health",
      "methods": ["GET"]
    },
    "authenticators": [
      {
        "handler": "noop"
      }
    ],
    "authorizer": {
      "handler": "allow"
    },
    "mutators": [
      {
        "handler": "noop"
      }
    ],
    "errors": [
      {
        "handler": "json"
      }
    ]
  },
  {
    "id": "darta-chalani-grpc-health",
    "version": "v0.40.9",
    "description": "Darta-Chalani gRPC - Direct health check (internal only)",
    "upstream": {
      "url": "http://darta-chalani:9000"
    },
    "match": {
      "url": "http://<.*>:<4455|443|80>/internal/darta-chalani/health",
      "methods": ["GET"]
    },
    "authenticators": [
      {
        "handler": "noop"
      }
    ],
    "authorizer": {
      "handler": "allow"
    },
    "mutators": [
      {
        "handler": "noop"
      }
    ],
    "errors": [
      {
        "handler": "json"
      }
    ]
  }
]
