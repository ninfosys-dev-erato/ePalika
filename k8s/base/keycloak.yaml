apiVersion: v1
kind: Service
metadata:
  name: keycloak-postgres
  labels:
    app.kubernetes.io/name: keycloak-postgres
spec:
  ports:
    - port: 5432
      name: postgres
  selector:
    app.kubernetes.io/name: keycloak-postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak-postgres
  labels:
    app.kubernetes.io/name: keycloak-postgres
    app.kubernetes.io/component: datastore
spec:
  serviceName: keycloak-postgres
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak-postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keycloak-postgres
        app.kubernetes.io/component: datastore
    spec:
      containers:
        - name: postgres
          image: postgres:17
          ports:
            - containerPort: 5432
              name: postgres
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: keycloak-postgres-secret
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: keycloak-postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-postgres-secret
                  key: POSTGRES_PASSWORD
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "keycloak"]
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: identity
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keycloak
        app.kubernetes.io/component: identity
    spec:
      initContainers:
        - name: wait-for-database
          image: busybox:1.36
          command: ["/bin/sh", "-c", "until nc -z keycloak-postgres 5432; do echo waiting for keycloak postgres; sleep 2; done"]
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:25.0.0
          args: ["start", "--optimized"]
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  name: keycloak-admin-secret
                  key: KEYCLOAK_ADMIN_USER
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-admin-secret
                  key: KEYCLOAK_ADMIN_PASSWORD
            - name: KC_DB
              value: postgres
            - name: KC_DB_URL_HOST
              value: keycloak-postgres
            - name: KC_DB_URL_PORT
              value: "5432"
            - name: KC_DB_URL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: keycloak-postgres-secret
                  key: POSTGRES_DB
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: keycloak-postgres-secret
                  key: POSTGRES_USER
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-postgres-secret
                  key: POSTGRES_PASSWORD
            - name: KC_HEALTH_ENABLED
              value: "true"
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 15
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 90
            periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  labels:
    app.kubernetes.io/name: keycloak
spec:
  selector:
    app.kubernetes.io/name: keycloak
  ports:
    - port: 8080
      name: http
      targetPort: http
