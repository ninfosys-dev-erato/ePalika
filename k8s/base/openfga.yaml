apiVersion: v1
kind: Service
metadata:
  name: openfga-postgres
  labels:
    app.kubernetes.io/name: openfga-postgres
    app.kubernetes.io/part-of: epalika-platform
spec:
  ports:
    - port: 5432
      name: postgres
  selector:
    app.kubernetes.io/name: openfga-postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: openfga-postgres
  labels:
    app.kubernetes.io/name: openfga-postgres
    app.kubernetes.io/component: datastore
spec:
  serviceName: openfga-postgres
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: openfga-postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: openfga-postgres
        app.kubernetes.io/component: datastore
    spec:
      containers:
        - name: postgres
          image: postgres:17
          ports:
            - containerPort: 5432
              name: postgres
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: openfga-postgres-secret
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: openfga-postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: openfga-postgres-secret
                  key: POSTGRES_PASSWORD
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres"]
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: openfga-migrate
  labels:
    app.kubernetes.io/name: openfga-migrate
spec:
  template:
    metadata:
      labels:
        job: openfga-migrate
    spec:
      restartPolicy: OnFailure
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.36
          command: ["/bin/sh", "-c", "until nc -z openfga-postgres 5432; do echo waiting for openfga postgres; sleep 2; done"]
      containers:
        - name: migrate
          image: openfga/openfga:v1.10.2
          args: ["migrate"]
          env:
            - name: OPENFGA_DATASTORE_ENGINE
              value: postgres
            - name: OPENFGA_DATASTORE_URI
              valueFrom:
                secretKeyRef:
                  name: openfga-postgres-secret
                  key: POSTGRES_URI
          envFrom:
            - secretRef:
                name: openfga-postgres-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openfga
  labels:
    app.kubernetes.io/name: openfga
    app.kubernetes.io/component: authorization
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: openfga
  template:
    metadata:
      labels:
        app.kubernetes.io/name: openfga
        app.kubernetes.io/component: authorization
    spec:
      initContainers:
        - name: wait-for-migration
          image: busybox:1.36
          command: ["/bin/sh", "-c", "until nc -z openfga-postgres 5432; do echo waiting for openfga postgres; sleep 2; done"]
      containers:
        - name: openfga
          image: openfga/openfga:v1.10.2
          args: ["run"]
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 8081
              name: grpc
          env:
            - name: OPENFGA_LOG_FORMAT
              value: json
            - name: OPENFGA_DATASTORE_ENGINE
              value: postgres
            - name: OPENFGA_DATASTORE_URI
              valueFrom:
                secretKeyRef:
                  name: openfga-postgres-secret
                  key: POSTGRES_URI
          envFrom:
            - secretRef:
                name: openfga-postgres-secret
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: openfga
  labels:
    app.kubernetes.io/name: openfga
spec:
  ports:
    - port: 8080
      name: http
      targetPort: http
    - port: 8081
      name: grpc
      targetPort: grpc
  selector:
    app.kubernetes.io/name: openfga
