# =============================================================================
# ðŸ§   ePalika GraphQL Codegen Configuration â€” Enterprise Edition v2.0
# =============================================================================
# PURPOSE:
#   This configuration drives the automated generation of type-safe artifacts
#   (TypeScript interfaces, operation types, and React Apollo hooks) from the
#   unified GraphQL schema produced by the Schema Composition Pipeline.
#
# COVERAGE:
#   â€¢ All Micro-Frontend (MFE) operation documents under /apps
#   â€¢ Shared fragments residing under /packages/api-types/src/fragments
#   â€¢ Unified schema from /packages/api-schema/index.graphql
#
# OUTPUT:
#   â€¢ ./src/generated.ts â€” Single source of truth for all strongly-typed GraphQL
#     entities across the ePalika front-end ecosystem.
#
# GOVERNANCE:
#   â€¢ Changes to GraphQL schema must always be followed by `pnpm generate:types`
#   â€¢ This file is CI-enforced and version-controlled for traceability.
# =============================================================================

schema:
  - "./packages/api-schema/index.graphql"
documents:
  - "../../apps/**/*.{ts,tsx,graphql}" # All MFE-specific GraphQL operations
  - "./src/fragments/**/*.graphql" # Shared fragments & reusable queries

generates:
  ./src/generated.ts:
    plugins:
      - "typescript"
      - "typescript-operations"
      - "typescript-react-apollo"
    config:
      withHooks: true
      withComponent: false
      withHOC: false
      scalars:
        DateTime: string
        JSON: Record<string, any>
        Upload: File
        FiscalYear: string
        ID: string
      avoidOptionals: true
      immutableTypes: true
      enumsAsTypes: true
      nonOptionalTypename: true
      skipTypename: false
      dedupeOperationSuffix: true
      namingConvention:
        typeNames: change-case#pascalCase
        transformUnderscore: true

hooks:
  afterAllFileWrite:
    - prettier --write
