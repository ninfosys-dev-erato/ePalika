# Darta Chalani Service Schema

extend type Query {
  # Get health status of darta-chalani service
  dartaChalaniHealth: HealthStatus!

  # Get darta by ID
  getDarta(id: ID!): Darta

  # List all dartas
  listDartas(limit: Int, offset: Int): DartaList!
}

extend type Mutation {
  # Register a new darta
  registerDarta(input: RegisterDartaInput!): RegisterDartaResponse!

  # Update darta status
  updateDartaStatus(id: ID!, status: DartaStatus!): UpdateDartaResponse!
}

# Darta entity
type Darta {
  id: ID!
  title: String!
  description: String!
  submittedBy: String!
  status: DartaStatus!
  createdAt: String!
  updatedAt: String
}

# List response
type DartaList {
  items: [Darta!]!
  total: Int!
  limit: Int!
  offset: Int!
}

# Input types
input RegisterDartaInput {
  title: String!
  description: String!
  submittedBy: String!
}

input UpdateDartaStatusInput {
  status: DartaStatus!
  remarks: String
}

# Response types
type RegisterDartaResponse implements Response {
  success: Boolean!
  message: String!
  darta: Darta
  dartaId: String
}

type UpdateDartaResponse implements Response {
  success: Boolean!
  message: String!
  darta: Darta
}

# Enums
enum DartaStatus {
  PENDING
  IN_PROGRESS
  APPROVED
  REJECTED
  COMPLETED
}
