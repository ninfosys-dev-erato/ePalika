syntax = "proto3";

package identity.v1;

option go_package = "git.ninjainfosys.com/ePalika/proto/gen/identity/v1;identityv1";

import "google/protobuf/timestamp.proto";

// IdentityService provides user and organization management
service IdentityService {
  // User operations
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc GetUserByEmail(GetUserByEmailRequest) returns (GetUserByEmailResponse);
  rpc GetUserByKeycloakId(GetUserByKeycloakIdRequest) returns (GetUserByKeycloakIdResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeactivateUser(DeactivateUserRequest) returns (DeactivateUserResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);

  // Organization operations
  rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse);
  rpc GetOrganization(GetOrganizationRequest) returns (GetOrganizationResponse);
  rpc UpdateOrganization(UpdateOrganizationRequest) returns (UpdateOrganizationResponse);
  rpc ListOrganizations(ListOrganizationsRequest) returns (ListOrganizationsResponse);

  // Organizational Unit operations
  rpc CreateOrganizationalUnit(CreateOrganizationalUnitRequest) returns (CreateOrganizationalUnitResponse);
  rpc GetOrganizationalUnit(GetOrganizationalUnitRequest) returns (GetOrganizationalUnitResponse);
  rpc UpdateOrganizationalUnit(UpdateOrganizationalUnitRequest) returns (UpdateOrganizationalUnitResponse);
  rpc ListOrganizationalUnits(ListOrganizationalUnitsRequest) returns (ListOrganizationalUnitsResponse);

  // Ward operations
  rpc CreateWard(CreateWardRequest) returns (CreateWardResponse);
  rpc GetWard(GetWardRequest) returns (GetWardResponse);
  rpc UpdateWard(UpdateWardRequest) returns (UpdateWardResponse);
  rpc ListWards(ListWardsRequest) returns (ListWardsResponse);

  // Fiscal Year operations
  rpc CreateFiscalYear(CreateFiscalYearRequest) returns (CreateFiscalYearResponse);
  rpc GetFiscalYear(GetFiscalYearRequest) returns (GetFiscalYearResponse);
  rpc GetActiveFiscalYear(GetActiveFiscalYearRequest) returns (GetActiveFiscalYearResponse);
  rpc ListFiscalYears(ListFiscalYearsRequest) returns (ListFiscalYearsResponse);
  rpc SetActiveFiscalYear(SetActiveFiscalYearRequest) returns (SetActiveFiscalYearResponse);

  // Role operations
  rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse);
  rpc GetRole(GetRoleRequest) returns (GetRoleResponse);
  rpc ListRoles(ListRolesRequest) returns (ListRolesResponse);
  rpc AssignRole(AssignRoleRequest) returns (AssignRoleResponse);
  rpc RevokeRole(RevokeRoleRequest) returns (RevokeRoleResponse);

  // User-Organization relationship
  rpc AddUserToOrganization(AddUserToOrganizationRequest) returns (AddUserToOrganizationResponse);
  rpc RemoveUserFromOrganization(RemoveUserFromOrganizationRequest) returns (RemoveUserFromOrganizationResponse);
  rpc ListUserOrganizations(ListUserOrganizationsRequest) returns (ListUserOrganizationsResponse);

  // Health check
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
}

// User represents a user in the system
message User {
  string id = 1;
  string keycloak_id = 2;
  string email = 3;
  string first_name = 4;
  string last_name = 5;
  string phone = 6;
  bool is_active = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
}

// Organization represents an organizational entity
message Organization {
  string id = 1;
  string name = 2;
  string code = 3;
  string description = 4;
  string address = 5;
  string phone = 6;
  string email = 7;
  bool is_active = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
}

// UserOrganization represents a user's membership in an organization
message UserOrganization {
  string user_id = 1;
  string organization_id = 2;
  string role = 3;
  google.protobuf.Timestamp joined_at = 4;
}

// User operations
message CreateUserRequest {
  string keycloak_id = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  string phone = 5;
}

message CreateUserResponse {
  User user = 1;
}

message GetUserRequest {
  string id = 1;
}

message GetUserResponse {
  User user = 1;
}

message GetUserByEmailRequest {
  string email = 1;
}

message GetUserByEmailResponse {
  User user = 1;
}

message UpdateUserRequest {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  string phone = 4;
  bool is_active = 5;
}

message UpdateUserResponse {
  User user = 1;
}

message ListUsersRequest {
  int32 limit = 1;
  int32 offset = 2;
  string organization_id = 3;
}

message ListUsersResponse {
  repeated User users = 1;
  int64 total = 2;
  int32 limit = 3;
  int32 offset = 4;
}

// Organization operations
message CreateOrganizationRequest {
  string name = 1;
  string code = 2;
  string description = 3;
  string address = 4;
  string phone = 5;
  string email = 6;
}

message CreateOrganizationResponse {
  Organization organization = 1;
}

message GetOrganizationRequest {
  string id = 1;
}

message GetOrganizationResponse {
  Organization organization = 1;
}

message UpdateOrganizationRequest {
  string id = 1;
  string name = 2;
  string description = 3;
  string address = 4;
  string phone = 5;
  string email = 6;
  bool is_active = 7;
}

message UpdateOrganizationResponse {
  Organization organization = 1;
}

message ListOrganizationsRequest {
  int32 limit = 1;
  int32 offset = 2;
}

message ListOrganizationsResponse {
  repeated Organization organizations = 1;
  int64 total = 2;
  int32 limit = 3;
  int32 offset = 4;
}

// User-Organization operations
message AddUserToOrganizationRequest {
  string user_id = 1;
  string organization_id = 2;
  string role = 3;
}

message AddUserToOrganizationResponse {
  UserOrganization user_organization = 1;
}

message RemoveUserFromOrganizationRequest {
  string user_id = 1;
  string organization_id = 2;
}

message RemoveUserFromOrganizationResponse {
  bool success = 1;
}

// Health check
message HealthCheckRequest {}

message HealthCheckResponse {
  string status = 1;
  string service = 2;
  google.protobuf.Timestamp timestamp = 3;
}
