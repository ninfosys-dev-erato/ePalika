// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: darta/v1/darta.proto

package dartav1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DartaStatus int32

const (
	DartaStatus_DARTA_STATUS_UNSPECIFIED          DartaStatus = 0
	DartaStatus_DARTA_STATUS_DRAFT                DartaStatus = 1
	DartaStatus_DARTA_STATUS_PENDING_REVIEW       DartaStatus = 2
	DartaStatus_DARTA_STATUS_CLASSIFICATION       DartaStatus = 3
	DartaStatus_DARTA_STATUS_NUMBER_RESERVED      DartaStatus = 4
	DartaStatus_DARTA_STATUS_REGISTERED           DartaStatus = 5
	DartaStatus_DARTA_STATUS_VOIDED               DartaStatus = 6
	DartaStatus_DARTA_STATUS_SCANNED              DartaStatus = 7
	DartaStatus_DARTA_STATUS_METADATA_ENRICHED    DartaStatus = 8
	DartaStatus_DARTA_STATUS_DIGITALLY_ARCHIVED   DartaStatus = 9
	DartaStatus_DARTA_STATUS_ASSIGNED             DartaStatus = 10
	DartaStatus_DARTA_STATUS_IN_REVIEW_BY_SECTION DartaStatus = 11
	DartaStatus_DARTA_STATUS_NEEDS_CLARIFICATION  DartaStatus = 12
	DartaStatus_DARTA_STATUS_ACCEPTED             DartaStatus = 13
	DartaStatus_DARTA_STATUS_ACTION_TAKEN         DartaStatus = 14
	DartaStatus_DARTA_STATUS_RESPONSE_ISSUED      DartaStatus = 15
	DartaStatus_DARTA_STATUS_ACK_REQUESTED        DartaStatus = 16
	DartaStatus_DARTA_STATUS_ACK_RECEIVED         DartaStatus = 17
	DartaStatus_DARTA_STATUS_SUPERSEDED           DartaStatus = 18
	DartaStatus_DARTA_STATUS_CLOSED               DartaStatus = 19
)

// Enum value maps for DartaStatus.
var (
	DartaStatus_name = map[int32]string{
		0:  "DARTA_STATUS_UNSPECIFIED",
		1:  "DARTA_STATUS_DRAFT",
		2:  "DARTA_STATUS_PENDING_REVIEW",
		3:  "DARTA_STATUS_CLASSIFICATION",
		4:  "DARTA_STATUS_NUMBER_RESERVED",
		5:  "DARTA_STATUS_REGISTERED",
		6:  "DARTA_STATUS_VOIDED",
		7:  "DARTA_STATUS_SCANNED",
		8:  "DARTA_STATUS_METADATA_ENRICHED",
		9:  "DARTA_STATUS_DIGITALLY_ARCHIVED",
		10: "DARTA_STATUS_ASSIGNED",
		11: "DARTA_STATUS_IN_REVIEW_BY_SECTION",
		12: "DARTA_STATUS_NEEDS_CLARIFICATION",
		13: "DARTA_STATUS_ACCEPTED",
		14: "DARTA_STATUS_ACTION_TAKEN",
		15: "DARTA_STATUS_RESPONSE_ISSUED",
		16: "DARTA_STATUS_ACK_REQUESTED",
		17: "DARTA_STATUS_ACK_RECEIVED",
		18: "DARTA_STATUS_SUPERSEDED",
		19: "DARTA_STATUS_CLOSED",
	}
	DartaStatus_value = map[string]int32{
		"DARTA_STATUS_UNSPECIFIED":          0,
		"DARTA_STATUS_DRAFT":                1,
		"DARTA_STATUS_PENDING_REVIEW":       2,
		"DARTA_STATUS_CLASSIFICATION":       3,
		"DARTA_STATUS_NUMBER_RESERVED":      4,
		"DARTA_STATUS_REGISTERED":           5,
		"DARTA_STATUS_VOIDED":               6,
		"DARTA_STATUS_SCANNED":              7,
		"DARTA_STATUS_METADATA_ENRICHED":    8,
		"DARTA_STATUS_DIGITALLY_ARCHIVED":   9,
		"DARTA_STATUS_ASSIGNED":             10,
		"DARTA_STATUS_IN_REVIEW_BY_SECTION": 11,
		"DARTA_STATUS_NEEDS_CLARIFICATION":  12,
		"DARTA_STATUS_ACCEPTED":             13,
		"DARTA_STATUS_ACTION_TAKEN":         14,
		"DARTA_STATUS_RESPONSE_ISSUED":      15,
		"DARTA_STATUS_ACK_REQUESTED":        16,
		"DARTA_STATUS_ACK_RECEIVED":         17,
		"DARTA_STATUS_SUPERSEDED":           18,
		"DARTA_STATUS_CLOSED":               19,
	}
)

func (x DartaStatus) Enum() *DartaStatus {
	p := new(DartaStatus)
	*p = x
	return p
}

func (x DartaStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DartaStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_darta_v1_darta_proto_enumTypes[0].Descriptor()
}

func (DartaStatus) Type() protoreflect.EnumType {
	return &file_darta_v1_darta_proto_enumTypes[0]
}

func (x DartaStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DartaStatus.Descriptor instead.
func (DartaStatus) EnumDescriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{0}
}

type ApplicantType int32

const (
	ApplicantType_APPLICANT_TYPE_UNSPECIFIED       ApplicantType = 0
	ApplicantType_APPLICANT_TYPE_CITIZEN           ApplicantType = 1
	ApplicantType_APPLICANT_TYPE_ORGANIZATION      ApplicantType = 2
	ApplicantType_APPLICANT_TYPE_GOVERNMENT_OFFICE ApplicantType = 3
	ApplicantType_APPLICANT_TYPE_OTHER             ApplicantType = 4
)

// Enum value maps for ApplicantType.
var (
	ApplicantType_name = map[int32]string{
		0: "APPLICANT_TYPE_UNSPECIFIED",
		1: "APPLICANT_TYPE_CITIZEN",
		2: "APPLICANT_TYPE_ORGANIZATION",
		3: "APPLICANT_TYPE_GOVERNMENT_OFFICE",
		4: "APPLICANT_TYPE_OTHER",
	}
	ApplicantType_value = map[string]int32{
		"APPLICANT_TYPE_UNSPECIFIED":       0,
		"APPLICANT_TYPE_CITIZEN":           1,
		"APPLICANT_TYPE_ORGANIZATION":      2,
		"APPLICANT_TYPE_GOVERNMENT_OFFICE": 3,
		"APPLICANT_TYPE_OTHER":             4,
	}
)

func (x ApplicantType) Enum() *ApplicantType {
	p := new(ApplicantType)
	*p = x
	return p
}

func (x ApplicantType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApplicantType) Descriptor() protoreflect.EnumDescriptor {
	return file_darta_v1_darta_proto_enumTypes[1].Descriptor()
}

func (ApplicantType) Type() protoreflect.EnumType {
	return &file_darta_v1_darta_proto_enumTypes[1]
}

func (x ApplicantType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApplicantType.Descriptor instead.
func (ApplicantType) EnumDescriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{1}
}

type DartaReviewDecision int32

const (
	DartaReviewDecision_DARTA_REVIEW_DECISION_UNSPECIFIED    DartaReviewDecision = 0
	DartaReviewDecision_DARTA_REVIEW_DECISION_APPROVE_REVIEW DartaReviewDecision = 1
	DartaReviewDecision_DARTA_REVIEW_DECISION_EDIT_REQUIRED  DartaReviewDecision = 2
)

// Enum value maps for DartaReviewDecision.
var (
	DartaReviewDecision_name = map[int32]string{
		0: "DARTA_REVIEW_DECISION_UNSPECIFIED",
		1: "DARTA_REVIEW_DECISION_APPROVE_REVIEW",
		2: "DARTA_REVIEW_DECISION_EDIT_REQUIRED",
	}
	DartaReviewDecision_value = map[string]int32{
		"DARTA_REVIEW_DECISION_UNSPECIFIED":    0,
		"DARTA_REVIEW_DECISION_APPROVE_REVIEW": 1,
		"DARTA_REVIEW_DECISION_EDIT_REQUIRED":  2,
	}
)

func (x DartaReviewDecision) Enum() *DartaReviewDecision {
	p := new(DartaReviewDecision)
	*p = x
	return p
}

func (x DartaReviewDecision) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DartaReviewDecision) Descriptor() protoreflect.EnumDescriptor {
	return file_darta_v1_darta_proto_enumTypes[2].Descriptor()
}

func (DartaReviewDecision) Type() protoreflect.EnumType {
	return &file_darta_v1_darta_proto_enumTypes[2]
}

func (x DartaReviewDecision) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DartaReviewDecision.Descriptor instead.
func (DartaReviewDecision) EnumDescriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{2}
}

// Darta represents an incoming correspondence record
type Darta struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DartaNumber          int32                  `protobuf:"varint,2,opt,name=darta_number,json=dartaNumber,proto3" json:"darta_number,omitempty"`
	FormattedDartaNumber string                 `protobuf:"bytes,3,opt,name=formatted_darta_number,json=formattedDartaNumber,proto3" json:"formatted_darta_number,omitempty"`
	FiscalYear           *FiscalYear            `protobuf:"bytes,4,opt,name=fiscal_year,json=fiscalYear,proto3" json:"fiscal_year,omitempty"`
	Scope                Scope                  `protobuf:"varint,5,opt,name=scope,proto3,enum=darta.v1.Scope" json:"scope,omitempty"`
	Ward                 *Ward                  `protobuf:"bytes,6,opt,name=ward,proto3" json:"ward,omitempty"`
	Subject              string                 `protobuf:"bytes,7,opt,name=subject,proto3" json:"subject,omitempty"`
	Applicant            *Applicant             `protobuf:"bytes,8,opt,name=applicant,proto3" json:"applicant,omitempty"`
	IntakeChannel        IntakeChannel          `protobuf:"varint,9,opt,name=intake_channel,json=intakeChannel,proto3,enum=darta.v1.IntakeChannel" json:"intake_channel,omitempty"`
	ReceivedDate         *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=received_date,json=receivedDate,proto3" json:"received_date,omitempty"`
	EntryDate            *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=entry_date,json=entryDate,proto3" json:"entry_date,omitempty"`
	IsBackdated          bool                   `protobuf:"varint,12,opt,name=is_backdated,json=isBackdated,proto3" json:"is_backdated,omitempty"`
	BackdateReason       string                 `protobuf:"bytes,13,opt,name=backdate_reason,json=backdateReason,proto3" json:"backdate_reason,omitempty"`
	BackdateApprover     *User                  `protobuf:"bytes,14,opt,name=backdate_approver,json=backdateApprover,proto3" json:"backdate_approver,omitempty"`
	PrimaryDocument      *Attachment            `protobuf:"bytes,15,opt,name=primary_document,json=primaryDocument,proto3" json:"primary_document,omitempty"`
	Annexes              []*Attachment          `protobuf:"bytes,16,rep,name=annexes,proto3" json:"annexes,omitempty"`
	Status               DartaStatus            `protobuf:"varint,17,opt,name=status,proto3,enum=darta.v1.DartaStatus" json:"status,omitempty"`
	Priority             Priority               `protobuf:"varint,18,opt,name=priority,proto3,enum=darta.v1.Priority" json:"priority,omitempty"`
	ClassificationCode   string                 `protobuf:"bytes,19,opt,name=classification_code,json=classificationCode,proto3" json:"classification_code,omitempty"`
	AssignedTo           *OrganizationalUnit    `protobuf:"bytes,20,opt,name=assigned_to,json=assignedTo,proto3" json:"assigned_to,omitempty"`
	CurrentAssignee      *User                  `protobuf:"bytes,21,opt,name=current_assignee,json=currentAssignee,proto3" json:"current_assignee,omitempty"`
	SlaDeadline          *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=sla_deadline,json=slaDeadline,proto3" json:"sla_deadline,omitempty"`
	IsOverdue            bool                   `protobuf:"varint,23,opt,name=is_overdue,json=isOverdue,proto3" json:"is_overdue,omitempty"`
	CreatedBy            *User                  `protobuf:"bytes,24,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CreatedAt            *timestamppb.Timestamp `protobuf:"bytes,25,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamppb.Timestamp `protobuf:"bytes,26,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	AuditTrail           []*AuditEntry          `protobuf:"bytes,27,rep,name=audit_trail,json=auditTrail,proto3" json:"audit_trail,omitempty"`
	ChalaniResponseIds   []string               `protobuf:"bytes,28,rep,name=chalani_response_ids,json=chalaniResponseIds,proto3" json:"chalani_response_ids,omitempty"` // Reference to chalani IDs
	RelatedDartaIds      []string               `protobuf:"bytes,29,rep,name=related_darta_ids,json=relatedDartaIds,proto3" json:"related_darta_ids,omitempty"`          // Reference to related darta IDs
	TenantId             string                 `protobuf:"bytes,30,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Darta) Reset() {
	*x = Darta{}
	mi := &file_darta_v1_darta_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Darta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Darta) ProtoMessage() {}

func (x *Darta) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Darta.ProtoReflect.Descriptor instead.
func (*Darta) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{0}
}

func (x *Darta) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Darta) GetDartaNumber() int32 {
	if x != nil {
		return x.DartaNumber
	}
	return 0
}

func (x *Darta) GetFormattedDartaNumber() string {
	if x != nil {
		return x.FormattedDartaNumber
	}
	return ""
}

func (x *Darta) GetFiscalYear() *FiscalYear {
	if x != nil {
		return x.FiscalYear
	}
	return nil
}

func (x *Darta) GetScope() Scope {
	if x != nil {
		return x.Scope
	}
	return Scope_SCOPE_UNSPECIFIED
}

func (x *Darta) GetWard() *Ward {
	if x != nil {
		return x.Ward
	}
	return nil
}

func (x *Darta) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Darta) GetApplicant() *Applicant {
	if x != nil {
		return x.Applicant
	}
	return nil
}

func (x *Darta) GetIntakeChannel() IntakeChannel {
	if x != nil {
		return x.IntakeChannel
	}
	return IntakeChannel_INTAKE_CHANNEL_UNSPECIFIED
}

func (x *Darta) GetReceivedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedDate
	}
	return nil
}

func (x *Darta) GetEntryDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EntryDate
	}
	return nil
}

func (x *Darta) GetIsBackdated() bool {
	if x != nil {
		return x.IsBackdated
	}
	return false
}

func (x *Darta) GetBackdateReason() string {
	if x != nil {
		return x.BackdateReason
	}
	return ""
}

func (x *Darta) GetBackdateApprover() *User {
	if x != nil {
		return x.BackdateApprover
	}
	return nil
}

func (x *Darta) GetPrimaryDocument() *Attachment {
	if x != nil {
		return x.PrimaryDocument
	}
	return nil
}

func (x *Darta) GetAnnexes() []*Attachment {
	if x != nil {
		return x.Annexes
	}
	return nil
}

func (x *Darta) GetStatus() DartaStatus {
	if x != nil {
		return x.Status
	}
	return DartaStatus_DARTA_STATUS_UNSPECIFIED
}

func (x *Darta) GetPriority() Priority {
	if x != nil {
		return x.Priority
	}
	return Priority_PRIORITY_UNSPECIFIED
}

func (x *Darta) GetClassificationCode() string {
	if x != nil {
		return x.ClassificationCode
	}
	return ""
}

func (x *Darta) GetAssignedTo() *OrganizationalUnit {
	if x != nil {
		return x.AssignedTo
	}
	return nil
}

func (x *Darta) GetCurrentAssignee() *User {
	if x != nil {
		return x.CurrentAssignee
	}
	return nil
}

func (x *Darta) GetSlaDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.SlaDeadline
	}
	return nil
}

func (x *Darta) GetIsOverdue() bool {
	if x != nil {
		return x.IsOverdue
	}
	return false
}

func (x *Darta) GetCreatedBy() *User {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *Darta) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Darta) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Darta) GetAuditTrail() []*AuditEntry {
	if x != nil {
		return x.AuditTrail
	}
	return nil
}

func (x *Darta) GetChalaniResponseIds() []string {
	if x != nil {
		return x.ChalaniResponseIds
	}
	return nil
}

func (x *Darta) GetRelatedDartaIds() []string {
	if x != nil {
		return x.RelatedDartaIds
	}
	return nil
}

func (x *Darta) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// Applicant represents the person/organization submitting the darta
type Applicant struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 ApplicantType          `protobuf:"varint,2,opt,name=type,proto3,enum=darta.v1.ApplicantType" json:"type,omitempty"`
	FullName             string                 `protobuf:"bytes,3,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Organization         string                 `protobuf:"bytes,4,opt,name=organization,proto3" json:"organization,omitempty"`
	Email                string                 `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Phone                string                 `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Address              string                 `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
	IdentificationNumber string                 `protobuf:"bytes,8,opt,name=identification_number,json=identificationNumber,proto3" json:"identification_number,omitempty"` // Citizenship/Registration number
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Applicant) Reset() {
	*x = Applicant{}
	mi := &file_darta_v1_darta_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Applicant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Applicant) ProtoMessage() {}

func (x *Applicant) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Applicant.ProtoReflect.Descriptor instead.
func (*Applicant) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{1}
}

func (x *Applicant) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Applicant) GetType() ApplicantType {
	if x != nil {
		return x.Type
	}
	return ApplicantType_APPLICANT_TYPE_UNSPECIFIED
}

func (x *Applicant) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Applicant) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *Applicant) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Applicant) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Applicant) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Applicant) GetIdentificationNumber() string {
	if x != nil {
		return x.IdentificationNumber
	}
	return ""
}

// DartaConnection for cursor-based pagination
type DartaConnection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Edges         []*DartaEdge           `protobuf:"bytes,1,rep,name=edges,proto3" json:"edges,omitempty"`
	PageInfo      *PageInfo              `protobuf:"bytes,2,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DartaConnection) Reset() {
	*x = DartaConnection{}
	mi := &file_darta_v1_darta_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DartaConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DartaConnection) ProtoMessage() {}

func (x *DartaConnection) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DartaConnection.ProtoReflect.Descriptor instead.
func (*DartaConnection) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{2}
}

func (x *DartaConnection) GetEdges() []*DartaEdge {
	if x != nil {
		return x.Edges
	}
	return nil
}

func (x *DartaConnection) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type DartaEdge struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cursor        string                 `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Node          *Darta                 `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DartaEdge) Reset() {
	*x = DartaEdge{}
	mi := &file_darta_v1_darta_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DartaEdge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DartaEdge) ProtoMessage() {}

func (x *DartaEdge) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DartaEdge.ProtoReflect.Descriptor instead.
func (*DartaEdge) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{3}
}

func (x *DartaEdge) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *DartaEdge) GetNode() *Darta {
	if x != nil {
		return x.Node
	}
	return nil
}

// DartaStats for analytics
type DartaStats struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Total                  int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	ByStatus               []*DartaStatusCount    `protobuf:"bytes,2,rep,name=by_status,json=byStatus,proto3" json:"by_status,omitempty"`
	ByChannel              []*ChannelCount        `protobuf:"bytes,3,rep,name=by_channel,json=byChannel,proto3" json:"by_channel,omitempty"`
	OverdueCount           int32                  `protobuf:"varint,4,opt,name=overdue_count,json=overdueCount,proto3" json:"overdue_count,omitempty"`
	AvgProcessingTimeHours float64                `protobuf:"fixed64,5,opt,name=avg_processing_time_hours,json=avgProcessingTimeHours,proto3" json:"avg_processing_time_hours,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DartaStats) Reset() {
	*x = DartaStats{}
	mi := &file_darta_v1_darta_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DartaStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DartaStats) ProtoMessage() {}

func (x *DartaStats) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DartaStats.ProtoReflect.Descriptor instead.
func (*DartaStats) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{4}
}

func (x *DartaStats) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DartaStats) GetByStatus() []*DartaStatusCount {
	if x != nil {
		return x.ByStatus
	}
	return nil
}

func (x *DartaStats) GetByChannel() []*ChannelCount {
	if x != nil {
		return x.ByChannel
	}
	return nil
}

func (x *DartaStats) GetOverdueCount() int32 {
	if x != nil {
		return x.OverdueCount
	}
	return 0
}

func (x *DartaStats) GetAvgProcessingTimeHours() float64 {
	if x != nil {
		return x.AvgProcessingTimeHours
	}
	return 0
}

type DartaStatusCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        DartaStatus            `protobuf:"varint,1,opt,name=status,proto3,enum=darta.v1.DartaStatus" json:"status,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DartaStatusCount) Reset() {
	*x = DartaStatusCount{}
	mi := &file_darta_v1_darta_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DartaStatusCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DartaStatusCount) ProtoMessage() {}

func (x *DartaStatusCount) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DartaStatusCount.ProtoReflect.Descriptor instead.
func (*DartaStatusCount) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{5}
}

func (x *DartaStatusCount) GetStatus() DartaStatus {
	if x != nil {
		return x.Status
	}
	return DartaStatus_DARTA_STATUS_UNSPECIFIED
}

func (x *DartaStatusCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ChannelCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channel       IntakeChannel          `protobuf:"varint,1,opt,name=channel,proto3,enum=darta.v1.IntakeChannel" json:"channel,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelCount) Reset() {
	*x = ChannelCount{}
	mi := &file_darta_v1_darta_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelCount) ProtoMessage() {}

func (x *ChannelCount) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelCount.ProtoReflect.Descriptor instead.
func (*ChannelCount) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{6}
}

func (x *ChannelCount) GetChannel() IntakeChannel {
	if x != nil {
		return x.Channel
	}
	return IntakeChannel_INTAKE_CHANNEL_UNSPECIFIED
}

func (x *ChannelCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// DartaFilterInput for filtering darta list
type DartaFilterInput struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	FiscalYearId         string                 `protobuf:"bytes,1,opt,name=fiscal_year_id,json=fiscalYearId,proto3" json:"fiscal_year_id,omitempty"`
	Scope                Scope                  `protobuf:"varint,2,opt,name=scope,proto3,enum=darta.v1.Scope" json:"scope,omitempty"`
	WardId               string                 `protobuf:"bytes,3,opt,name=ward_id,json=wardId,proto3" json:"ward_id,omitempty"`
	Status               DartaStatus            `protobuf:"varint,4,opt,name=status,proto3,enum=darta.v1.DartaStatus" json:"status,omitempty"`
	Priority             Priority               `protobuf:"varint,5,opt,name=priority,proto3,enum=darta.v1.Priority" json:"priority,omitempty"`
	OrganizationalUnitId string                 `protobuf:"bytes,6,opt,name=organizational_unit_id,json=organizationalUnitId,proto3" json:"organizational_unit_id,omitempty"`
	AssigneeId           string                 `protobuf:"bytes,7,opt,name=assignee_id,json=assigneeId,proto3" json:"assignee_id,omitempty"`
	IntakeChannel        IntakeChannel          `protobuf:"varint,8,opt,name=intake_channel,json=intakeChannel,proto3,enum=darta.v1.IntakeChannel" json:"intake_channel,omitempty"`
	FromDate             *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`
	ToDate               *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`
	Search               string                 `protobuf:"bytes,11,opt,name=search,proto3" json:"search,omitempty"` // Search in subject, applicant name, etc.
	IsOverdue            bool                   `protobuf:"varint,12,opt,name=is_overdue,json=isOverdue,proto3" json:"is_overdue,omitempty"`
	TenantId             string                 `protobuf:"bytes,13,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DartaFilterInput) Reset() {
	*x = DartaFilterInput{}
	mi := &file_darta_v1_darta_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DartaFilterInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DartaFilterInput) ProtoMessage() {}

func (x *DartaFilterInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DartaFilterInput.ProtoReflect.Descriptor instead.
func (*DartaFilterInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{7}
}

func (x *DartaFilterInput) GetFiscalYearId() string {
	if x != nil {
		return x.FiscalYearId
	}
	return ""
}

func (x *DartaFilterInput) GetScope() Scope {
	if x != nil {
		return x.Scope
	}
	return Scope_SCOPE_UNSPECIFIED
}

func (x *DartaFilterInput) GetWardId() string {
	if x != nil {
		return x.WardId
	}
	return ""
}

func (x *DartaFilterInput) GetStatus() DartaStatus {
	if x != nil {
		return x.Status
	}
	return DartaStatus_DARTA_STATUS_UNSPECIFIED
}

func (x *DartaFilterInput) GetPriority() Priority {
	if x != nil {
		return x.Priority
	}
	return Priority_PRIORITY_UNSPECIFIED
}

func (x *DartaFilterInput) GetOrganizationalUnitId() string {
	if x != nil {
		return x.OrganizationalUnitId
	}
	return ""
}

func (x *DartaFilterInput) GetAssigneeId() string {
	if x != nil {
		return x.AssigneeId
	}
	return ""
}

func (x *DartaFilterInput) GetIntakeChannel() IntakeChannel {
	if x != nil {
		return x.IntakeChannel
	}
	return IntakeChannel_INTAKE_CHANNEL_UNSPECIFIED
}

func (x *DartaFilterInput) GetFromDate() *timestamppb.Timestamp {
	if x != nil {
		return x.FromDate
	}
	return nil
}

func (x *DartaFilterInput) GetToDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ToDate
	}
	return nil
}

func (x *DartaFilterInput) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *DartaFilterInput) GetIsOverdue() bool {
	if x != nil {
		return x.IsOverdue
	}
	return false
}

func (x *DartaFilterInput) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// ApplicantInput for creating/updating applicant
type ApplicantInput struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Type                 ApplicantType          `protobuf:"varint,1,opt,name=type,proto3,enum=darta.v1.ApplicantType" json:"type,omitempty"`
	FullName             string                 `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Organization         string                 `protobuf:"bytes,3,opt,name=organization,proto3" json:"organization,omitempty"`
	Email                string                 `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Phone                string                 `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	Address              string                 `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	IdentificationNumber string                 `protobuf:"bytes,7,opt,name=identification_number,json=identificationNumber,proto3" json:"identification_number,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ApplicantInput) Reset() {
	*x = ApplicantInput{}
	mi := &file_darta_v1_darta_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicantInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicantInput) ProtoMessage() {}

func (x *ApplicantInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicantInput.ProtoReflect.Descriptor instead.
func (*ApplicantInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{8}
}

func (x *ApplicantInput) GetType() ApplicantType {
	if x != nil {
		return x.Type
	}
	return ApplicantType_APPLICANT_TYPE_UNSPECIFIED
}

func (x *ApplicantInput) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *ApplicantInput) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *ApplicantInput) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ApplicantInput) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ApplicantInput) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ApplicantInput) GetIdentificationNumber() string {
	if x != nil {
		return x.IdentificationNumber
	}
	return ""
}

// CreateDartaInput for creating a new darta
type CreateDartaInput struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Scope             Scope                  `protobuf:"varint,1,opt,name=scope,proto3,enum=darta.v1.Scope" json:"scope,omitempty"`
	WardId            string                 `protobuf:"bytes,2,opt,name=ward_id,json=wardId,proto3" json:"ward_id,omitempty"`
	Subject           string                 `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	Applicant         *ApplicantInput        `protobuf:"bytes,4,opt,name=applicant,proto3" json:"applicant,omitempty"`
	IntakeChannel     IntakeChannel          `protobuf:"varint,5,opt,name=intake_channel,json=intakeChannel,proto3,enum=darta.v1.IntakeChannel" json:"intake_channel,omitempty"`
	ReceivedDate      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=received_date,json=receivedDate,proto3" json:"received_date,omitempty"`
	PrimaryDocumentId string                 `protobuf:"bytes,7,opt,name=primary_document_id,json=primaryDocumentId,proto3" json:"primary_document_id,omitempty"`
	AnnexIds          []string               `protobuf:"bytes,8,rep,name=annex_ids,json=annexIds,proto3" json:"annex_ids,omitempty"`
	Priority          Priority               `protobuf:"varint,9,opt,name=priority,proto3,enum=darta.v1.Priority" json:"priority,omitempty"`
	IdempotencyKey    string                 `protobuf:"bytes,10,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`
	TenantId          string                 `protobuf:"bytes,11,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateDartaInput) Reset() {
	*x = CreateDartaInput{}
	mi := &file_darta_v1_darta_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDartaInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDartaInput) ProtoMessage() {}

func (x *CreateDartaInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDartaInput.ProtoReflect.Descriptor instead.
func (*CreateDartaInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{9}
}

func (x *CreateDartaInput) GetScope() Scope {
	if x != nil {
		return x.Scope
	}
	return Scope_SCOPE_UNSPECIFIED
}

func (x *CreateDartaInput) GetWardId() string {
	if x != nil {
		return x.WardId
	}
	return ""
}

func (x *CreateDartaInput) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CreateDartaInput) GetApplicant() *ApplicantInput {
	if x != nil {
		return x.Applicant
	}
	return nil
}

func (x *CreateDartaInput) GetIntakeChannel() IntakeChannel {
	if x != nil {
		return x.IntakeChannel
	}
	return IntakeChannel_INTAKE_CHANNEL_UNSPECIFIED
}

func (x *CreateDartaInput) GetReceivedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedDate
	}
	return nil
}

func (x *CreateDartaInput) GetPrimaryDocumentId() string {
	if x != nil {
		return x.PrimaryDocumentId
	}
	return ""
}

func (x *CreateDartaInput) GetAnnexIds() []string {
	if x != nil {
		return x.AnnexIds
	}
	return nil
}

func (x *CreateDartaInput) GetPriority() Priority {
	if x != nil {
		return x.Priority
	}
	return Priority_PRIORITY_UNSPECIFIED
}

func (x *CreateDartaInput) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *CreateDartaInput) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// RouteDartaInput for routing darta to a unit/user
type RouteDartaInput struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	DartaId              string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	OrganizationalUnitId string                 `protobuf:"bytes,2,opt,name=organizational_unit_id,json=organizationalUnitId,proto3" json:"organizational_unit_id,omitempty"`
	AssigneeId           string                 `protobuf:"bytes,3,opt,name=assignee_id,json=assigneeId,proto3" json:"assignee_id,omitempty"`
	Priority             Priority               `protobuf:"varint,4,opt,name=priority,proto3,enum=darta.v1.Priority" json:"priority,omitempty"`
	SlaHours             int32                  `protobuf:"varint,5,opt,name=sla_hours,json=slaHours,proto3" json:"sla_hours,omitempty"`
	Notes                string                 `protobuf:"bytes,6,opt,name=notes,proto3" json:"notes,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *RouteDartaInput) Reset() {
	*x = RouteDartaInput{}
	mi := &file_darta_v1_darta_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteDartaInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteDartaInput) ProtoMessage() {}

func (x *RouteDartaInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteDartaInput.ProtoReflect.Descriptor instead.
func (*RouteDartaInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{10}
}

func (x *RouteDartaInput) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

func (x *RouteDartaInput) GetOrganizationalUnitId() string {
	if x != nil {
		return x.OrganizationalUnitId
	}
	return ""
}

func (x *RouteDartaInput) GetAssigneeId() string {
	if x != nil {
		return x.AssigneeId
	}
	return ""
}

func (x *RouteDartaInput) GetPriority() Priority {
	if x != nil {
		return x.Priority
	}
	return Priority_PRIORITY_UNSPECIFIED
}

func (x *RouteDartaInput) GetSlaHours() int32 {
	if x != nil {
		return x.SlaHours
	}
	return 0
}

func (x *RouteDartaInput) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

// ReviewDartaInput for reviewing darta
type ReviewDartaInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DartaId       string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	Notes         string                 `protobuf:"bytes,2,opt,name=notes,proto3" json:"notes,omitempty"`
	Decision      DartaReviewDecision    `protobuf:"varint,3,opt,name=decision,proto3,enum=darta.v1.DartaReviewDecision" json:"decision,omitempty"`
	RequestedInfo string                 `protobuf:"bytes,4,opt,name=requested_info,json=requestedInfo,proto3" json:"requested_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewDartaInput) Reset() {
	*x = ReviewDartaInput{}
	mi := &file_darta_v1_darta_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewDartaInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewDartaInput) ProtoMessage() {}

func (x *ReviewDartaInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewDartaInput.ProtoReflect.Descriptor instead.
func (*ReviewDartaInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{11}
}

func (x *ReviewDartaInput) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

func (x *ReviewDartaInput) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *ReviewDartaInput) GetDecision() DartaReviewDecision {
	if x != nil {
		return x.Decision
	}
	return DartaReviewDecision_DARTA_REVIEW_DECISION_UNSPECIFIED
}

func (x *ReviewDartaInput) GetRequestedInfo() string {
	if x != nil {
		return x.RequestedInfo
	}
	return ""
}

// Query requests/responses
type GetDartaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDartaRequest) Reset() {
	*x = GetDartaRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDartaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDartaRequest) ProtoMessage() {}

func (x *GetDartaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDartaRequest.ProtoReflect.Descriptor instead.
func (*GetDartaRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{12}
}

func (x *GetDartaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDartaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDartaResponse) Reset() {
	*x = GetDartaResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDartaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDartaResponse) ProtoMessage() {}

func (x *GetDartaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDartaResponse.ProtoReflect.Descriptor instead.
func (*GetDartaResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{13}
}

func (x *GetDartaResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type GetDartaByNumberRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DartaNumber   int32                  `protobuf:"varint,1,opt,name=darta_number,json=dartaNumber,proto3" json:"darta_number,omitempty"`
	FiscalYearId  string                 `protobuf:"bytes,2,opt,name=fiscal_year_id,json=fiscalYearId,proto3" json:"fiscal_year_id,omitempty"`
	Scope         Scope                  `protobuf:"varint,3,opt,name=scope,proto3,enum=darta.v1.Scope" json:"scope,omitempty"`
	WardId        string                 `protobuf:"bytes,4,opt,name=ward_id,json=wardId,proto3" json:"ward_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDartaByNumberRequest) Reset() {
	*x = GetDartaByNumberRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDartaByNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDartaByNumberRequest) ProtoMessage() {}

func (x *GetDartaByNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDartaByNumberRequest.ProtoReflect.Descriptor instead.
func (*GetDartaByNumberRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{14}
}

func (x *GetDartaByNumberRequest) GetDartaNumber() int32 {
	if x != nil {
		return x.DartaNumber
	}
	return 0
}

func (x *GetDartaByNumberRequest) GetFiscalYearId() string {
	if x != nil {
		return x.FiscalYearId
	}
	return ""
}

func (x *GetDartaByNumberRequest) GetScope() Scope {
	if x != nil {
		return x.Scope
	}
	return Scope_SCOPE_UNSPECIFIED
}

func (x *GetDartaByNumberRequest) GetWardId() string {
	if x != nil {
		return x.WardId
	}
	return ""
}

type GetDartaByNumberResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDartaByNumberResponse) Reset() {
	*x = GetDartaByNumberResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDartaByNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDartaByNumberResponse) ProtoMessage() {}

func (x *GetDartaByNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDartaByNumberResponse.ProtoReflect.Descriptor instead.
func (*GetDartaByNumberResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{15}
}

func (x *GetDartaByNumberResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type ListDartasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *DartaFilterInput      `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Pagination    *PaginationInput       `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDartasRequest) Reset() {
	*x = ListDartasRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDartasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDartasRequest) ProtoMessage() {}

func (x *ListDartasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDartasRequest.ProtoReflect.Descriptor instead.
func (*ListDartasRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{16}
}

func (x *ListDartasRequest) GetFilter() *DartaFilterInput {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListDartasRequest) GetPagination() *PaginationInput {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListDartasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Connection    *DartaConnection       `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDartasResponse) Reset() {
	*x = ListDartasResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDartasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDartasResponse) ProtoMessage() {}

func (x *ListDartasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDartasResponse.ProtoReflect.Descriptor instead.
func (*ListDartasResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{17}
}

func (x *ListDartasResponse) GetConnection() *DartaConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

type GetMyDartasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        DartaStatus            `protobuf:"varint,1,opt,name=status,proto3,enum=darta.v1.DartaStatus" json:"status,omitempty"`
	Pagination    *PaginationInput       `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // From context
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMyDartasRequest) Reset() {
	*x = GetMyDartasRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMyDartasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyDartasRequest) ProtoMessage() {}

func (x *GetMyDartasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyDartasRequest.ProtoReflect.Descriptor instead.
func (*GetMyDartasRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{18}
}

func (x *GetMyDartasRequest) GetStatus() DartaStatus {
	if x != nil {
		return x.Status
	}
	return DartaStatus_DARTA_STATUS_UNSPECIFIED
}

func (x *GetMyDartasRequest) GetPagination() *PaginationInput {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetMyDartasRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetMyDartasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Connection    *DartaConnection       `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMyDartasResponse) Reset() {
	*x = GetMyDartasResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMyDartasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyDartasResponse) ProtoMessage() {}

func (x *GetMyDartasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyDartasResponse.ProtoReflect.Descriptor instead.
func (*GetMyDartasResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{19}
}

func (x *GetMyDartasResponse) GetConnection() *DartaConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

type GetDartaStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         Scope                  `protobuf:"varint,1,opt,name=scope,proto3,enum=darta.v1.Scope" json:"scope,omitempty"`
	FiscalYearId  string                 `protobuf:"bytes,2,opt,name=fiscal_year_id,json=fiscalYearId,proto3" json:"fiscal_year_id,omitempty"`
	WardId        string                 `protobuf:"bytes,3,opt,name=ward_id,json=wardId,proto3" json:"ward_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDartaStatsRequest) Reset() {
	*x = GetDartaStatsRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDartaStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDartaStatsRequest) ProtoMessage() {}

func (x *GetDartaStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDartaStatsRequest.ProtoReflect.Descriptor instead.
func (*GetDartaStatsRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{20}
}

func (x *GetDartaStatsRequest) GetScope() Scope {
	if x != nil {
		return x.Scope
	}
	return Scope_SCOPE_UNSPECIFIED
}

func (x *GetDartaStatsRequest) GetFiscalYearId() string {
	if x != nil {
		return x.FiscalYearId
	}
	return ""
}

func (x *GetDartaStatsRequest) GetWardId() string {
	if x != nil {
		return x.WardId
	}
	return ""
}

func (x *GetDartaStatsRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type GetDartaStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stats         *DartaStats            `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDartaStatsResponse) Reset() {
	*x = GetDartaStatsResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDartaStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDartaStatsResponse) ProtoMessage() {}

func (x *GetDartaStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDartaStatsResponse.ProtoReflect.Descriptor instead.
func (*GetDartaStatsResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{21}
}

func (x *GetDartaStatsResponse) GetStats() *DartaStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// Mutation requests/responses
type CreateDartaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Input         *CreateDartaInput      `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDartaRequest) Reset() {
	*x = CreateDartaRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDartaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDartaRequest) ProtoMessage() {}

func (x *CreateDartaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDartaRequest.ProtoReflect.Descriptor instead.
func (*CreateDartaRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{22}
}

func (x *CreateDartaRequest) GetInput() *CreateDartaInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type CreateDartaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDartaResponse) Reset() {
	*x = CreateDartaResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDartaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDartaResponse) ProtoMessage() {}

func (x *CreateDartaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDartaResponse.ProtoReflect.Descriptor instead.
func (*CreateDartaResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{23}
}

func (x *CreateDartaResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type SubmitDartaForReviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DartaId       string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitDartaForReviewRequest) Reset() {
	*x = SubmitDartaForReviewRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitDartaForReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitDartaForReviewRequest) ProtoMessage() {}

func (x *SubmitDartaForReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitDartaForReviewRequest.ProtoReflect.Descriptor instead.
func (*SubmitDartaForReviewRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{24}
}

func (x *SubmitDartaForReviewRequest) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

type SubmitDartaForReviewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitDartaForReviewResponse) Reset() {
	*x = SubmitDartaForReviewResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitDartaForReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitDartaForReviewResponse) ProtoMessage() {}

func (x *SubmitDartaForReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitDartaForReviewResponse.ProtoReflect.Descriptor instead.
func (*SubmitDartaForReviewResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{25}
}

func (x *SubmitDartaForReviewResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type ReviewDartaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Input         *ReviewDartaInput      `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewDartaRequest) Reset() {
	*x = ReviewDartaRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewDartaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewDartaRequest) ProtoMessage() {}

func (x *ReviewDartaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewDartaRequest.ProtoReflect.Descriptor instead.
func (*ReviewDartaRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{26}
}

func (x *ReviewDartaRequest) GetInput() *ReviewDartaInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type ReviewDartaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewDartaResponse) Reset() {
	*x = ReviewDartaResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewDartaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewDartaResponse) ProtoMessage() {}

func (x *ReviewDartaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewDartaResponse.ProtoReflect.Descriptor instead.
func (*ReviewDartaResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{27}
}

func (x *ReviewDartaResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type ClassifyDartaRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	DartaId            string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	ClassificationCode string                 `protobuf:"bytes,2,opt,name=classification_code,json=classificationCode,proto3" json:"classification_code,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ClassifyDartaRequest) Reset() {
	*x = ClassifyDartaRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClassifyDartaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassifyDartaRequest) ProtoMessage() {}

func (x *ClassifyDartaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassifyDartaRequest.ProtoReflect.Descriptor instead.
func (*ClassifyDartaRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{28}
}

func (x *ClassifyDartaRequest) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

func (x *ClassifyDartaRequest) GetClassificationCode() string {
	if x != nil {
		return x.ClassificationCode
	}
	return ""
}

type ClassifyDartaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClassifyDartaResponse) Reset() {
	*x = ClassifyDartaResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClassifyDartaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassifyDartaResponse) ProtoMessage() {}

func (x *ClassifyDartaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassifyDartaResponse.ProtoReflect.Descriptor instead.
func (*ClassifyDartaResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{29}
}

func (x *ClassifyDartaResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type ReserveDartaNumberRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DartaId       string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	AllocationId  string                 `protobuf:"bytes,2,opt,name=allocation_id,json=allocationId,proto3" json:"allocation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReserveDartaNumberRequest) Reset() {
	*x = ReserveDartaNumberRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReserveDartaNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveDartaNumberRequest) ProtoMessage() {}

func (x *ReserveDartaNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveDartaNumberRequest.ProtoReflect.Descriptor instead.
func (*ReserveDartaNumberRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{30}
}

func (x *ReserveDartaNumberRequest) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

func (x *ReserveDartaNumberRequest) GetAllocationId() string {
	if x != nil {
		return x.AllocationId
	}
	return ""
}

type ReserveDartaNumberResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReserveDartaNumberResponse) Reset() {
	*x = ReserveDartaNumberResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReserveDartaNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveDartaNumberResponse) ProtoMessage() {}

func (x *ReserveDartaNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveDartaNumberResponse.ProtoReflect.Descriptor instead.
func (*ReserveDartaNumberResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{31}
}

func (x *ReserveDartaNumberResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type FinalizeDartaRegistrationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DartaId       string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	AllocationId  string                 `protobuf:"bytes,2,opt,name=allocation_id,json=allocationId,proto3" json:"allocation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeDartaRegistrationRequest) Reset() {
	*x = FinalizeDartaRegistrationRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeDartaRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeDartaRegistrationRequest) ProtoMessage() {}

func (x *FinalizeDartaRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeDartaRegistrationRequest.ProtoReflect.Descriptor instead.
func (*FinalizeDartaRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{32}
}

func (x *FinalizeDartaRegistrationRequest) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

func (x *FinalizeDartaRegistrationRequest) GetAllocationId() string {
	if x != nil {
		return x.AllocationId
	}
	return ""
}

type FinalizeDartaRegistrationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeDartaRegistrationResponse) Reset() {
	*x = FinalizeDartaRegistrationResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeDartaRegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeDartaRegistrationResponse) ProtoMessage() {}

func (x *FinalizeDartaRegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeDartaRegistrationResponse.ProtoReflect.Descriptor instead.
func (*FinalizeDartaRegistrationResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{33}
}

func (x *FinalizeDartaRegistrationResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type DirectRegisterDartaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DartaId       string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DirectRegisterDartaRequest) Reset() {
	*x = DirectRegisterDartaRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DirectRegisterDartaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectRegisterDartaRequest) ProtoMessage() {}

func (x *DirectRegisterDartaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectRegisterDartaRequest.ProtoReflect.Descriptor instead.
func (*DirectRegisterDartaRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{34}
}

func (x *DirectRegisterDartaRequest) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

type DirectRegisterDartaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DirectRegisterDartaResponse) Reset() {
	*x = DirectRegisterDartaResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DirectRegisterDartaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectRegisterDartaResponse) ProtoMessage() {}

func (x *DirectRegisterDartaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectRegisterDartaResponse.ProtoReflect.Descriptor instead.
func (*DirectRegisterDartaResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{35}
}

func (x *DirectRegisterDartaResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type VoidDartaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DartaId       string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoidDartaRequest) Reset() {
	*x = VoidDartaRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoidDartaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoidDartaRequest) ProtoMessage() {}

func (x *VoidDartaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoidDartaRequest.ProtoReflect.Descriptor instead.
func (*VoidDartaRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{36}
}

func (x *VoidDartaRequest) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

func (x *VoidDartaRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type VoidDartaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoidDartaResponse) Reset() {
	*x = VoidDartaResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoidDartaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoidDartaResponse) ProtoMessage() {}

func (x *VoidDartaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoidDartaResponse.ProtoReflect.Descriptor instead.
func (*VoidDartaResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{37}
}

func (x *VoidDartaResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type ScanDartaRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DartaId          string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	ScanAttachmentId string                 `protobuf:"bytes,2,opt,name=scan_attachment_id,json=scanAttachmentId,proto3" json:"scan_attachment_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ScanDartaRequest) Reset() {
	*x = ScanDartaRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanDartaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanDartaRequest) ProtoMessage() {}

func (x *ScanDartaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanDartaRequest.ProtoReflect.Descriptor instead.
func (*ScanDartaRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{38}
}

func (x *ScanDartaRequest) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

func (x *ScanDartaRequest) GetScanAttachmentId() string {
	if x != nil {
		return x.ScanAttachmentId
	}
	return ""
}

type ScanDartaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanDartaResponse) Reset() {
	*x = ScanDartaResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanDartaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanDartaResponse) ProtoMessage() {}

func (x *ScanDartaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanDartaResponse.ProtoReflect.Descriptor instead.
func (*ScanDartaResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{39}
}

func (x *ScanDartaResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type EnrichDartaMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DartaId       string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	Metadata      *structpb.Struct       `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnrichDartaMetadataRequest) Reset() {
	*x = EnrichDartaMetadataRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnrichDartaMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrichDartaMetadataRequest) ProtoMessage() {}

func (x *EnrichDartaMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrichDartaMetadataRequest.ProtoReflect.Descriptor instead.
func (*EnrichDartaMetadataRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{40}
}

func (x *EnrichDartaMetadataRequest) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

func (x *EnrichDartaMetadataRequest) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type EnrichDartaMetadataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnrichDartaMetadataResponse) Reset() {
	*x = EnrichDartaMetadataResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnrichDartaMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrichDartaMetadataResponse) ProtoMessage() {}

func (x *EnrichDartaMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrichDartaMetadataResponse.ProtoReflect.Descriptor instead.
func (*EnrichDartaMetadataResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{41}
}

func (x *EnrichDartaMetadataResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type FinalizeDartaArchiveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DartaId       string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeDartaArchiveRequest) Reset() {
	*x = FinalizeDartaArchiveRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeDartaArchiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeDartaArchiveRequest) ProtoMessage() {}

func (x *FinalizeDartaArchiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeDartaArchiveRequest.ProtoReflect.Descriptor instead.
func (*FinalizeDartaArchiveRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{42}
}

func (x *FinalizeDartaArchiveRequest) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

type FinalizeDartaArchiveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeDartaArchiveResponse) Reset() {
	*x = FinalizeDartaArchiveResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeDartaArchiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeDartaArchiveResponse) ProtoMessage() {}

func (x *FinalizeDartaArchiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeDartaArchiveResponse.ProtoReflect.Descriptor instead.
func (*FinalizeDartaArchiveResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{43}
}

func (x *FinalizeDartaArchiveResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type RouteDartaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Input         *RouteDartaInput       `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouteDartaRequest) Reset() {
	*x = RouteDartaRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteDartaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteDartaRequest) ProtoMessage() {}

func (x *RouteDartaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteDartaRequest.ProtoReflect.Descriptor instead.
func (*RouteDartaRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{44}
}

func (x *RouteDartaRequest) GetInput() *RouteDartaInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type RouteDartaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouteDartaResponse) Reset() {
	*x = RouteDartaResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteDartaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteDartaResponse) ProtoMessage() {}

func (x *RouteDartaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteDartaResponse.ProtoReflect.Descriptor instead.
func (*RouteDartaResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{45}
}

func (x *RouteDartaResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type SectionReviewDartaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DartaId       string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SectionReviewDartaRequest) Reset() {
	*x = SectionReviewDartaRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SectionReviewDartaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectionReviewDartaRequest) ProtoMessage() {}

func (x *SectionReviewDartaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectionReviewDartaRequest.ProtoReflect.Descriptor instead.
func (*SectionReviewDartaRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{46}
}

func (x *SectionReviewDartaRequest) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

type SectionReviewDartaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SectionReviewDartaResponse) Reset() {
	*x = SectionReviewDartaResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SectionReviewDartaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectionReviewDartaResponse) ProtoMessage() {}

func (x *SectionReviewDartaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectionReviewDartaResponse.ProtoReflect.Descriptor instead.
func (*SectionReviewDartaResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{47}
}

func (x *SectionReviewDartaResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type RequestDartaClarificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DartaId       string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	Note          string                 `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestDartaClarificationRequest) Reset() {
	*x = RequestDartaClarificationRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestDartaClarificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestDartaClarificationRequest) ProtoMessage() {}

func (x *RequestDartaClarificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestDartaClarificationRequest.ProtoReflect.Descriptor instead.
func (*RequestDartaClarificationRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{48}
}

func (x *RequestDartaClarificationRequest) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

func (x *RequestDartaClarificationRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type RequestDartaClarificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestDartaClarificationResponse) Reset() {
	*x = RequestDartaClarificationResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestDartaClarificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestDartaClarificationResponse) ProtoMessage() {}

func (x *RequestDartaClarificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestDartaClarificationResponse.ProtoReflect.Descriptor instead.
func (*RequestDartaClarificationResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{49}
}

func (x *RequestDartaClarificationResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type ProvideDartaClarificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DartaId       string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	Note          string                 `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProvideDartaClarificationRequest) Reset() {
	*x = ProvideDartaClarificationRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProvideDartaClarificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvideDartaClarificationRequest) ProtoMessage() {}

func (x *ProvideDartaClarificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvideDartaClarificationRequest.ProtoReflect.Descriptor instead.
func (*ProvideDartaClarificationRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{50}
}

func (x *ProvideDartaClarificationRequest) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

func (x *ProvideDartaClarificationRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type ProvideDartaClarificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProvideDartaClarificationResponse) Reset() {
	*x = ProvideDartaClarificationResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProvideDartaClarificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvideDartaClarificationResponse) ProtoMessage() {}

func (x *ProvideDartaClarificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvideDartaClarificationResponse.ProtoReflect.Descriptor instead.
func (*ProvideDartaClarificationResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{51}
}

func (x *ProvideDartaClarificationResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type AcceptDartaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DartaId       string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptDartaRequest) Reset() {
	*x = AcceptDartaRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptDartaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptDartaRequest) ProtoMessage() {}

func (x *AcceptDartaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptDartaRequest.ProtoReflect.Descriptor instead.
func (*AcceptDartaRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{52}
}

func (x *AcceptDartaRequest) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

type AcceptDartaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptDartaResponse) Reset() {
	*x = AcceptDartaResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptDartaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptDartaResponse) ProtoMessage() {}

func (x *AcceptDartaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptDartaResponse.ProtoReflect.Descriptor instead.
func (*AcceptDartaResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{53}
}

func (x *AcceptDartaResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type MarkDartaActionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DartaId       string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	ActionNote    string                 `protobuf:"bytes,2,opt,name=action_note,json=actionNote,proto3" json:"action_note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkDartaActionRequest) Reset() {
	*x = MarkDartaActionRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkDartaActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkDartaActionRequest) ProtoMessage() {}

func (x *MarkDartaActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkDartaActionRequest.ProtoReflect.Descriptor instead.
func (*MarkDartaActionRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{54}
}

func (x *MarkDartaActionRequest) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

func (x *MarkDartaActionRequest) GetActionNote() string {
	if x != nil {
		return x.ActionNote
	}
	return ""
}

type MarkDartaActionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkDartaActionResponse) Reset() {
	*x = MarkDartaActionResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkDartaActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkDartaActionResponse) ProtoMessage() {}

func (x *MarkDartaActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkDartaActionResponse.ProtoReflect.Descriptor instead.
func (*MarkDartaActionResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{55}
}

func (x *MarkDartaActionResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type IssueDartaResponseRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	DartaId           string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	ResponseChalaniId string                 `protobuf:"bytes,2,opt,name=response_chalani_id,json=responseChalaniId,proto3" json:"response_chalani_id,omitempty"`
	DocAttachmentId   string                 `protobuf:"bytes,3,opt,name=doc_attachment_id,json=docAttachmentId,proto3" json:"doc_attachment_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *IssueDartaResponseRequest) Reset() {
	*x = IssueDartaResponseRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueDartaResponseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueDartaResponseRequest) ProtoMessage() {}

func (x *IssueDartaResponseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueDartaResponseRequest.ProtoReflect.Descriptor instead.
func (*IssueDartaResponseRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{56}
}

func (x *IssueDartaResponseRequest) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

func (x *IssueDartaResponseRequest) GetResponseChalaniId() string {
	if x != nil {
		return x.ResponseChalaniId
	}
	return ""
}

func (x *IssueDartaResponseRequest) GetDocAttachmentId() string {
	if x != nil {
		return x.DocAttachmentId
	}
	return ""
}

type IssueDartaResponseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssueDartaResponseResponse) Reset() {
	*x = IssueDartaResponseResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueDartaResponseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueDartaResponseResponse) ProtoMessage() {}

func (x *IssueDartaResponseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueDartaResponseResponse.ProtoReflect.Descriptor instead.
func (*IssueDartaResponseResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{57}
}

func (x *IssueDartaResponseResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type RequestDartaAckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DartaId       string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestDartaAckRequest) Reset() {
	*x = RequestDartaAckRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestDartaAckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestDartaAckRequest) ProtoMessage() {}

func (x *RequestDartaAckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestDartaAckRequest.ProtoReflect.Descriptor instead.
func (*RequestDartaAckRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{58}
}

func (x *RequestDartaAckRequest) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

type RequestDartaAckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestDartaAckResponse) Reset() {
	*x = RequestDartaAckResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestDartaAckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestDartaAckResponse) ProtoMessage() {}

func (x *RequestDartaAckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestDartaAckResponse.ProtoReflect.Descriptor instead.
func (*RequestDartaAckResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{59}
}

func (x *RequestDartaAckResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type ReceiveDartaAckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DartaId       string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveDartaAckRequest) Reset() {
	*x = ReceiveDartaAckRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveDartaAckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveDartaAckRequest) ProtoMessage() {}

func (x *ReceiveDartaAckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveDartaAckRequest.ProtoReflect.Descriptor instead.
func (*ReceiveDartaAckRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{60}
}

func (x *ReceiveDartaAckRequest) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

type ReceiveDartaAckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveDartaAckResponse) Reset() {
	*x = ReceiveDartaAckResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveDartaAckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveDartaAckResponse) ProtoMessage() {}

func (x *ReceiveDartaAckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveDartaAckResponse.ProtoReflect.Descriptor instead.
func (*ReceiveDartaAckResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{61}
}

func (x *ReceiveDartaAckResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type SupersedeDartaRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DartaId       string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	NewDartaId    string                 `protobuf:"bytes,3,opt,name=new_darta_id,json=newDartaId,proto3" json:"new_darta_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupersedeDartaRecordRequest) Reset() {
	*x = SupersedeDartaRecordRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupersedeDartaRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupersedeDartaRecordRequest) ProtoMessage() {}

func (x *SupersedeDartaRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupersedeDartaRecordRequest.ProtoReflect.Descriptor instead.
func (*SupersedeDartaRecordRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{62}
}

func (x *SupersedeDartaRecordRequest) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

func (x *SupersedeDartaRecordRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SupersedeDartaRecordRequest) GetNewDartaId() string {
	if x != nil {
		return x.NewDartaId
	}
	return ""
}

type SupersedeDartaRecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupersedeDartaRecordResponse) Reset() {
	*x = SupersedeDartaRecordResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupersedeDartaRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupersedeDartaRecordResponse) ProtoMessage() {}

func (x *SupersedeDartaRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupersedeDartaRecordResponse.ProtoReflect.Descriptor instead.
func (*SupersedeDartaRecordResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{63}
}

func (x *SupersedeDartaRecordResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

type CloseDartaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DartaId       string                 `protobuf:"bytes,1,opt,name=darta_id,json=dartaId,proto3" json:"darta_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseDartaRequest) Reset() {
	*x = CloseDartaRequest{}
	mi := &file_darta_v1_darta_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseDartaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseDartaRequest) ProtoMessage() {}

func (x *CloseDartaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseDartaRequest.ProtoReflect.Descriptor instead.
func (*CloseDartaRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{64}
}

func (x *CloseDartaRequest) GetDartaId() string {
	if x != nil {
		return x.DartaId
	}
	return ""
}

type CloseDartaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Darta         *Darta                 `protobuf:"bytes,1,opt,name=darta,proto3" json:"darta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseDartaResponse) Reset() {
	*x = CloseDartaResponse{}
	mi := &file_darta_v1_darta_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseDartaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseDartaResponse) ProtoMessage() {}

func (x *CloseDartaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_darta_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseDartaResponse.ProtoReflect.Descriptor instead.
func (*CloseDartaResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_darta_proto_rawDescGZIP(), []int{65}
}

func (x *CloseDartaResponse) GetDarta() *Darta {
	if x != nil {
		return x.Darta
	}
	return nil
}

var File_darta_v1_darta_proto protoreflect.FileDescriptor

const file_darta_v1_darta_proto_rawDesc = "" +
	"\n" +
	"\x14darta/v1/darta.proto\x12\bdarta.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x15darta/v1/common.proto\"\xb4\v\n" +
	"\x05Darta\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\fdarta_number\x18\x02 \x01(\x05R\vdartaNumber\x124\n" +
	"\x16formatted_darta_number\x18\x03 \x01(\tR\x14formattedDartaNumber\x125\n" +
	"\vfiscal_year\x18\x04 \x01(\v2\x14.darta.v1.FiscalYearR\n" +
	"fiscalYear\x12%\n" +
	"\x05scope\x18\x05 \x01(\x0e2\x0f.darta.v1.ScopeR\x05scope\x12\"\n" +
	"\x04ward\x18\x06 \x01(\v2\x0e.darta.v1.WardR\x04ward\x12\x18\n" +
	"\asubject\x18\a \x01(\tR\asubject\x121\n" +
	"\tapplicant\x18\b \x01(\v2\x13.darta.v1.ApplicantR\tapplicant\x12>\n" +
	"\x0eintake_channel\x18\t \x01(\x0e2\x17.darta.v1.IntakeChannelR\rintakeChannel\x12?\n" +
	"\rreceived_date\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\freceivedDate\x129\n" +
	"\n" +
	"entry_date\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tentryDate\x12!\n" +
	"\fis_backdated\x18\f \x01(\bR\visBackdated\x12'\n" +
	"\x0fbackdate_reason\x18\r \x01(\tR\x0ebackdateReason\x12;\n" +
	"\x11backdate_approver\x18\x0e \x01(\v2\x0e.darta.v1.UserR\x10backdateApprover\x12?\n" +
	"\x10primary_document\x18\x0f \x01(\v2\x14.darta.v1.AttachmentR\x0fprimaryDocument\x12.\n" +
	"\aannexes\x18\x10 \x03(\v2\x14.darta.v1.AttachmentR\aannexes\x12-\n" +
	"\x06status\x18\x11 \x01(\x0e2\x15.darta.v1.DartaStatusR\x06status\x12.\n" +
	"\bpriority\x18\x12 \x01(\x0e2\x12.darta.v1.PriorityR\bpriority\x12/\n" +
	"\x13classification_code\x18\x13 \x01(\tR\x12classificationCode\x12=\n" +
	"\vassigned_to\x18\x14 \x01(\v2\x1c.darta.v1.OrganizationalUnitR\n" +
	"assignedTo\x129\n" +
	"\x10current_assignee\x18\x15 \x01(\v2\x0e.darta.v1.UserR\x0fcurrentAssignee\x12=\n" +
	"\fsla_deadline\x18\x16 \x01(\v2\x1a.google.protobuf.TimestampR\vslaDeadline\x12\x1d\n" +
	"\n" +
	"is_overdue\x18\x17 \x01(\bR\tisOverdue\x12-\n" +
	"\n" +
	"created_by\x18\x18 \x01(\v2\x0e.darta.v1.UserR\tcreatedBy\x129\n" +
	"\n" +
	"created_at\x18\x19 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x1a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x125\n" +
	"\vaudit_trail\x18\x1b \x03(\v2\x14.darta.v1.AuditEntryR\n" +
	"auditTrail\x120\n" +
	"\x14chalani_response_ids\x18\x1c \x03(\tR\x12chalaniResponseIds\x12*\n" +
	"\x11related_darta_ids\x18\x1d \x03(\tR\x0frelatedDartaIds\x12\x1b\n" +
	"\ttenant_id\x18\x1e \x01(\tR\btenantId\"\x84\x02\n" +
	"\tApplicant\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12+\n" +
	"\x04type\x18\x02 \x01(\x0e2\x17.darta.v1.ApplicantTypeR\x04type\x12\x1b\n" +
	"\tfull_name\x18\x03 \x01(\tR\bfullName\x12\"\n" +
	"\forganization\x18\x04 \x01(\tR\forganization\x12\x14\n" +
	"\x05email\x18\x05 \x01(\tR\x05email\x12\x14\n" +
	"\x05phone\x18\x06 \x01(\tR\x05phone\x12\x18\n" +
	"\aaddress\x18\a \x01(\tR\aaddress\x123\n" +
	"\x15identification_number\x18\b \x01(\tR\x14identificationNumber\"m\n" +
	"\x0fDartaConnection\x12)\n" +
	"\x05edges\x18\x01 \x03(\v2\x13.darta.v1.DartaEdgeR\x05edges\x12/\n" +
	"\tpage_info\x18\x02 \x01(\v2\x12.darta.v1.PageInfoR\bpageInfo\"H\n" +
	"\tDartaEdge\x12\x16\n" +
	"\x06cursor\x18\x01 \x01(\tR\x06cursor\x12#\n" +
	"\x04node\x18\x02 \x01(\v2\x0f.darta.v1.DartaR\x04node\"\xf2\x01\n" +
	"\n" +
	"DartaStats\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x127\n" +
	"\tby_status\x18\x02 \x03(\v2\x1a.darta.v1.DartaStatusCountR\bbyStatus\x125\n" +
	"\n" +
	"by_channel\x18\x03 \x03(\v2\x16.darta.v1.ChannelCountR\tbyChannel\x12#\n" +
	"\roverdue_count\x18\x04 \x01(\x05R\foverdueCount\x129\n" +
	"\x19avg_processing_time_hours\x18\x05 \x01(\x01R\x16avgProcessingTimeHours\"W\n" +
	"\x10DartaStatusCount\x12-\n" +
	"\x06status\x18\x01 \x01(\x0e2\x15.darta.v1.DartaStatusR\x06status\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"W\n" +
	"\fChannelCount\x121\n" +
	"\achannel\x18\x01 \x01(\x0e2\x17.darta.v1.IntakeChannelR\achannel\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"\xb0\x04\n" +
	"\x10DartaFilterInput\x12$\n" +
	"\x0efiscal_year_id\x18\x01 \x01(\tR\ffiscalYearId\x12%\n" +
	"\x05scope\x18\x02 \x01(\x0e2\x0f.darta.v1.ScopeR\x05scope\x12\x17\n" +
	"\award_id\x18\x03 \x01(\tR\x06wardId\x12-\n" +
	"\x06status\x18\x04 \x01(\x0e2\x15.darta.v1.DartaStatusR\x06status\x12.\n" +
	"\bpriority\x18\x05 \x01(\x0e2\x12.darta.v1.PriorityR\bpriority\x124\n" +
	"\x16organizational_unit_id\x18\x06 \x01(\tR\x14organizationalUnitId\x12\x1f\n" +
	"\vassignee_id\x18\a \x01(\tR\n" +
	"assigneeId\x12>\n" +
	"\x0eintake_channel\x18\b \x01(\x0e2\x17.darta.v1.IntakeChannelR\rintakeChannel\x127\n" +
	"\tfrom_date\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\bfromDate\x123\n" +
	"\ato_date\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\x06toDate\x12\x16\n" +
	"\x06search\x18\v \x01(\tR\x06search\x12\x1d\n" +
	"\n" +
	"is_overdue\x18\f \x01(\bR\tisOverdue\x12\x1b\n" +
	"\ttenant_id\x18\r \x01(\tR\btenantId\"\xf9\x01\n" +
	"\x0eApplicantInput\x12+\n" +
	"\x04type\x18\x01 \x01(\x0e2\x17.darta.v1.ApplicantTypeR\x04type\x12\x1b\n" +
	"\tfull_name\x18\x02 \x01(\tR\bfullName\x12\"\n" +
	"\forganization\x18\x03 \x01(\tR\forganization\x12\x14\n" +
	"\x05email\x18\x04 \x01(\tR\x05email\x12\x14\n" +
	"\x05phone\x18\x05 \x01(\tR\x05phone\x12\x18\n" +
	"\aaddress\x18\x06 \x01(\tR\aaddress\x123\n" +
	"\x15identification_number\x18\a \x01(\tR\x14identificationNumber\"\xe8\x03\n" +
	"\x10CreateDartaInput\x12%\n" +
	"\x05scope\x18\x01 \x01(\x0e2\x0f.darta.v1.ScopeR\x05scope\x12\x17\n" +
	"\award_id\x18\x02 \x01(\tR\x06wardId\x12\x18\n" +
	"\asubject\x18\x03 \x01(\tR\asubject\x126\n" +
	"\tapplicant\x18\x04 \x01(\v2\x18.darta.v1.ApplicantInputR\tapplicant\x12>\n" +
	"\x0eintake_channel\x18\x05 \x01(\x0e2\x17.darta.v1.IntakeChannelR\rintakeChannel\x12?\n" +
	"\rreceived_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\freceivedDate\x12.\n" +
	"\x13primary_document_id\x18\a \x01(\tR\x11primaryDocumentId\x12\x1b\n" +
	"\tannex_ids\x18\b \x03(\tR\bannexIds\x12.\n" +
	"\bpriority\x18\t \x01(\x0e2\x12.darta.v1.PriorityR\bpriority\x12'\n" +
	"\x0fidempotency_key\x18\n" +
	" \x01(\tR\x0eidempotencyKey\x12\x1b\n" +
	"\ttenant_id\x18\v \x01(\tR\btenantId\"\xe6\x01\n" +
	"\x0fRouteDartaInput\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\x124\n" +
	"\x16organizational_unit_id\x18\x02 \x01(\tR\x14organizationalUnitId\x12\x1f\n" +
	"\vassignee_id\x18\x03 \x01(\tR\n" +
	"assigneeId\x12.\n" +
	"\bpriority\x18\x04 \x01(\x0e2\x12.darta.v1.PriorityR\bpriority\x12\x1b\n" +
	"\tsla_hours\x18\x05 \x01(\x05R\bslaHours\x12\x14\n" +
	"\x05notes\x18\x06 \x01(\tR\x05notes\"\xa5\x01\n" +
	"\x10ReviewDartaInput\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\x12\x14\n" +
	"\x05notes\x18\x02 \x01(\tR\x05notes\x129\n" +
	"\bdecision\x18\x03 \x01(\x0e2\x1d.darta.v1.DartaReviewDecisionR\bdecision\x12%\n" +
	"\x0erequested_info\x18\x04 \x01(\tR\rrequestedInfo\"!\n" +
	"\x0fGetDartaRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"9\n" +
	"\x10GetDartaResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"\xa2\x01\n" +
	"\x17GetDartaByNumberRequest\x12!\n" +
	"\fdarta_number\x18\x01 \x01(\x05R\vdartaNumber\x12$\n" +
	"\x0efiscal_year_id\x18\x02 \x01(\tR\ffiscalYearId\x12%\n" +
	"\x05scope\x18\x03 \x01(\x0e2\x0f.darta.v1.ScopeR\x05scope\x12\x17\n" +
	"\award_id\x18\x04 \x01(\tR\x06wardId\"A\n" +
	"\x18GetDartaByNumberResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"\x82\x01\n" +
	"\x11ListDartasRequest\x122\n" +
	"\x06filter\x18\x01 \x01(\v2\x1a.darta.v1.DartaFilterInputR\x06filter\x129\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x19.darta.v1.PaginationInputR\n" +
	"pagination\"O\n" +
	"\x12ListDartasResponse\x129\n" +
	"\n" +
	"connection\x18\x01 \x01(\v2\x19.darta.v1.DartaConnectionR\n" +
	"connection\"\x97\x01\n" +
	"\x12GetMyDartasRequest\x12-\n" +
	"\x06status\x18\x01 \x01(\x0e2\x15.darta.v1.DartaStatusR\x06status\x129\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x19.darta.v1.PaginationInputR\n" +
	"pagination\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\"P\n" +
	"\x13GetMyDartasResponse\x129\n" +
	"\n" +
	"connection\x18\x01 \x01(\v2\x19.darta.v1.DartaConnectionR\n" +
	"connection\"\x99\x01\n" +
	"\x14GetDartaStatsRequest\x12%\n" +
	"\x05scope\x18\x01 \x01(\x0e2\x0f.darta.v1.ScopeR\x05scope\x12$\n" +
	"\x0efiscal_year_id\x18\x02 \x01(\tR\ffiscalYearId\x12\x17\n" +
	"\award_id\x18\x03 \x01(\tR\x06wardId\x12\x1b\n" +
	"\ttenant_id\x18\x04 \x01(\tR\btenantId\"C\n" +
	"\x15GetDartaStatsResponse\x12*\n" +
	"\x05stats\x18\x01 \x01(\v2\x14.darta.v1.DartaStatsR\x05stats\"F\n" +
	"\x12CreateDartaRequest\x120\n" +
	"\x05input\x18\x01 \x01(\v2\x1a.darta.v1.CreateDartaInputR\x05input\"<\n" +
	"\x13CreateDartaResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"8\n" +
	"\x1bSubmitDartaForReviewRequest\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\"E\n" +
	"\x1cSubmitDartaForReviewResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"F\n" +
	"\x12ReviewDartaRequest\x120\n" +
	"\x05input\x18\x01 \x01(\v2\x1a.darta.v1.ReviewDartaInputR\x05input\"<\n" +
	"\x13ReviewDartaResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"b\n" +
	"\x14ClassifyDartaRequest\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\x12/\n" +
	"\x13classification_code\x18\x02 \x01(\tR\x12classificationCode\">\n" +
	"\x15ClassifyDartaResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"[\n" +
	"\x19ReserveDartaNumberRequest\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\x12#\n" +
	"\rallocation_id\x18\x02 \x01(\tR\fallocationId\"C\n" +
	"\x1aReserveDartaNumberResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"b\n" +
	" FinalizeDartaRegistrationRequest\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\x12#\n" +
	"\rallocation_id\x18\x02 \x01(\tR\fallocationId\"J\n" +
	"!FinalizeDartaRegistrationResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"7\n" +
	"\x1aDirectRegisterDartaRequest\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\"D\n" +
	"\x1bDirectRegisterDartaResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"E\n" +
	"\x10VoidDartaRequest\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\":\n" +
	"\x11VoidDartaResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"[\n" +
	"\x10ScanDartaRequest\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\x12,\n" +
	"\x12scan_attachment_id\x18\x02 \x01(\tR\x10scanAttachmentId\":\n" +
	"\x11ScanDartaResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"l\n" +
	"\x1aEnrichDartaMetadataRequest\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\x123\n" +
	"\bmetadata\x18\x02 \x01(\v2\x17.google.protobuf.StructR\bmetadata\"D\n" +
	"\x1bEnrichDartaMetadataResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"8\n" +
	"\x1bFinalizeDartaArchiveRequest\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\"E\n" +
	"\x1cFinalizeDartaArchiveResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"D\n" +
	"\x11RouteDartaRequest\x12/\n" +
	"\x05input\x18\x01 \x01(\v2\x19.darta.v1.RouteDartaInputR\x05input\";\n" +
	"\x12RouteDartaResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"6\n" +
	"\x19SectionReviewDartaRequest\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\"C\n" +
	"\x1aSectionReviewDartaResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"Q\n" +
	" RequestDartaClarificationRequest\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\x12\x12\n" +
	"\x04note\x18\x02 \x01(\tR\x04note\"J\n" +
	"!RequestDartaClarificationResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"Q\n" +
	" ProvideDartaClarificationRequest\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\x12\x12\n" +
	"\x04note\x18\x02 \x01(\tR\x04note\"J\n" +
	"!ProvideDartaClarificationResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"/\n" +
	"\x12AcceptDartaRequest\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\"<\n" +
	"\x13AcceptDartaResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"T\n" +
	"\x16MarkDartaActionRequest\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\x12\x1f\n" +
	"\vaction_note\x18\x02 \x01(\tR\n" +
	"actionNote\"@\n" +
	"\x17MarkDartaActionResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"\x92\x01\n" +
	"\x19IssueDartaResponseRequest\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\x12.\n" +
	"\x13response_chalani_id\x18\x02 \x01(\tR\x11responseChalaniId\x12*\n" +
	"\x11doc_attachment_id\x18\x03 \x01(\tR\x0fdocAttachmentId\"C\n" +
	"\x1aIssueDartaResponseResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"3\n" +
	"\x16RequestDartaAckRequest\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\"@\n" +
	"\x17RequestDartaAckResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"3\n" +
	"\x16ReceiveDartaAckRequest\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\"@\n" +
	"\x17ReceiveDartaAckResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\"r\n" +
	"\x1bSupersedeDartaRecordRequest\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12 \n" +
	"\fnew_darta_id\x18\x03 \x01(\tR\n" +
	"newDartaId\"E\n" +
	"\x1cSupersedeDartaRecordResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta\".\n" +
	"\x11CloseDartaRequest\x12\x19\n" +
	"\bdarta_id\x18\x01 \x01(\tR\adartaId\";\n" +
	"\x12CloseDartaResponse\x12%\n" +
	"\x05darta\x18\x01 \x01(\v2\x0f.darta.v1.DartaR\x05darta*\xf9\x04\n" +
	"\vDartaStatus\x12\x1c\n" +
	"\x18DARTA_STATUS_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12DARTA_STATUS_DRAFT\x10\x01\x12\x1f\n" +
	"\x1bDARTA_STATUS_PENDING_REVIEW\x10\x02\x12\x1f\n" +
	"\x1bDARTA_STATUS_CLASSIFICATION\x10\x03\x12 \n" +
	"\x1cDARTA_STATUS_NUMBER_RESERVED\x10\x04\x12\x1b\n" +
	"\x17DARTA_STATUS_REGISTERED\x10\x05\x12\x17\n" +
	"\x13DARTA_STATUS_VOIDED\x10\x06\x12\x18\n" +
	"\x14DARTA_STATUS_SCANNED\x10\a\x12\"\n" +
	"\x1eDARTA_STATUS_METADATA_ENRICHED\x10\b\x12#\n" +
	"\x1fDARTA_STATUS_DIGITALLY_ARCHIVED\x10\t\x12\x19\n" +
	"\x15DARTA_STATUS_ASSIGNED\x10\n" +
	"\x12%\n" +
	"!DARTA_STATUS_IN_REVIEW_BY_SECTION\x10\v\x12$\n" +
	" DARTA_STATUS_NEEDS_CLARIFICATION\x10\f\x12\x19\n" +
	"\x15DARTA_STATUS_ACCEPTED\x10\r\x12\x1d\n" +
	"\x19DARTA_STATUS_ACTION_TAKEN\x10\x0e\x12 \n" +
	"\x1cDARTA_STATUS_RESPONSE_ISSUED\x10\x0f\x12\x1e\n" +
	"\x1aDARTA_STATUS_ACK_REQUESTED\x10\x10\x12\x1d\n" +
	"\x19DARTA_STATUS_ACK_RECEIVED\x10\x11\x12\x1b\n" +
	"\x17DARTA_STATUS_SUPERSEDED\x10\x12\x12\x17\n" +
	"\x13DARTA_STATUS_CLOSED\x10\x13*\xac\x01\n" +
	"\rApplicantType\x12\x1e\n" +
	"\x1aAPPLICANT_TYPE_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16APPLICANT_TYPE_CITIZEN\x10\x01\x12\x1f\n" +
	"\x1bAPPLICANT_TYPE_ORGANIZATION\x10\x02\x12$\n" +
	" APPLICANT_TYPE_GOVERNMENT_OFFICE\x10\x03\x12\x18\n" +
	"\x14APPLICANT_TYPE_OTHER\x10\x04*\x8f\x01\n" +
	"\x13DartaReviewDecision\x12%\n" +
	"!DARTA_REVIEW_DECISION_UNSPECIFIED\x10\x00\x12(\n" +
	"$DARTA_REVIEW_DECISION_APPROVE_REVIEW\x10\x01\x12'\n" +
	"#DARTA_REVIEW_DECISION_EDIT_REQUIRED\x10\x022\xbd\x13\n" +
	"\fDartaService\x12A\n" +
	"\bGetDarta\x12\x19.darta.v1.GetDartaRequest\x1a\x1a.darta.v1.GetDartaResponse\x12Y\n" +
	"\x10GetDartaByNumber\x12!.darta.v1.GetDartaByNumberRequest\x1a\".darta.v1.GetDartaByNumberResponse\x12G\n" +
	"\n" +
	"ListDartas\x12\x1b.darta.v1.ListDartasRequest\x1a\x1c.darta.v1.ListDartasResponse\x12J\n" +
	"\vGetMyDartas\x12\x1c.darta.v1.GetMyDartasRequest\x1a\x1d.darta.v1.GetMyDartasResponse\x12P\n" +
	"\rGetDartaStats\x12\x1e.darta.v1.GetDartaStatsRequest\x1a\x1f.darta.v1.GetDartaStatsResponse\x12J\n" +
	"\vCreateDarta\x12\x1c.darta.v1.CreateDartaRequest\x1a\x1d.darta.v1.CreateDartaResponse\x12e\n" +
	"\x14SubmitDartaForReview\x12%.darta.v1.SubmitDartaForReviewRequest\x1a&.darta.v1.SubmitDartaForReviewResponse\x12J\n" +
	"\vReviewDarta\x12\x1c.darta.v1.ReviewDartaRequest\x1a\x1d.darta.v1.ReviewDartaResponse\x12P\n" +
	"\rClassifyDarta\x12\x1e.darta.v1.ClassifyDartaRequest\x1a\x1f.darta.v1.ClassifyDartaResponse\x12_\n" +
	"\x12ReserveDartaNumber\x12#.darta.v1.ReserveDartaNumberRequest\x1a$.darta.v1.ReserveDartaNumberResponse\x12t\n" +
	"\x19FinalizeDartaRegistration\x12*.darta.v1.FinalizeDartaRegistrationRequest\x1a+.darta.v1.FinalizeDartaRegistrationResponse\x12b\n" +
	"\x13DirectRegisterDarta\x12$.darta.v1.DirectRegisterDartaRequest\x1a%.darta.v1.DirectRegisterDartaResponse\x12D\n" +
	"\tVoidDarta\x12\x1a.darta.v1.VoidDartaRequest\x1a\x1b.darta.v1.VoidDartaResponse\x12D\n" +
	"\tScanDarta\x12\x1a.darta.v1.ScanDartaRequest\x1a\x1b.darta.v1.ScanDartaResponse\x12b\n" +
	"\x13EnrichDartaMetadata\x12$.darta.v1.EnrichDartaMetadataRequest\x1a%.darta.v1.EnrichDartaMetadataResponse\x12e\n" +
	"\x14FinalizeDartaArchive\x12%.darta.v1.FinalizeDartaArchiveRequest\x1a&.darta.v1.FinalizeDartaArchiveResponse\x12G\n" +
	"\n" +
	"RouteDarta\x12\x1b.darta.v1.RouteDartaRequest\x1a\x1c.darta.v1.RouteDartaResponse\x12_\n" +
	"\x12SectionReviewDarta\x12#.darta.v1.SectionReviewDartaRequest\x1a$.darta.v1.SectionReviewDartaResponse\x12t\n" +
	"\x19RequestDartaClarification\x12*.darta.v1.RequestDartaClarificationRequest\x1a+.darta.v1.RequestDartaClarificationResponse\x12t\n" +
	"\x19ProvideDartaClarification\x12*.darta.v1.ProvideDartaClarificationRequest\x1a+.darta.v1.ProvideDartaClarificationResponse\x12J\n" +
	"\vAcceptDarta\x12\x1c.darta.v1.AcceptDartaRequest\x1a\x1d.darta.v1.AcceptDartaResponse\x12V\n" +
	"\x0fMarkDartaAction\x12 .darta.v1.MarkDartaActionRequest\x1a!.darta.v1.MarkDartaActionResponse\x12_\n" +
	"\x12IssueDartaResponse\x12#.darta.v1.IssueDartaResponseRequest\x1a$.darta.v1.IssueDartaResponseResponse\x12V\n" +
	"\x0fRequestDartaAck\x12 .darta.v1.RequestDartaAckRequest\x1a!.darta.v1.RequestDartaAckResponse\x12V\n" +
	"\x0fReceiveDartaAck\x12 .darta.v1.ReceiveDartaAckRequest\x1a!.darta.v1.ReceiveDartaAckResponse\x12e\n" +
	"\x14SupersedeDartaRecord\x12%.darta.v1.SupersedeDartaRecordRequest\x1a&.darta.v1.SupersedeDartaRecordResponse\x12G\n" +
	"\n" +
	"CloseDarta\x12\x1b.darta.v1.CloseDartaRequest\x1a\x1c.darta.v1.CloseDartaResponse\x12J\n" +
	"\vHealthCheck\x12\x1c.darta.v1.HealthCheckRequest\x1a\x1d.darta.v1.HealthCheckResponseB9Z7git.ninjainfosys.com/ePalika/proto/gen/darta/v1;dartav1b\x06proto3"

var (
	file_darta_v1_darta_proto_rawDescOnce sync.Once
	file_darta_v1_darta_proto_rawDescData []byte
)

func file_darta_v1_darta_proto_rawDescGZIP() []byte {
	file_darta_v1_darta_proto_rawDescOnce.Do(func() {
		file_darta_v1_darta_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_darta_v1_darta_proto_rawDesc), len(file_darta_v1_darta_proto_rawDesc)))
	})
	return file_darta_v1_darta_proto_rawDescData
}

var file_darta_v1_darta_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_darta_v1_darta_proto_msgTypes = make([]protoimpl.MessageInfo, 66)
var file_darta_v1_darta_proto_goTypes = []any{
	(DartaStatus)(0),                          // 0: darta.v1.DartaStatus
	(ApplicantType)(0),                        // 1: darta.v1.ApplicantType
	(DartaReviewDecision)(0),                  // 2: darta.v1.DartaReviewDecision
	(*Darta)(nil),                             // 3: darta.v1.Darta
	(*Applicant)(nil),                         // 4: darta.v1.Applicant
	(*DartaConnection)(nil),                   // 5: darta.v1.DartaConnection
	(*DartaEdge)(nil),                         // 6: darta.v1.DartaEdge
	(*DartaStats)(nil),                        // 7: darta.v1.DartaStats
	(*DartaStatusCount)(nil),                  // 8: darta.v1.DartaStatusCount
	(*ChannelCount)(nil),                      // 9: darta.v1.ChannelCount
	(*DartaFilterInput)(nil),                  // 10: darta.v1.DartaFilterInput
	(*ApplicantInput)(nil),                    // 11: darta.v1.ApplicantInput
	(*CreateDartaInput)(nil),                  // 12: darta.v1.CreateDartaInput
	(*RouteDartaInput)(nil),                   // 13: darta.v1.RouteDartaInput
	(*ReviewDartaInput)(nil),                  // 14: darta.v1.ReviewDartaInput
	(*GetDartaRequest)(nil),                   // 15: darta.v1.GetDartaRequest
	(*GetDartaResponse)(nil),                  // 16: darta.v1.GetDartaResponse
	(*GetDartaByNumberRequest)(nil),           // 17: darta.v1.GetDartaByNumberRequest
	(*GetDartaByNumberResponse)(nil),          // 18: darta.v1.GetDartaByNumberResponse
	(*ListDartasRequest)(nil),                 // 19: darta.v1.ListDartasRequest
	(*ListDartasResponse)(nil),                // 20: darta.v1.ListDartasResponse
	(*GetMyDartasRequest)(nil),                // 21: darta.v1.GetMyDartasRequest
	(*GetMyDartasResponse)(nil),               // 22: darta.v1.GetMyDartasResponse
	(*GetDartaStatsRequest)(nil),              // 23: darta.v1.GetDartaStatsRequest
	(*GetDartaStatsResponse)(nil),             // 24: darta.v1.GetDartaStatsResponse
	(*CreateDartaRequest)(nil),                // 25: darta.v1.CreateDartaRequest
	(*CreateDartaResponse)(nil),               // 26: darta.v1.CreateDartaResponse
	(*SubmitDartaForReviewRequest)(nil),       // 27: darta.v1.SubmitDartaForReviewRequest
	(*SubmitDartaForReviewResponse)(nil),      // 28: darta.v1.SubmitDartaForReviewResponse
	(*ReviewDartaRequest)(nil),                // 29: darta.v1.ReviewDartaRequest
	(*ReviewDartaResponse)(nil),               // 30: darta.v1.ReviewDartaResponse
	(*ClassifyDartaRequest)(nil),              // 31: darta.v1.ClassifyDartaRequest
	(*ClassifyDartaResponse)(nil),             // 32: darta.v1.ClassifyDartaResponse
	(*ReserveDartaNumberRequest)(nil),         // 33: darta.v1.ReserveDartaNumberRequest
	(*ReserveDartaNumberResponse)(nil),        // 34: darta.v1.ReserveDartaNumberResponse
	(*FinalizeDartaRegistrationRequest)(nil),  // 35: darta.v1.FinalizeDartaRegistrationRequest
	(*FinalizeDartaRegistrationResponse)(nil), // 36: darta.v1.FinalizeDartaRegistrationResponse
	(*DirectRegisterDartaRequest)(nil),        // 37: darta.v1.DirectRegisterDartaRequest
	(*DirectRegisterDartaResponse)(nil),       // 38: darta.v1.DirectRegisterDartaResponse
	(*VoidDartaRequest)(nil),                  // 39: darta.v1.VoidDartaRequest
	(*VoidDartaResponse)(nil),                 // 40: darta.v1.VoidDartaResponse
	(*ScanDartaRequest)(nil),                  // 41: darta.v1.ScanDartaRequest
	(*ScanDartaResponse)(nil),                 // 42: darta.v1.ScanDartaResponse
	(*EnrichDartaMetadataRequest)(nil),        // 43: darta.v1.EnrichDartaMetadataRequest
	(*EnrichDartaMetadataResponse)(nil),       // 44: darta.v1.EnrichDartaMetadataResponse
	(*FinalizeDartaArchiveRequest)(nil),       // 45: darta.v1.FinalizeDartaArchiveRequest
	(*FinalizeDartaArchiveResponse)(nil),      // 46: darta.v1.FinalizeDartaArchiveResponse
	(*RouteDartaRequest)(nil),                 // 47: darta.v1.RouteDartaRequest
	(*RouteDartaResponse)(nil),                // 48: darta.v1.RouteDartaResponse
	(*SectionReviewDartaRequest)(nil),         // 49: darta.v1.SectionReviewDartaRequest
	(*SectionReviewDartaResponse)(nil),        // 50: darta.v1.SectionReviewDartaResponse
	(*RequestDartaClarificationRequest)(nil),  // 51: darta.v1.RequestDartaClarificationRequest
	(*RequestDartaClarificationResponse)(nil), // 52: darta.v1.RequestDartaClarificationResponse
	(*ProvideDartaClarificationRequest)(nil),  // 53: darta.v1.ProvideDartaClarificationRequest
	(*ProvideDartaClarificationResponse)(nil), // 54: darta.v1.ProvideDartaClarificationResponse
	(*AcceptDartaRequest)(nil),                // 55: darta.v1.AcceptDartaRequest
	(*AcceptDartaResponse)(nil),               // 56: darta.v1.AcceptDartaResponse
	(*MarkDartaActionRequest)(nil),            // 57: darta.v1.MarkDartaActionRequest
	(*MarkDartaActionResponse)(nil),           // 58: darta.v1.MarkDartaActionResponse
	(*IssueDartaResponseRequest)(nil),         // 59: darta.v1.IssueDartaResponseRequest
	(*IssueDartaResponseResponse)(nil),        // 60: darta.v1.IssueDartaResponseResponse
	(*RequestDartaAckRequest)(nil),            // 61: darta.v1.RequestDartaAckRequest
	(*RequestDartaAckResponse)(nil),           // 62: darta.v1.RequestDartaAckResponse
	(*ReceiveDartaAckRequest)(nil),            // 63: darta.v1.ReceiveDartaAckRequest
	(*ReceiveDartaAckResponse)(nil),           // 64: darta.v1.ReceiveDartaAckResponse
	(*SupersedeDartaRecordRequest)(nil),       // 65: darta.v1.SupersedeDartaRecordRequest
	(*SupersedeDartaRecordResponse)(nil),      // 66: darta.v1.SupersedeDartaRecordResponse
	(*CloseDartaRequest)(nil),                 // 67: darta.v1.CloseDartaRequest
	(*CloseDartaResponse)(nil),                // 68: darta.v1.CloseDartaResponse
	(*FiscalYear)(nil),                        // 69: darta.v1.FiscalYear
	(Scope)(0),                                // 70: darta.v1.Scope
	(*Ward)(nil),                              // 71: darta.v1.Ward
	(IntakeChannel)(0),                        // 72: darta.v1.IntakeChannel
	(*timestamppb.Timestamp)(nil),             // 73: google.protobuf.Timestamp
	(*User)(nil),                              // 74: darta.v1.User
	(*Attachment)(nil),                        // 75: darta.v1.Attachment
	(Priority)(0),                             // 76: darta.v1.Priority
	(*OrganizationalUnit)(nil),                // 77: darta.v1.OrganizationalUnit
	(*AuditEntry)(nil),                        // 78: darta.v1.AuditEntry
	(*PageInfo)(nil),                          // 79: darta.v1.PageInfo
	(*PaginationInput)(nil),                   // 80: darta.v1.PaginationInput
	(*structpb.Struct)(nil),                   // 81: google.protobuf.Struct
	(*HealthCheckRequest)(nil),                // 82: darta.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),               // 83: darta.v1.HealthCheckResponse
}
var file_darta_v1_darta_proto_depIdxs = []int32{
	69,  // 0: darta.v1.Darta.fiscal_year:type_name -> darta.v1.FiscalYear
	70,  // 1: darta.v1.Darta.scope:type_name -> darta.v1.Scope
	71,  // 2: darta.v1.Darta.ward:type_name -> darta.v1.Ward
	4,   // 3: darta.v1.Darta.applicant:type_name -> darta.v1.Applicant
	72,  // 4: darta.v1.Darta.intake_channel:type_name -> darta.v1.IntakeChannel
	73,  // 5: darta.v1.Darta.received_date:type_name -> google.protobuf.Timestamp
	73,  // 6: darta.v1.Darta.entry_date:type_name -> google.protobuf.Timestamp
	74,  // 7: darta.v1.Darta.backdate_approver:type_name -> darta.v1.User
	75,  // 8: darta.v1.Darta.primary_document:type_name -> darta.v1.Attachment
	75,  // 9: darta.v1.Darta.annexes:type_name -> darta.v1.Attachment
	0,   // 10: darta.v1.Darta.status:type_name -> darta.v1.DartaStatus
	76,  // 11: darta.v1.Darta.priority:type_name -> darta.v1.Priority
	77,  // 12: darta.v1.Darta.assigned_to:type_name -> darta.v1.OrganizationalUnit
	74,  // 13: darta.v1.Darta.current_assignee:type_name -> darta.v1.User
	73,  // 14: darta.v1.Darta.sla_deadline:type_name -> google.protobuf.Timestamp
	74,  // 15: darta.v1.Darta.created_by:type_name -> darta.v1.User
	73,  // 16: darta.v1.Darta.created_at:type_name -> google.protobuf.Timestamp
	73,  // 17: darta.v1.Darta.updated_at:type_name -> google.protobuf.Timestamp
	78,  // 18: darta.v1.Darta.audit_trail:type_name -> darta.v1.AuditEntry
	1,   // 19: darta.v1.Applicant.type:type_name -> darta.v1.ApplicantType
	6,   // 20: darta.v1.DartaConnection.edges:type_name -> darta.v1.DartaEdge
	79,  // 21: darta.v1.DartaConnection.page_info:type_name -> darta.v1.PageInfo
	3,   // 22: darta.v1.DartaEdge.node:type_name -> darta.v1.Darta
	8,   // 23: darta.v1.DartaStats.by_status:type_name -> darta.v1.DartaStatusCount
	9,   // 24: darta.v1.DartaStats.by_channel:type_name -> darta.v1.ChannelCount
	0,   // 25: darta.v1.DartaStatusCount.status:type_name -> darta.v1.DartaStatus
	72,  // 26: darta.v1.ChannelCount.channel:type_name -> darta.v1.IntakeChannel
	70,  // 27: darta.v1.DartaFilterInput.scope:type_name -> darta.v1.Scope
	0,   // 28: darta.v1.DartaFilterInput.status:type_name -> darta.v1.DartaStatus
	76,  // 29: darta.v1.DartaFilterInput.priority:type_name -> darta.v1.Priority
	72,  // 30: darta.v1.DartaFilterInput.intake_channel:type_name -> darta.v1.IntakeChannel
	73,  // 31: darta.v1.DartaFilterInput.from_date:type_name -> google.protobuf.Timestamp
	73,  // 32: darta.v1.DartaFilterInput.to_date:type_name -> google.protobuf.Timestamp
	1,   // 33: darta.v1.ApplicantInput.type:type_name -> darta.v1.ApplicantType
	70,  // 34: darta.v1.CreateDartaInput.scope:type_name -> darta.v1.Scope
	11,  // 35: darta.v1.CreateDartaInput.applicant:type_name -> darta.v1.ApplicantInput
	72,  // 36: darta.v1.CreateDartaInput.intake_channel:type_name -> darta.v1.IntakeChannel
	73,  // 37: darta.v1.CreateDartaInput.received_date:type_name -> google.protobuf.Timestamp
	76,  // 38: darta.v1.CreateDartaInput.priority:type_name -> darta.v1.Priority
	76,  // 39: darta.v1.RouteDartaInput.priority:type_name -> darta.v1.Priority
	2,   // 40: darta.v1.ReviewDartaInput.decision:type_name -> darta.v1.DartaReviewDecision
	3,   // 41: darta.v1.GetDartaResponse.darta:type_name -> darta.v1.Darta
	70,  // 42: darta.v1.GetDartaByNumberRequest.scope:type_name -> darta.v1.Scope
	3,   // 43: darta.v1.GetDartaByNumberResponse.darta:type_name -> darta.v1.Darta
	10,  // 44: darta.v1.ListDartasRequest.filter:type_name -> darta.v1.DartaFilterInput
	80,  // 45: darta.v1.ListDartasRequest.pagination:type_name -> darta.v1.PaginationInput
	5,   // 46: darta.v1.ListDartasResponse.connection:type_name -> darta.v1.DartaConnection
	0,   // 47: darta.v1.GetMyDartasRequest.status:type_name -> darta.v1.DartaStatus
	80,  // 48: darta.v1.GetMyDartasRequest.pagination:type_name -> darta.v1.PaginationInput
	5,   // 49: darta.v1.GetMyDartasResponse.connection:type_name -> darta.v1.DartaConnection
	70,  // 50: darta.v1.GetDartaStatsRequest.scope:type_name -> darta.v1.Scope
	7,   // 51: darta.v1.GetDartaStatsResponse.stats:type_name -> darta.v1.DartaStats
	12,  // 52: darta.v1.CreateDartaRequest.input:type_name -> darta.v1.CreateDartaInput
	3,   // 53: darta.v1.CreateDartaResponse.darta:type_name -> darta.v1.Darta
	3,   // 54: darta.v1.SubmitDartaForReviewResponse.darta:type_name -> darta.v1.Darta
	14,  // 55: darta.v1.ReviewDartaRequest.input:type_name -> darta.v1.ReviewDartaInput
	3,   // 56: darta.v1.ReviewDartaResponse.darta:type_name -> darta.v1.Darta
	3,   // 57: darta.v1.ClassifyDartaResponse.darta:type_name -> darta.v1.Darta
	3,   // 58: darta.v1.ReserveDartaNumberResponse.darta:type_name -> darta.v1.Darta
	3,   // 59: darta.v1.FinalizeDartaRegistrationResponse.darta:type_name -> darta.v1.Darta
	3,   // 60: darta.v1.DirectRegisterDartaResponse.darta:type_name -> darta.v1.Darta
	3,   // 61: darta.v1.VoidDartaResponse.darta:type_name -> darta.v1.Darta
	3,   // 62: darta.v1.ScanDartaResponse.darta:type_name -> darta.v1.Darta
	81,  // 63: darta.v1.EnrichDartaMetadataRequest.metadata:type_name -> google.protobuf.Struct
	3,   // 64: darta.v1.EnrichDartaMetadataResponse.darta:type_name -> darta.v1.Darta
	3,   // 65: darta.v1.FinalizeDartaArchiveResponse.darta:type_name -> darta.v1.Darta
	13,  // 66: darta.v1.RouteDartaRequest.input:type_name -> darta.v1.RouteDartaInput
	3,   // 67: darta.v1.RouteDartaResponse.darta:type_name -> darta.v1.Darta
	3,   // 68: darta.v1.SectionReviewDartaResponse.darta:type_name -> darta.v1.Darta
	3,   // 69: darta.v1.RequestDartaClarificationResponse.darta:type_name -> darta.v1.Darta
	3,   // 70: darta.v1.ProvideDartaClarificationResponse.darta:type_name -> darta.v1.Darta
	3,   // 71: darta.v1.AcceptDartaResponse.darta:type_name -> darta.v1.Darta
	3,   // 72: darta.v1.MarkDartaActionResponse.darta:type_name -> darta.v1.Darta
	3,   // 73: darta.v1.IssueDartaResponseResponse.darta:type_name -> darta.v1.Darta
	3,   // 74: darta.v1.RequestDartaAckResponse.darta:type_name -> darta.v1.Darta
	3,   // 75: darta.v1.ReceiveDartaAckResponse.darta:type_name -> darta.v1.Darta
	3,   // 76: darta.v1.SupersedeDartaRecordResponse.darta:type_name -> darta.v1.Darta
	3,   // 77: darta.v1.CloseDartaResponse.darta:type_name -> darta.v1.Darta
	15,  // 78: darta.v1.DartaService.GetDarta:input_type -> darta.v1.GetDartaRequest
	17,  // 79: darta.v1.DartaService.GetDartaByNumber:input_type -> darta.v1.GetDartaByNumberRequest
	19,  // 80: darta.v1.DartaService.ListDartas:input_type -> darta.v1.ListDartasRequest
	21,  // 81: darta.v1.DartaService.GetMyDartas:input_type -> darta.v1.GetMyDartasRequest
	23,  // 82: darta.v1.DartaService.GetDartaStats:input_type -> darta.v1.GetDartaStatsRequest
	25,  // 83: darta.v1.DartaService.CreateDarta:input_type -> darta.v1.CreateDartaRequest
	27,  // 84: darta.v1.DartaService.SubmitDartaForReview:input_type -> darta.v1.SubmitDartaForReviewRequest
	29,  // 85: darta.v1.DartaService.ReviewDarta:input_type -> darta.v1.ReviewDartaRequest
	31,  // 86: darta.v1.DartaService.ClassifyDarta:input_type -> darta.v1.ClassifyDartaRequest
	33,  // 87: darta.v1.DartaService.ReserveDartaNumber:input_type -> darta.v1.ReserveDartaNumberRequest
	35,  // 88: darta.v1.DartaService.FinalizeDartaRegistration:input_type -> darta.v1.FinalizeDartaRegistrationRequest
	37,  // 89: darta.v1.DartaService.DirectRegisterDarta:input_type -> darta.v1.DirectRegisterDartaRequest
	39,  // 90: darta.v1.DartaService.VoidDarta:input_type -> darta.v1.VoidDartaRequest
	41,  // 91: darta.v1.DartaService.ScanDarta:input_type -> darta.v1.ScanDartaRequest
	43,  // 92: darta.v1.DartaService.EnrichDartaMetadata:input_type -> darta.v1.EnrichDartaMetadataRequest
	45,  // 93: darta.v1.DartaService.FinalizeDartaArchive:input_type -> darta.v1.FinalizeDartaArchiveRequest
	47,  // 94: darta.v1.DartaService.RouteDarta:input_type -> darta.v1.RouteDartaRequest
	49,  // 95: darta.v1.DartaService.SectionReviewDarta:input_type -> darta.v1.SectionReviewDartaRequest
	51,  // 96: darta.v1.DartaService.RequestDartaClarification:input_type -> darta.v1.RequestDartaClarificationRequest
	53,  // 97: darta.v1.DartaService.ProvideDartaClarification:input_type -> darta.v1.ProvideDartaClarificationRequest
	55,  // 98: darta.v1.DartaService.AcceptDarta:input_type -> darta.v1.AcceptDartaRequest
	57,  // 99: darta.v1.DartaService.MarkDartaAction:input_type -> darta.v1.MarkDartaActionRequest
	59,  // 100: darta.v1.DartaService.IssueDartaResponse:input_type -> darta.v1.IssueDartaResponseRequest
	61,  // 101: darta.v1.DartaService.RequestDartaAck:input_type -> darta.v1.RequestDartaAckRequest
	63,  // 102: darta.v1.DartaService.ReceiveDartaAck:input_type -> darta.v1.ReceiveDartaAckRequest
	65,  // 103: darta.v1.DartaService.SupersedeDartaRecord:input_type -> darta.v1.SupersedeDartaRecordRequest
	67,  // 104: darta.v1.DartaService.CloseDarta:input_type -> darta.v1.CloseDartaRequest
	82,  // 105: darta.v1.DartaService.HealthCheck:input_type -> darta.v1.HealthCheckRequest
	16,  // 106: darta.v1.DartaService.GetDarta:output_type -> darta.v1.GetDartaResponse
	18,  // 107: darta.v1.DartaService.GetDartaByNumber:output_type -> darta.v1.GetDartaByNumberResponse
	20,  // 108: darta.v1.DartaService.ListDartas:output_type -> darta.v1.ListDartasResponse
	22,  // 109: darta.v1.DartaService.GetMyDartas:output_type -> darta.v1.GetMyDartasResponse
	24,  // 110: darta.v1.DartaService.GetDartaStats:output_type -> darta.v1.GetDartaStatsResponse
	26,  // 111: darta.v1.DartaService.CreateDarta:output_type -> darta.v1.CreateDartaResponse
	28,  // 112: darta.v1.DartaService.SubmitDartaForReview:output_type -> darta.v1.SubmitDartaForReviewResponse
	30,  // 113: darta.v1.DartaService.ReviewDarta:output_type -> darta.v1.ReviewDartaResponse
	32,  // 114: darta.v1.DartaService.ClassifyDarta:output_type -> darta.v1.ClassifyDartaResponse
	34,  // 115: darta.v1.DartaService.ReserveDartaNumber:output_type -> darta.v1.ReserveDartaNumberResponse
	36,  // 116: darta.v1.DartaService.FinalizeDartaRegistration:output_type -> darta.v1.FinalizeDartaRegistrationResponse
	38,  // 117: darta.v1.DartaService.DirectRegisterDarta:output_type -> darta.v1.DirectRegisterDartaResponse
	40,  // 118: darta.v1.DartaService.VoidDarta:output_type -> darta.v1.VoidDartaResponse
	42,  // 119: darta.v1.DartaService.ScanDarta:output_type -> darta.v1.ScanDartaResponse
	44,  // 120: darta.v1.DartaService.EnrichDartaMetadata:output_type -> darta.v1.EnrichDartaMetadataResponse
	46,  // 121: darta.v1.DartaService.FinalizeDartaArchive:output_type -> darta.v1.FinalizeDartaArchiveResponse
	48,  // 122: darta.v1.DartaService.RouteDarta:output_type -> darta.v1.RouteDartaResponse
	50,  // 123: darta.v1.DartaService.SectionReviewDarta:output_type -> darta.v1.SectionReviewDartaResponse
	52,  // 124: darta.v1.DartaService.RequestDartaClarification:output_type -> darta.v1.RequestDartaClarificationResponse
	54,  // 125: darta.v1.DartaService.ProvideDartaClarification:output_type -> darta.v1.ProvideDartaClarificationResponse
	56,  // 126: darta.v1.DartaService.AcceptDarta:output_type -> darta.v1.AcceptDartaResponse
	58,  // 127: darta.v1.DartaService.MarkDartaAction:output_type -> darta.v1.MarkDartaActionResponse
	60,  // 128: darta.v1.DartaService.IssueDartaResponse:output_type -> darta.v1.IssueDartaResponseResponse
	62,  // 129: darta.v1.DartaService.RequestDartaAck:output_type -> darta.v1.RequestDartaAckResponse
	64,  // 130: darta.v1.DartaService.ReceiveDartaAck:output_type -> darta.v1.ReceiveDartaAckResponse
	66,  // 131: darta.v1.DartaService.SupersedeDartaRecord:output_type -> darta.v1.SupersedeDartaRecordResponse
	68,  // 132: darta.v1.DartaService.CloseDarta:output_type -> darta.v1.CloseDartaResponse
	83,  // 133: darta.v1.DartaService.HealthCheck:output_type -> darta.v1.HealthCheckResponse
	106, // [106:134] is the sub-list for method output_type
	78,  // [78:106] is the sub-list for method input_type
	78,  // [78:78] is the sub-list for extension type_name
	78,  // [78:78] is the sub-list for extension extendee
	0,   // [0:78] is the sub-list for field type_name
}

func init() { file_darta_v1_darta_proto_init() }
func file_darta_v1_darta_proto_init() {
	if File_darta_v1_darta_proto != nil {
		return
	}
	file_darta_v1_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_darta_v1_darta_proto_rawDesc), len(file_darta_v1_darta_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   66,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_darta_v1_darta_proto_goTypes,
		DependencyIndexes: file_darta_v1_darta_proto_depIdxs,
		EnumInfos:         file_darta_v1_darta_proto_enumTypes,
		MessageInfos:      file_darta_v1_darta_proto_msgTypes,
	}.Build()
	File_darta_v1_darta_proto = out.File
	file_darta_v1_darta_proto_goTypes = nil
	file_darta_v1_darta_proto_depIdxs = nil
}
