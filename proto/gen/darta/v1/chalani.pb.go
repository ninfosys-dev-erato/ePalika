// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: darta/v1/chalani.proto

package dartav1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChalaniStatus int32

const (
	ChalaniStatus_CHALANI_STATUS_UNSPECIFIED          ChalaniStatus = 0
	ChalaniStatus_CHALANI_STATUS_DRAFT                ChalaniStatus = 1
	ChalaniStatus_CHALANI_STATUS_PENDING_REVIEW       ChalaniStatus = 2
	ChalaniStatus_CHALANI_STATUS_PENDING_APPROVAL     ChalaniStatus = 3
	ChalaniStatus_CHALANI_STATUS_APPROVED             ChalaniStatus = 4
	ChalaniStatus_CHALANI_STATUS_NUMBER_RESERVED      ChalaniStatus = 5
	ChalaniStatus_CHALANI_STATUS_REGISTERED           ChalaniStatus = 6
	ChalaniStatus_CHALANI_STATUS_SIGNED               ChalaniStatus = 7
	ChalaniStatus_CHALANI_STATUS_SEALED               ChalaniStatus = 8
	ChalaniStatus_CHALANI_STATUS_DISPATCHED           ChalaniStatus = 9
	ChalaniStatus_CHALANI_STATUS_IN_TRANSIT           ChalaniStatus = 10
	ChalaniStatus_CHALANI_STATUS_ACKNOWLEDGED         ChalaniStatus = 11
	ChalaniStatus_CHALANI_STATUS_RETURNED_UNDELIVERED ChalaniStatus = 12
	ChalaniStatus_CHALANI_STATUS_DELIVERED            ChalaniStatus = 13
	ChalaniStatus_CHALANI_STATUS_VOIDED               ChalaniStatus = 14
	ChalaniStatus_CHALANI_STATUS_SUPERSEDED           ChalaniStatus = 15
	ChalaniStatus_CHALANI_STATUS_CLOSED               ChalaniStatus = 16
)

// Enum value maps for ChalaniStatus.
var (
	ChalaniStatus_name = map[int32]string{
		0:  "CHALANI_STATUS_UNSPECIFIED",
		1:  "CHALANI_STATUS_DRAFT",
		2:  "CHALANI_STATUS_PENDING_REVIEW",
		3:  "CHALANI_STATUS_PENDING_APPROVAL",
		4:  "CHALANI_STATUS_APPROVED",
		5:  "CHALANI_STATUS_NUMBER_RESERVED",
		6:  "CHALANI_STATUS_REGISTERED",
		7:  "CHALANI_STATUS_SIGNED",
		8:  "CHALANI_STATUS_SEALED",
		9:  "CHALANI_STATUS_DISPATCHED",
		10: "CHALANI_STATUS_IN_TRANSIT",
		11: "CHALANI_STATUS_ACKNOWLEDGED",
		12: "CHALANI_STATUS_RETURNED_UNDELIVERED",
		13: "CHALANI_STATUS_DELIVERED",
		14: "CHALANI_STATUS_VOIDED",
		15: "CHALANI_STATUS_SUPERSEDED",
		16: "CHALANI_STATUS_CLOSED",
	}
	ChalaniStatus_value = map[string]int32{
		"CHALANI_STATUS_UNSPECIFIED":          0,
		"CHALANI_STATUS_DRAFT":                1,
		"CHALANI_STATUS_PENDING_REVIEW":       2,
		"CHALANI_STATUS_PENDING_APPROVAL":     3,
		"CHALANI_STATUS_APPROVED":             4,
		"CHALANI_STATUS_NUMBER_RESERVED":      5,
		"CHALANI_STATUS_REGISTERED":           6,
		"CHALANI_STATUS_SIGNED":               7,
		"CHALANI_STATUS_SEALED":               8,
		"CHALANI_STATUS_DISPATCHED":           9,
		"CHALANI_STATUS_IN_TRANSIT":           10,
		"CHALANI_STATUS_ACKNOWLEDGED":         11,
		"CHALANI_STATUS_RETURNED_UNDELIVERED": 12,
		"CHALANI_STATUS_DELIVERED":            13,
		"CHALANI_STATUS_VOIDED":               14,
		"CHALANI_STATUS_SUPERSEDED":           15,
		"CHALANI_STATUS_CLOSED":               16,
	}
)

func (x ChalaniStatus) Enum() *ChalaniStatus {
	p := new(ChalaniStatus)
	*p = x
	return p
}

func (x ChalaniStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChalaniStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_darta_v1_chalani_proto_enumTypes[0].Descriptor()
}

func (ChalaniStatus) Type() protoreflect.EnumType {
	return &file_darta_v1_chalani_proto_enumTypes[0]
}

func (x ChalaniStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChalaniStatus.Descriptor instead.
func (ChalaniStatus) EnumDescriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{0}
}

type RecipientType int32

const (
	RecipientType_RECIPIENT_TYPE_UNSPECIFIED       RecipientType = 0
	RecipientType_RECIPIENT_TYPE_CITIZEN           RecipientType = 1
	RecipientType_RECIPIENT_TYPE_ORGANIZATION      RecipientType = 2
	RecipientType_RECIPIENT_TYPE_GOVERNMENT_OFFICE RecipientType = 3
	RecipientType_RECIPIENT_TYPE_OTHER             RecipientType = 4
)

// Enum value maps for RecipientType.
var (
	RecipientType_name = map[int32]string{
		0: "RECIPIENT_TYPE_UNSPECIFIED",
		1: "RECIPIENT_TYPE_CITIZEN",
		2: "RECIPIENT_TYPE_ORGANIZATION",
		3: "RECIPIENT_TYPE_GOVERNMENT_OFFICE",
		4: "RECIPIENT_TYPE_OTHER",
	}
	RecipientType_value = map[string]int32{
		"RECIPIENT_TYPE_UNSPECIFIED":       0,
		"RECIPIENT_TYPE_CITIZEN":           1,
		"RECIPIENT_TYPE_ORGANIZATION":      2,
		"RECIPIENT_TYPE_GOVERNMENT_OFFICE": 3,
		"RECIPIENT_TYPE_OTHER":             4,
	}
)

func (x RecipientType) Enum() *RecipientType {
	p := new(RecipientType)
	*p = x
	return p
}

func (x RecipientType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecipientType) Descriptor() protoreflect.EnumDescriptor {
	return file_darta_v1_chalani_proto_enumTypes[1].Descriptor()
}

func (RecipientType) Type() protoreflect.EnumType {
	return &file_darta_v1_chalani_proto_enumTypes[1]
}

func (x RecipientType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecipientType.Descriptor instead.
func (RecipientType) EnumDescriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{1}
}

type ApprovalDecision int32

const (
	ApprovalDecision_APPROVAL_DECISION_UNSPECIFIED ApprovalDecision = 0
	ApprovalDecision_APPROVAL_DECISION_APPROVED    ApprovalDecision = 1
	ApprovalDecision_APPROVAL_DECISION_REJECTED    ApprovalDecision = 2
	ApprovalDecision_APPROVAL_DECISION_DELEGATED   ApprovalDecision = 3
)

// Enum value maps for ApprovalDecision.
var (
	ApprovalDecision_name = map[int32]string{
		0: "APPROVAL_DECISION_UNSPECIFIED",
		1: "APPROVAL_DECISION_APPROVED",
		2: "APPROVAL_DECISION_REJECTED",
		3: "APPROVAL_DECISION_DELEGATED",
	}
	ApprovalDecision_value = map[string]int32{
		"APPROVAL_DECISION_UNSPECIFIED": 0,
		"APPROVAL_DECISION_APPROVED":    1,
		"APPROVAL_DECISION_REJECTED":    2,
		"APPROVAL_DECISION_DELEGATED":   3,
	}
)

func (x ApprovalDecision) Enum() *ApprovalDecision {
	p := new(ApprovalDecision)
	*p = x
	return p
}

func (x ApprovalDecision) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApprovalDecision) Descriptor() protoreflect.EnumDescriptor {
	return file_darta_v1_chalani_proto_enumTypes[2].Descriptor()
}

func (ApprovalDecision) Type() protoreflect.EnumType {
	return &file_darta_v1_chalani_proto_enumTypes[2]
}

func (x ApprovalDecision) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApprovalDecision.Descriptor instead.
func (ApprovalDecision) EnumDescriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{2}
}

// Chalani represents an outgoing correspondence record
type Chalani struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Id                     string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ChalaniNumber          int32                  `protobuf:"varint,2,opt,name=chalani_number,json=chalaniNumber,proto3" json:"chalani_number,omitempty"`
	FormattedChalaniNumber string                 `protobuf:"bytes,3,opt,name=formatted_chalani_number,json=formattedChalaniNumber,proto3" json:"formatted_chalani_number,omitempty"`
	FiscalYear             *FiscalYear            `protobuf:"bytes,4,opt,name=fiscal_year,json=fiscalYear,proto3" json:"fiscal_year,omitempty"`
	Scope                  Scope                  `protobuf:"varint,5,opt,name=scope,proto3,enum=darta.v1.Scope" json:"scope,omitempty"`
	Ward                   *Ward                  `protobuf:"bytes,6,opt,name=ward,proto3" json:"ward,omitempty"`
	Subject                string                 `protobuf:"bytes,7,opt,name=subject,proto3" json:"subject,omitempty"`
	Body                   string                 `protobuf:"bytes,8,opt,name=body,proto3" json:"body,omitempty"`
	TemplateId             string                 `protobuf:"bytes,9,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Attachments            []*Attachment          `protobuf:"bytes,10,rep,name=attachments,proto3" json:"attachments,omitempty"`
	LinkedDartaId          string                 `protobuf:"bytes,11,opt,name=linked_darta_id,json=linkedDartaId,proto3" json:"linked_darta_id,omitempty"` // Reference to linked darta
	Status                 ChalaniStatus          `protobuf:"varint,12,opt,name=status,proto3,enum=darta.v1.ChalaniStatus" json:"status,omitempty"`
	RequiredSignatories    []*Signatory           `protobuf:"bytes,13,rep,name=required_signatories,json=requiredSignatories,proto3" json:"required_signatories,omitempty"`
	Approvals              []*Approval            `protobuf:"bytes,14,rep,name=approvals,proto3" json:"approvals,omitempty"`
	IsFullyApproved        bool                   `protobuf:"varint,15,opt,name=is_fully_approved,json=isFullyApproved,proto3" json:"is_fully_approved,omitempty"`
	DispatchChannel        DispatchChannel        `protobuf:"varint,16,opt,name=dispatch_channel,json=dispatchChannel,proto3,enum=darta.v1.DispatchChannel" json:"dispatch_channel,omitempty"`
	Recipient              *Recipient             `protobuf:"bytes,17,opt,name=recipient,proto3" json:"recipient,omitempty"`
	DispatchedAt           *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=dispatched_at,json=dispatchedAt,proto3" json:"dispatched_at,omitempty"`
	DispatchedBy           *User                  `protobuf:"bytes,19,opt,name=dispatched_by,json=dispatchedBy,proto3" json:"dispatched_by,omitempty"`
	TrackingId             string                 `protobuf:"bytes,20,opt,name=tracking_id,json=trackingId,proto3" json:"tracking_id,omitempty"`
	CourierName            string                 `protobuf:"bytes,21,opt,name=courier_name,json=courierName,proto3" json:"courier_name,omitempty"`
	IsAcknowledged         bool                   `protobuf:"varint,22,opt,name=is_acknowledged,json=isAcknowledged,proto3" json:"is_acknowledged,omitempty"`
	AcknowledgedAt         *timestamppb.Timestamp `protobuf:"bytes,23,opt,name=acknowledged_at,json=acknowledgedAt,proto3" json:"acknowledged_at,omitempty"`
	AcknowledgedBy         string                 `protobuf:"bytes,24,opt,name=acknowledged_by,json=acknowledgedBy,proto3" json:"acknowledged_by,omitempty"`
	AcknowledgementProof   *Attachment            `protobuf:"bytes,25,opt,name=acknowledgement_proof,json=acknowledgementProof,proto3" json:"acknowledgement_proof,omitempty"`
	DeliveredAt            *timestamppb.Timestamp `protobuf:"bytes,26,opt,name=delivered_at,json=deliveredAt,proto3" json:"delivered_at,omitempty"`
	DeliveredProof         *Attachment            `protobuf:"bytes,27,opt,name=delivered_proof,json=deliveredProof,proto3" json:"delivered_proof,omitempty"`
	CreatedBy              *User                  `protobuf:"bytes,28,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CreatedAt              *timestamppb.Timestamp `protobuf:"bytes,29,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt              *timestamppb.Timestamp `protobuf:"bytes,30,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	AuditTrail             []*AuditEntry          `protobuf:"bytes,31,rep,name=audit_trail,json=auditTrail,proto3" json:"audit_trail,omitempty"`
	SupersededById         string                 `protobuf:"bytes,32,opt,name=superseded_by_id,json=supersededById,proto3" json:"superseded_by_id,omitempty"`
	SupersedesId           string                 `protobuf:"bytes,33,opt,name=supersedes_id,json=supersedesId,proto3" json:"supersedes_id,omitempty"`
	TenantId               string                 `protobuf:"bytes,34,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Chalani) Reset() {
	*x = Chalani{}
	mi := &file_darta_v1_chalani_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chalani) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chalani) ProtoMessage() {}

func (x *Chalani) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chalani.ProtoReflect.Descriptor instead.
func (*Chalani) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{0}
}

func (x *Chalani) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Chalani) GetChalaniNumber() int32 {
	if x != nil {
		return x.ChalaniNumber
	}
	return 0
}

func (x *Chalani) GetFormattedChalaniNumber() string {
	if x != nil {
		return x.FormattedChalaniNumber
	}
	return ""
}

func (x *Chalani) GetFiscalYear() *FiscalYear {
	if x != nil {
		return x.FiscalYear
	}
	return nil
}

func (x *Chalani) GetScope() Scope {
	if x != nil {
		return x.Scope
	}
	return Scope_SCOPE_UNSPECIFIED
}

func (x *Chalani) GetWard() *Ward {
	if x != nil {
		return x.Ward
	}
	return nil
}

func (x *Chalani) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Chalani) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Chalani) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *Chalani) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Chalani) GetLinkedDartaId() string {
	if x != nil {
		return x.LinkedDartaId
	}
	return ""
}

func (x *Chalani) GetStatus() ChalaniStatus {
	if x != nil {
		return x.Status
	}
	return ChalaniStatus_CHALANI_STATUS_UNSPECIFIED
}

func (x *Chalani) GetRequiredSignatories() []*Signatory {
	if x != nil {
		return x.RequiredSignatories
	}
	return nil
}

func (x *Chalani) GetApprovals() []*Approval {
	if x != nil {
		return x.Approvals
	}
	return nil
}

func (x *Chalani) GetIsFullyApproved() bool {
	if x != nil {
		return x.IsFullyApproved
	}
	return false
}

func (x *Chalani) GetDispatchChannel() DispatchChannel {
	if x != nil {
		return x.DispatchChannel
	}
	return DispatchChannel_DISPATCH_CHANNEL_UNSPECIFIED
}

func (x *Chalani) GetRecipient() *Recipient {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *Chalani) GetDispatchedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DispatchedAt
	}
	return nil
}

func (x *Chalani) GetDispatchedBy() *User {
	if x != nil {
		return x.DispatchedBy
	}
	return nil
}

func (x *Chalani) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

func (x *Chalani) GetCourierName() string {
	if x != nil {
		return x.CourierName
	}
	return ""
}

func (x *Chalani) GetIsAcknowledged() bool {
	if x != nil {
		return x.IsAcknowledged
	}
	return false
}

func (x *Chalani) GetAcknowledgedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AcknowledgedAt
	}
	return nil
}

func (x *Chalani) GetAcknowledgedBy() string {
	if x != nil {
		return x.AcknowledgedBy
	}
	return ""
}

func (x *Chalani) GetAcknowledgementProof() *Attachment {
	if x != nil {
		return x.AcknowledgementProof
	}
	return nil
}

func (x *Chalani) GetDeliveredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeliveredAt
	}
	return nil
}

func (x *Chalani) GetDeliveredProof() *Attachment {
	if x != nil {
		return x.DeliveredProof
	}
	return nil
}

func (x *Chalani) GetCreatedBy() *User {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *Chalani) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Chalani) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Chalani) GetAuditTrail() []*AuditEntry {
	if x != nil {
		return x.AuditTrail
	}
	return nil
}

func (x *Chalani) GetSupersededById() string {
	if x != nil {
		return x.SupersededById
	}
	return ""
}

func (x *Chalani) GetSupersedesId() string {
	if x != nil {
		return x.SupersedesId
	}
	return ""
}

func (x *Chalani) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// Signatory represents a required signatory for approval
type Signatory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	User          *User                  `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Role          *Role                  `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	Order         int32                  `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
	IsRequired    bool                   `protobuf:"varint,5,opt,name=is_required,json=isRequired,proto3" json:"is_required,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Signatory) Reset() {
	*x = Signatory{}
	mi := &file_darta_v1_chalani_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Signatory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signatory) ProtoMessage() {}

func (x *Signatory) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signatory.ProtoReflect.Descriptor instead.
func (*Signatory) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{1}
}

func (x *Signatory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Signatory) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Signatory) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *Signatory) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *Signatory) GetIsRequired() bool {
	if x != nil {
		return x.IsRequired
	}
	return false
}

// Approval represents an approval decision
type Approval struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Signatory     *Signatory             `protobuf:"bytes,2,opt,name=signatory,proto3" json:"signatory,omitempty"`
	Decision      ApprovalDecision       `protobuf:"varint,3,opt,name=decision,proto3,enum=darta.v1.ApprovalDecision" json:"decision,omitempty"`
	Notes         string                 `protobuf:"bytes,4,opt,name=notes,proto3" json:"notes,omitempty"`
	ApprovedAt    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=approved_at,json=approvedAt,proto3" json:"approved_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Approval) Reset() {
	*x = Approval{}
	mi := &file_darta_v1_chalani_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Approval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Approval) ProtoMessage() {}

func (x *Approval) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Approval.ProtoReflect.Descriptor instead.
func (*Approval) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{2}
}

func (x *Approval) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Approval) GetSignatory() *Signatory {
	if x != nil {
		return x.Signatory
	}
	return nil
}

func (x *Approval) GetDecision() ApprovalDecision {
	if x != nil {
		return x.Decision
	}
	return ApprovalDecision_APPROVAL_DECISION_UNSPECIFIED
}

func (x *Approval) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *Approval) GetApprovedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ApprovedAt
	}
	return nil
}

// Recipient represents the recipient of a chalani
type Recipient struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          RecipientType          `protobuf:"varint,2,opt,name=type,proto3,enum=darta.v1.RecipientType" json:"type,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Organization  string                 `protobuf:"bytes,4,opt,name=organization,proto3" json:"organization,omitempty"`
	Email         string                 `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Phone         string                 `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Address       string                 `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Recipient) Reset() {
	*x = Recipient{}
	mi := &file_darta_v1_chalani_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Recipient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipient) ProtoMessage() {}

func (x *Recipient) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipient.ProtoReflect.Descriptor instead.
func (*Recipient) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{3}
}

func (x *Recipient) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Recipient) GetType() RecipientType {
	if x != nil {
		return x.Type
	}
	return RecipientType_RECIPIENT_TYPE_UNSPECIFIED
}

func (x *Recipient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Recipient) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *Recipient) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Recipient) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Recipient) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// ChalaniConnection for cursor-based pagination
type ChalaniConnection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Edges         []*ChalaniEdge         `protobuf:"bytes,1,rep,name=edges,proto3" json:"edges,omitempty"`
	PageInfo      *PageInfo              `protobuf:"bytes,2,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChalaniConnection) Reset() {
	*x = ChalaniConnection{}
	mi := &file_darta_v1_chalani_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChalaniConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChalaniConnection) ProtoMessage() {}

func (x *ChalaniConnection) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChalaniConnection.ProtoReflect.Descriptor instead.
func (*ChalaniConnection) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{4}
}

func (x *ChalaniConnection) GetEdges() []*ChalaniEdge {
	if x != nil {
		return x.Edges
	}
	return nil
}

func (x *ChalaniConnection) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type ChalaniEdge struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cursor        string                 `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Node          *Chalani               `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChalaniEdge) Reset() {
	*x = ChalaniEdge{}
	mi := &file_darta_v1_chalani_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChalaniEdge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChalaniEdge) ProtoMessage() {}

func (x *ChalaniEdge) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChalaniEdge.ProtoReflect.Descriptor instead.
func (*ChalaniEdge) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{5}
}

func (x *ChalaniEdge) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *ChalaniEdge) GetNode() *Chalani {
	if x != nil {
		return x.Node
	}
	return nil
}

// ChalaniStats for analytics
type ChalaniStats struct {
	state                protoimpl.MessageState  `protogen:"open.v1"`
	Total                int32                   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	ByStatus             []*ChalaniStatusCount   `protobuf:"bytes,2,rep,name=by_status,json=byStatus,proto3" json:"by_status,omitempty"`
	ByChannel            []*DispatchChannelCount `protobuf:"bytes,3,rep,name=by_channel,json=byChannel,proto3" json:"by_channel,omitempty"`
	AcknowledgementRate  float64                 `protobuf:"fixed64,4,opt,name=acknowledgement_rate,json=acknowledgementRate,proto3" json:"acknowledgement_rate,omitempty"`
	AvgDispatchTimeHours float64                 `protobuf:"fixed64,5,opt,name=avg_dispatch_time_hours,json=avgDispatchTimeHours,proto3" json:"avg_dispatch_time_hours,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ChalaniStats) Reset() {
	*x = ChalaniStats{}
	mi := &file_darta_v1_chalani_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChalaniStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChalaniStats) ProtoMessage() {}

func (x *ChalaniStats) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChalaniStats.ProtoReflect.Descriptor instead.
func (*ChalaniStats) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{6}
}

func (x *ChalaniStats) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ChalaniStats) GetByStatus() []*ChalaniStatusCount {
	if x != nil {
		return x.ByStatus
	}
	return nil
}

func (x *ChalaniStats) GetByChannel() []*DispatchChannelCount {
	if x != nil {
		return x.ByChannel
	}
	return nil
}

func (x *ChalaniStats) GetAcknowledgementRate() float64 {
	if x != nil {
		return x.AcknowledgementRate
	}
	return 0
}

func (x *ChalaniStats) GetAvgDispatchTimeHours() float64 {
	if x != nil {
		return x.AvgDispatchTimeHours
	}
	return 0
}

type ChalaniStatusCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        ChalaniStatus          `protobuf:"varint,1,opt,name=status,proto3,enum=darta.v1.ChalaniStatus" json:"status,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChalaniStatusCount) Reset() {
	*x = ChalaniStatusCount{}
	mi := &file_darta_v1_chalani_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChalaniStatusCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChalaniStatusCount) ProtoMessage() {}

func (x *ChalaniStatusCount) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChalaniStatusCount.ProtoReflect.Descriptor instead.
func (*ChalaniStatusCount) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{7}
}

func (x *ChalaniStatusCount) GetStatus() ChalaniStatus {
	if x != nil {
		return x.Status
	}
	return ChalaniStatus_CHALANI_STATUS_UNSPECIFIED
}

func (x *ChalaniStatusCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DispatchChannelCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channel       DispatchChannel        `protobuf:"varint,1,opt,name=channel,proto3,enum=darta.v1.DispatchChannel" json:"channel,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DispatchChannelCount) Reset() {
	*x = DispatchChannelCount{}
	mi := &file_darta_v1_chalani_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DispatchChannelCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatchChannelCount) ProtoMessage() {}

func (x *DispatchChannelCount) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatchChannelCount.ProtoReflect.Descriptor instead.
func (*DispatchChannelCount) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{8}
}

func (x *DispatchChannelCount) GetChannel() DispatchChannel {
	if x != nil {
		return x.Channel
	}
	return DispatchChannel_DISPATCH_CHANNEL_UNSPECIFIED
}

func (x *DispatchChannelCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// SupersedeChalaniResult for supersede operation
type SupersedeChalaniResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Old           *Chalani               `protobuf:"bytes,1,opt,name=old,proto3" json:"old,omitempty"`
	New           *Chalani               `protobuf:"bytes,2,opt,name=new,proto3" json:"new,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupersedeChalaniResult) Reset() {
	*x = SupersedeChalaniResult{}
	mi := &file_darta_v1_chalani_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupersedeChalaniResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupersedeChalaniResult) ProtoMessage() {}

func (x *SupersedeChalaniResult) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupersedeChalaniResult.ProtoReflect.Descriptor instead.
func (*SupersedeChalaniResult) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{9}
}

func (x *SupersedeChalaniResult) GetOld() *Chalani {
	if x != nil {
		return x.Old
	}
	return nil
}

func (x *SupersedeChalaniResult) GetNew() *Chalani {
	if x != nil {
		return x.New
	}
	return nil
}

// ChalaniTemplate for reusable templates
type ChalaniTemplate struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	Id                       string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                     string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Category                 string                 `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Subject                  string                 `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Body                     string                 `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	RequiredSignatoryRoleIds []string               `protobuf:"bytes,6,rep,name=required_signatory_role_ids,json=requiredSignatoryRoleIds,proto3" json:"required_signatory_role_ids,omitempty"`
	IsActive                 bool                   `protobuf:"varint,7,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	CreatedAt                *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ChalaniTemplate) Reset() {
	*x = ChalaniTemplate{}
	mi := &file_darta_v1_chalani_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChalaniTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChalaniTemplate) ProtoMessage() {}

func (x *ChalaniTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChalaniTemplate.ProtoReflect.Descriptor instead.
func (*ChalaniTemplate) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{10}
}

func (x *ChalaniTemplate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChalaniTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChalaniTemplate) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ChalaniTemplate) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *ChalaniTemplate) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *ChalaniTemplate) GetRequiredSignatoryRoleIds() []string {
	if x != nil {
		return x.RequiredSignatoryRoleIds
	}
	return nil
}

func (x *ChalaniTemplate) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *ChalaniTemplate) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChalaniTemplate) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// ChalaniFilterInput for filtering chalani list
type ChalaniFilterInput struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	FiscalYearId    string                 `protobuf:"bytes,1,opt,name=fiscal_year_id,json=fiscalYearId,proto3" json:"fiscal_year_id,omitempty"`
	Scope           Scope                  `protobuf:"varint,2,opt,name=scope,proto3,enum=darta.v1.Scope" json:"scope,omitempty"`
	WardId          string                 `protobuf:"bytes,3,opt,name=ward_id,json=wardId,proto3" json:"ward_id,omitempty"`
	Status          ChalaniStatus          `protobuf:"varint,4,opt,name=status,proto3,enum=darta.v1.ChalaniStatus" json:"status,omitempty"`
	DispatchChannel DispatchChannel        `protobuf:"varint,5,opt,name=dispatch_channel,json=dispatchChannel,proto3,enum=darta.v1.DispatchChannel" json:"dispatch_channel,omitempty"`
	RecipientName   string                 `protobuf:"bytes,6,opt,name=recipient_name,json=recipientName,proto3" json:"recipient_name,omitempty"`
	FromDate        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`
	ToDate          *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`
	Search          string                 `protobuf:"bytes,9,opt,name=search,proto3" json:"search,omitempty"` // Search in subject, body, recipient, etc.
	LinkedDartaId   string                 `protobuf:"bytes,10,opt,name=linked_darta_id,json=linkedDartaId,proto3" json:"linked_darta_id,omitempty"`
	TenantId        string                 `protobuf:"bytes,11,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ChalaniFilterInput) Reset() {
	*x = ChalaniFilterInput{}
	mi := &file_darta_v1_chalani_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChalaniFilterInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChalaniFilterInput) ProtoMessage() {}

func (x *ChalaniFilterInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChalaniFilterInput.ProtoReflect.Descriptor instead.
func (*ChalaniFilterInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{11}
}

func (x *ChalaniFilterInput) GetFiscalYearId() string {
	if x != nil {
		return x.FiscalYearId
	}
	return ""
}

func (x *ChalaniFilterInput) GetScope() Scope {
	if x != nil {
		return x.Scope
	}
	return Scope_SCOPE_UNSPECIFIED
}

func (x *ChalaniFilterInput) GetWardId() string {
	if x != nil {
		return x.WardId
	}
	return ""
}

func (x *ChalaniFilterInput) GetStatus() ChalaniStatus {
	if x != nil {
		return x.Status
	}
	return ChalaniStatus_CHALANI_STATUS_UNSPECIFIED
}

func (x *ChalaniFilterInput) GetDispatchChannel() DispatchChannel {
	if x != nil {
		return x.DispatchChannel
	}
	return DispatchChannel_DISPATCH_CHANNEL_UNSPECIFIED
}

func (x *ChalaniFilterInput) GetRecipientName() string {
	if x != nil {
		return x.RecipientName
	}
	return ""
}

func (x *ChalaniFilterInput) GetFromDate() *timestamppb.Timestamp {
	if x != nil {
		return x.FromDate
	}
	return nil
}

func (x *ChalaniFilterInput) GetToDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ToDate
	}
	return nil
}

func (x *ChalaniFilterInput) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ChalaniFilterInput) GetLinkedDartaId() string {
	if x != nil {
		return x.LinkedDartaId
	}
	return ""
}

func (x *ChalaniFilterInput) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// RecipientInput for creating/updating recipient
type RecipientInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          RecipientType          `protobuf:"varint,1,opt,name=type,proto3,enum=darta.v1.RecipientType" json:"type,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Organization  string                 `protobuf:"bytes,3,opt,name=organization,proto3" json:"organization,omitempty"`
	Email         string                 `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Phone         string                 `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	Address       string                 `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecipientInput) Reset() {
	*x = RecipientInput{}
	mi := &file_darta_v1_chalani_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecipientInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipientInput) ProtoMessage() {}

func (x *RecipientInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipientInput.ProtoReflect.Descriptor instead.
func (*RecipientInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{12}
}

func (x *RecipientInput) GetType() RecipientType {
	if x != nil {
		return x.Type
	}
	return RecipientType_RECIPIENT_TYPE_UNSPECIFIED
}

func (x *RecipientInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecipientInput) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *RecipientInput) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RecipientInput) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *RecipientInput) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// SignatoryInput for defining required signatories
type SignatoryInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleId        string                 `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Order         int32                  `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	IsRequired    bool                   `protobuf:"varint,4,opt,name=is_required,json=isRequired,proto3" json:"is_required,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignatoryInput) Reset() {
	*x = SignatoryInput{}
	mi := &file_darta_v1_chalani_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignatoryInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatoryInput) ProtoMessage() {}

func (x *SignatoryInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatoryInput.ProtoReflect.Descriptor instead.
func (*SignatoryInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{13}
}

func (x *SignatoryInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SignatoryInput) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *SignatoryInput) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *SignatoryInput) GetIsRequired() bool {
	if x != nil {
		return x.IsRequired
	}
	return false
}

// CreateChalaniInput for creating a new chalani
type CreateChalaniInput struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Scope          Scope                  `protobuf:"varint,1,opt,name=scope,proto3,enum=darta.v1.Scope" json:"scope,omitempty"`
	WardId         string                 `protobuf:"bytes,2,opt,name=ward_id,json=wardId,proto3" json:"ward_id,omitempty"`
	Subject        string                 `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	Body           string                 `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	TemplateId     string                 `protobuf:"bytes,5,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	AttachmentIds  []string               `protobuf:"bytes,6,rep,name=attachment_ids,json=attachmentIds,proto3" json:"attachment_ids,omitempty"`
	LinkedDartaId  string                 `protobuf:"bytes,7,opt,name=linked_darta_id,json=linkedDartaId,proto3" json:"linked_darta_id,omitempty"`
	Recipient      *RecipientInput        `protobuf:"bytes,8,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Signatories    []*SignatoryInput      `protobuf:"bytes,9,rep,name=signatories,proto3" json:"signatories,omitempty"`
	IdempotencyKey string                 `protobuf:"bytes,10,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`
	TenantId       string                 `protobuf:"bytes,11,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateChalaniInput) Reset() {
	*x = CreateChalaniInput{}
	mi := &file_darta_v1_chalani_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChalaniInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChalaniInput) ProtoMessage() {}

func (x *CreateChalaniInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChalaniInput.ProtoReflect.Descriptor instead.
func (*CreateChalaniInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{14}
}

func (x *CreateChalaniInput) GetScope() Scope {
	if x != nil {
		return x.Scope
	}
	return Scope_SCOPE_UNSPECIFIED
}

func (x *CreateChalaniInput) GetWardId() string {
	if x != nil {
		return x.WardId
	}
	return ""
}

func (x *CreateChalaniInput) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CreateChalaniInput) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *CreateChalaniInput) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *CreateChalaniInput) GetAttachmentIds() []string {
	if x != nil {
		return x.AttachmentIds
	}
	return nil
}

func (x *CreateChalaniInput) GetLinkedDartaId() string {
	if x != nil {
		return x.LinkedDartaId
	}
	return ""
}

func (x *CreateChalaniInput) GetRecipient() *RecipientInput {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *CreateChalaniInput) GetSignatories() []*SignatoryInput {
	if x != nil {
		return x.Signatories
	}
	return nil
}

func (x *CreateChalaniInput) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *CreateChalaniInput) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// ReviewChalaniInput for reviewing chalani
type ReviewChalaniInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChalaniId     string                 `protobuf:"bytes,1,opt,name=chalani_id,json=chalaniId,proto3" json:"chalani_id,omitempty"`
	Notes         string                 `protobuf:"bytes,2,opt,name=notes,proto3" json:"notes,omitempty"`
	Approved      bool                   `protobuf:"varint,3,opt,name=approved,proto3" json:"approved,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewChalaniInput) Reset() {
	*x = ReviewChalaniInput{}
	mi := &file_darta_v1_chalani_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewChalaniInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewChalaniInput) ProtoMessage() {}

func (x *ReviewChalaniInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewChalaniInput.ProtoReflect.Descriptor instead.
func (*ReviewChalaniInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{15}
}

func (x *ReviewChalaniInput) GetChalaniId() string {
	if x != nil {
		return x.ChalaniId
	}
	return ""
}

func (x *ReviewChalaniInput) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *ReviewChalaniInput) GetApproved() bool {
	if x != nil {
		return x.Approved
	}
	return false
}

// ApproveChalaniInput for approving chalani
type ApproveChalaniInput struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ChalaniId         string                 `protobuf:"bytes,1,opt,name=chalani_id,json=chalaniId,proto3" json:"chalani_id,omitempty"`
	Decision          ApprovalDecision       `protobuf:"varint,2,opt,name=decision,proto3,enum=darta.v1.ApprovalDecision" json:"decision,omitempty"`
	Notes             string                 `protobuf:"bytes,3,opt,name=notes,proto3" json:"notes,omitempty"`
	DelegatedToUserId string                 `protobuf:"bytes,4,opt,name=delegated_to_user_id,json=delegatedToUserId,proto3" json:"delegated_to_user_id,omitempty"` // If delegating
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ApproveChalaniInput) Reset() {
	*x = ApproveChalaniInput{}
	mi := &file_darta_v1_chalani_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveChalaniInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveChalaniInput) ProtoMessage() {}

func (x *ApproveChalaniInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveChalaniInput.ProtoReflect.Descriptor instead.
func (*ApproveChalaniInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{16}
}

func (x *ApproveChalaniInput) GetChalaniId() string {
	if x != nil {
		return x.ChalaniId
	}
	return ""
}

func (x *ApproveChalaniInput) GetDecision() ApprovalDecision {
	if x != nil {
		return x.Decision
	}
	return ApprovalDecision_APPROVAL_DECISION_UNSPECIFIED
}

func (x *ApproveChalaniInput) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *ApproveChalaniInput) GetDelegatedToUserId() string {
	if x != nil {
		return x.DelegatedToUserId
	}
	return ""
}

// ReserveChalaniNumberInput
type ReserveChalaniNumberInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChalaniId     string                 `protobuf:"bytes,1,opt,name=chalani_id,json=chalaniId,proto3" json:"chalani_id,omitempty"`
	AllocationId  string                 `protobuf:"bytes,2,opt,name=allocation_id,json=allocationId,proto3" json:"allocation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReserveChalaniNumberInput) Reset() {
	*x = ReserveChalaniNumberInput{}
	mi := &file_darta_v1_chalani_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReserveChalaniNumberInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveChalaniNumberInput) ProtoMessage() {}

func (x *ReserveChalaniNumberInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveChalaniNumberInput.ProtoReflect.Descriptor instead.
func (*ReserveChalaniNumberInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{17}
}

func (x *ReserveChalaniNumberInput) GetChalaniId() string {
	if x != nil {
		return x.ChalaniId
	}
	return ""
}

func (x *ReserveChalaniNumberInput) GetAllocationId() string {
	if x != nil {
		return x.AllocationId
	}
	return ""
}

// FinalizeChalaniRegistrationInput
type FinalizeChalaniRegistrationInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChalaniId     string                 `protobuf:"bytes,1,opt,name=chalani_id,json=chalaniId,proto3" json:"chalani_id,omitempty"`
	AllocationId  string                 `protobuf:"bytes,2,opt,name=allocation_id,json=allocationId,proto3" json:"allocation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeChalaniRegistrationInput) Reset() {
	*x = FinalizeChalaniRegistrationInput{}
	mi := &file_darta_v1_chalani_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeChalaniRegistrationInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeChalaniRegistrationInput) ProtoMessage() {}

func (x *FinalizeChalaniRegistrationInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeChalaniRegistrationInput.ProtoReflect.Descriptor instead.
func (*FinalizeChalaniRegistrationInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{18}
}

func (x *FinalizeChalaniRegistrationInput) GetChalaniId() string {
	if x != nil {
		return x.ChalaniId
	}
	return ""
}

func (x *FinalizeChalaniRegistrationInput) GetAllocationId() string {
	if x != nil {
		return x.AllocationId
	}
	return ""
}

// DirectRegisterChalaniInput
type DirectRegisterChalaniInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChalaniId     string                 `protobuf:"bytes,1,opt,name=chalani_id,json=chalaniId,proto3" json:"chalani_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DirectRegisterChalaniInput) Reset() {
	*x = DirectRegisterChalaniInput{}
	mi := &file_darta_v1_chalani_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DirectRegisterChalaniInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectRegisterChalaniInput) ProtoMessage() {}

func (x *DirectRegisterChalaniInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectRegisterChalaniInput.ProtoReflect.Descriptor instead.
func (*DirectRegisterChalaniInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{19}
}

func (x *DirectRegisterChalaniInput) GetChalaniId() string {
	if x != nil {
		return x.ChalaniId
	}
	return ""
}

// SignChalaniInput for signing chalani
type SignChalaniInput struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	ChalaniId             string                 `protobuf:"bytes,1,opt,name=chalani_id,json=chalaniId,proto3" json:"chalani_id,omitempty"`
	SignatureAttachmentId string                 `protobuf:"bytes,2,opt,name=signature_attachment_id,json=signatureAttachmentId,proto3" json:"signature_attachment_id,omitempty"` // Digital signature image/PDF
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SignChalaniInput) Reset() {
	*x = SignChalaniInput{}
	mi := &file_darta_v1_chalani_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignChalaniInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignChalaniInput) ProtoMessage() {}

func (x *SignChalaniInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignChalaniInput.ProtoReflect.Descriptor instead.
func (*SignChalaniInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{20}
}

func (x *SignChalaniInput) GetChalaniId() string {
	if x != nil {
		return x.ChalaniId
	}
	return ""
}

func (x *SignChalaniInput) GetSignatureAttachmentId() string {
	if x != nil {
		return x.SignatureAttachmentId
	}
	return ""
}

// SealChalaniInput for sealing chalani
type SealChalaniInput struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ChalaniId        string                 `protobuf:"bytes,1,opt,name=chalani_id,json=chalaniId,proto3" json:"chalani_id,omitempty"`
	SealAttachmentId string                 `protobuf:"bytes,2,opt,name=seal_attachment_id,json=sealAttachmentId,proto3" json:"seal_attachment_id,omitempty"` // Seal image
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SealChalaniInput) Reset() {
	*x = SealChalaniInput{}
	mi := &file_darta_v1_chalani_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SealChalaniInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SealChalaniInput) ProtoMessage() {}

func (x *SealChalaniInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SealChalaniInput.ProtoReflect.Descriptor instead.
func (*SealChalaniInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{21}
}

func (x *SealChalaniInput) GetChalaniId() string {
	if x != nil {
		return x.ChalaniId
	}
	return ""
}

func (x *SealChalaniInput) GetSealAttachmentId() string {
	if x != nil {
		return x.SealAttachmentId
	}
	return ""
}

// DispatchChalaniInput for dispatching chalani
type DispatchChalaniInput struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ChalaniId       string                 `protobuf:"bytes,1,opt,name=chalani_id,json=chalaniId,proto3" json:"chalani_id,omitempty"`
	DispatchChannel DispatchChannel        `protobuf:"varint,2,opt,name=dispatch_channel,json=dispatchChannel,proto3,enum=darta.v1.DispatchChannel" json:"dispatch_channel,omitempty"`
	TrackingId      string                 `protobuf:"bytes,3,opt,name=tracking_id,json=trackingId,proto3" json:"tracking_id,omitempty"`
	CourierName     string                 `protobuf:"bytes,4,opt,name=courier_name,json=courierName,proto3" json:"courier_name,omitempty"`
	Notes           string                 `protobuf:"bytes,5,opt,name=notes,proto3" json:"notes,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DispatchChalaniInput) Reset() {
	*x = DispatchChalaniInput{}
	mi := &file_darta_v1_chalani_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DispatchChalaniInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatchChalaniInput) ProtoMessage() {}

func (x *DispatchChalaniInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatchChalaniInput.ProtoReflect.Descriptor instead.
func (*DispatchChalaniInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{22}
}

func (x *DispatchChalaniInput) GetChalaniId() string {
	if x != nil {
		return x.ChalaniId
	}
	return ""
}

func (x *DispatchChalaniInput) GetDispatchChannel() DispatchChannel {
	if x != nil {
		return x.DispatchChannel
	}
	return DispatchChannel_DISPATCH_CHANNEL_UNSPECIFIED
}

func (x *DispatchChalaniInput) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

func (x *DispatchChalaniInput) GetCourierName() string {
	if x != nil {
		return x.CourierName
	}
	return ""
}

func (x *DispatchChalaniInput) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

// MarkInTransitInput
type MarkInTransitInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChalaniId     string                 `protobuf:"bytes,1,opt,name=chalani_id,json=chalaniId,proto3" json:"chalani_id,omitempty"`
	Location      string                 `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Notes         string                 `protobuf:"bytes,3,opt,name=notes,proto3" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkInTransitInput) Reset() {
	*x = MarkInTransitInput{}
	mi := &file_darta_v1_chalani_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkInTransitInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkInTransitInput) ProtoMessage() {}

func (x *MarkInTransitInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkInTransitInput.ProtoReflect.Descriptor instead.
func (*MarkInTransitInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{23}
}

func (x *MarkInTransitInput) GetChalaniId() string {
	if x != nil {
		return x.ChalaniId
	}
	return ""
}

func (x *MarkInTransitInput) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *MarkInTransitInput) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

// AcknowledgeChalaniInput
type AcknowledgeChalaniInput struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	ChalaniId              string                 `protobuf:"bytes,1,opt,name=chalani_id,json=chalaniId,proto3" json:"chalani_id,omitempty"`
	AcknowledgedBy         string                 `protobuf:"bytes,2,opt,name=acknowledged_by,json=acknowledgedBy,proto3" json:"acknowledged_by,omitempty"`
	AcknowledgementProofId string                 `protobuf:"bytes,3,opt,name=acknowledgement_proof_id,json=acknowledgementProofId,proto3" json:"acknowledgement_proof_id,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AcknowledgeChalaniInput) Reset() {
	*x = AcknowledgeChalaniInput{}
	mi := &file_darta_v1_chalani_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcknowledgeChalaniInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeChalaniInput) ProtoMessage() {}

func (x *AcknowledgeChalaniInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeChalaniInput.ProtoReflect.Descriptor instead.
func (*AcknowledgeChalaniInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{24}
}

func (x *AcknowledgeChalaniInput) GetChalaniId() string {
	if x != nil {
		return x.ChalaniId
	}
	return ""
}

func (x *AcknowledgeChalaniInput) GetAcknowledgedBy() string {
	if x != nil {
		return x.AcknowledgedBy
	}
	return ""
}

func (x *AcknowledgeChalaniInput) GetAcknowledgementProofId() string {
	if x != nil {
		return x.AcknowledgementProofId
	}
	return ""
}

// MarkDeliveredInput
type MarkDeliveredInput struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ChalaniId        string                 `protobuf:"bytes,1,opt,name=chalani_id,json=chalaniId,proto3" json:"chalani_id,omitempty"`
	DeliveredProofId string                 `protobuf:"bytes,2,opt,name=delivered_proof_id,json=deliveredProofId,proto3" json:"delivered_proof_id,omitempty"`
	Notes            string                 `protobuf:"bytes,3,opt,name=notes,proto3" json:"notes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MarkDeliveredInput) Reset() {
	*x = MarkDeliveredInput{}
	mi := &file_darta_v1_chalani_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkDeliveredInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkDeliveredInput) ProtoMessage() {}

func (x *MarkDeliveredInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkDeliveredInput.ProtoReflect.Descriptor instead.
func (*MarkDeliveredInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{25}
}

func (x *MarkDeliveredInput) GetChalaniId() string {
	if x != nil {
		return x.ChalaniId
	}
	return ""
}

func (x *MarkDeliveredInput) GetDeliveredProofId() string {
	if x != nil {
		return x.DeliveredProofId
	}
	return ""
}

func (x *MarkDeliveredInput) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

// MarkReturnedUndeliveredInput
type MarkReturnedUndeliveredInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChalaniId     string                 `protobuf:"bytes,1,opt,name=chalani_id,json=chalaniId,proto3" json:"chalani_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkReturnedUndeliveredInput) Reset() {
	*x = MarkReturnedUndeliveredInput{}
	mi := &file_darta_v1_chalani_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkReturnedUndeliveredInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkReturnedUndeliveredInput) ProtoMessage() {}

func (x *MarkReturnedUndeliveredInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkReturnedUndeliveredInput.ProtoReflect.Descriptor instead.
func (*MarkReturnedUndeliveredInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{26}
}

func (x *MarkReturnedUndeliveredInput) GetChalaniId() string {
	if x != nil {
		return x.ChalaniId
	}
	return ""
}

func (x *MarkReturnedUndeliveredInput) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// ResendChalaniInput
type ResendChalaniInput struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ChalaniId          string                 `protobuf:"bytes,1,opt,name=chalani_id,json=chalaniId,proto3" json:"chalani_id,omitempty"`
	NewDispatchChannel DispatchChannel        `protobuf:"varint,2,opt,name=new_dispatch_channel,json=newDispatchChannel,proto3,enum=darta.v1.DispatchChannel" json:"new_dispatch_channel,omitempty"`
	NewRecipient       *RecipientInput        `protobuf:"bytes,3,opt,name=new_recipient,json=newRecipient,proto3" json:"new_recipient,omitempty"`
	Notes              string                 `protobuf:"bytes,4,opt,name=notes,proto3" json:"notes,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ResendChalaniInput) Reset() {
	*x = ResendChalaniInput{}
	mi := &file_darta_v1_chalani_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResendChalaniInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendChalaniInput) ProtoMessage() {}

func (x *ResendChalaniInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendChalaniInput.ProtoReflect.Descriptor instead.
func (*ResendChalaniInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{27}
}

func (x *ResendChalaniInput) GetChalaniId() string {
	if x != nil {
		return x.ChalaniId
	}
	return ""
}

func (x *ResendChalaniInput) GetNewDispatchChannel() DispatchChannel {
	if x != nil {
		return x.NewDispatchChannel
	}
	return DispatchChannel_DISPATCH_CHANNEL_UNSPECIFIED
}

func (x *ResendChalaniInput) GetNewRecipient() *RecipientInput {
	if x != nil {
		return x.NewRecipient
	}
	return nil
}

func (x *ResendChalaniInput) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

// VoidChalaniInput
type VoidChalaniInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChalaniId     string                 `protobuf:"bytes,1,opt,name=chalani_id,json=chalaniId,proto3" json:"chalani_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoidChalaniInput) Reset() {
	*x = VoidChalaniInput{}
	mi := &file_darta_v1_chalani_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoidChalaniInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoidChalaniInput) ProtoMessage() {}

func (x *VoidChalaniInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoidChalaniInput.ProtoReflect.Descriptor instead.
func (*VoidChalaniInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{28}
}

func (x *VoidChalaniInput) GetChalaniId() string {
	if x != nil {
		return x.ChalaniId
	}
	return ""
}

func (x *VoidChalaniInput) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// SupersedeChalaniInput
type SupersedeChalaniInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChalaniId     string                 `protobuf:"bytes,1,opt,name=chalani_id,json=chalaniId,proto3" json:"chalani_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	NewChalani    *CreateChalaniInput    `protobuf:"bytes,3,opt,name=new_chalani,json=newChalani,proto3" json:"new_chalani,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupersedeChalaniInput) Reset() {
	*x = SupersedeChalaniInput{}
	mi := &file_darta_v1_chalani_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupersedeChalaniInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupersedeChalaniInput) ProtoMessage() {}

func (x *SupersedeChalaniInput) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupersedeChalaniInput.ProtoReflect.Descriptor instead.
func (*SupersedeChalaniInput) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{29}
}

func (x *SupersedeChalaniInput) GetChalaniId() string {
	if x != nil {
		return x.ChalaniId
	}
	return ""
}

func (x *SupersedeChalaniInput) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SupersedeChalaniInput) GetNewChalani() *CreateChalaniInput {
	if x != nil {
		return x.NewChalani
	}
	return nil
}

// Query requests/responses
type GetChalaniRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChalaniRequest) Reset() {
	*x = GetChalaniRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChalaniRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChalaniRequest) ProtoMessage() {}

func (x *GetChalaniRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChalaniRequest.ProtoReflect.Descriptor instead.
func (*GetChalaniRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{30}
}

func (x *GetChalaniRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetChalaniResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chalani       *Chalani               `protobuf:"bytes,1,opt,name=chalani,proto3" json:"chalani,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChalaniResponse) Reset() {
	*x = GetChalaniResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChalaniResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChalaniResponse) ProtoMessage() {}

func (x *GetChalaniResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChalaniResponse.ProtoReflect.Descriptor instead.
func (*GetChalaniResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{31}
}

func (x *GetChalaniResponse) GetChalani() *Chalani {
	if x != nil {
		return x.Chalani
	}
	return nil
}

type GetChalaniByNumberRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChalaniNumber int32                  `protobuf:"varint,1,opt,name=chalani_number,json=chalaniNumber,proto3" json:"chalani_number,omitempty"`
	FiscalYearId  string                 `protobuf:"bytes,2,opt,name=fiscal_year_id,json=fiscalYearId,proto3" json:"fiscal_year_id,omitempty"`
	Scope         Scope                  `protobuf:"varint,3,opt,name=scope,proto3,enum=darta.v1.Scope" json:"scope,omitempty"`
	WardId        string                 `protobuf:"bytes,4,opt,name=ward_id,json=wardId,proto3" json:"ward_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChalaniByNumberRequest) Reset() {
	*x = GetChalaniByNumberRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChalaniByNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChalaniByNumberRequest) ProtoMessage() {}

func (x *GetChalaniByNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChalaniByNumberRequest.ProtoReflect.Descriptor instead.
func (*GetChalaniByNumberRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{32}
}

func (x *GetChalaniByNumberRequest) GetChalaniNumber() int32 {
	if x != nil {
		return x.ChalaniNumber
	}
	return 0
}

func (x *GetChalaniByNumberRequest) GetFiscalYearId() string {
	if x != nil {
		return x.FiscalYearId
	}
	return ""
}

func (x *GetChalaniByNumberRequest) GetScope() Scope {
	if x != nil {
		return x.Scope
	}
	return Scope_SCOPE_UNSPECIFIED
}

func (x *GetChalaniByNumberRequest) GetWardId() string {
	if x != nil {
		return x.WardId
	}
	return ""
}

type GetChalaniByNumberResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chalani       *Chalani               `protobuf:"bytes,1,opt,name=chalani,proto3" json:"chalani,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChalaniByNumberResponse) Reset() {
	*x = GetChalaniByNumberResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChalaniByNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChalaniByNumberResponse) ProtoMessage() {}

func (x *GetChalaniByNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChalaniByNumberResponse.ProtoReflect.Descriptor instead.
func (*GetChalaniByNumberResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{33}
}

func (x *GetChalaniByNumberResponse) GetChalani() *Chalani {
	if x != nil {
		return x.Chalani
	}
	return nil
}

type ListChalanisRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *ChalaniFilterInput    `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Pagination    *PaginationInput       `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChalanisRequest) Reset() {
	*x = ListChalanisRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChalanisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChalanisRequest) ProtoMessage() {}

func (x *ListChalanisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChalanisRequest.ProtoReflect.Descriptor instead.
func (*ListChalanisRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{34}
}

func (x *ListChalanisRequest) GetFilter() *ChalaniFilterInput {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListChalanisRequest) GetPagination() *PaginationInput {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListChalanisResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Connection    *ChalaniConnection     `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChalanisResponse) Reset() {
	*x = ListChalanisResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChalanisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChalanisResponse) ProtoMessage() {}

func (x *ListChalanisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChalanisResponse.ProtoReflect.Descriptor instead.
func (*ListChalanisResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{35}
}

func (x *ListChalanisResponse) GetConnection() *ChalaniConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

type GetMyChalaniRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        ChalaniStatus          `protobuf:"varint,1,opt,name=status,proto3,enum=darta.v1.ChalaniStatus" json:"status,omitempty"`
	Pagination    *PaginationInput       `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // From context
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMyChalaniRequest) Reset() {
	*x = GetMyChalaniRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMyChalaniRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyChalaniRequest) ProtoMessage() {}

func (x *GetMyChalaniRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyChalaniRequest.ProtoReflect.Descriptor instead.
func (*GetMyChalaniRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{36}
}

func (x *GetMyChalaniRequest) GetStatus() ChalaniStatus {
	if x != nil {
		return x.Status
	}
	return ChalaniStatus_CHALANI_STATUS_UNSPECIFIED
}

func (x *GetMyChalaniRequest) GetPagination() *PaginationInput {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetMyChalaniRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetMyChalaniResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Connection    *ChalaniConnection     `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMyChalaniResponse) Reset() {
	*x = GetMyChalaniResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMyChalaniResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyChalaniResponse) ProtoMessage() {}

func (x *GetMyChalaniResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyChalaniResponse.ProtoReflect.Descriptor instead.
func (*GetMyChalaniResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{37}
}

func (x *GetMyChalaniResponse) GetConnection() *ChalaniConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

type GetChalaniStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         Scope                  `protobuf:"varint,1,opt,name=scope,proto3,enum=darta.v1.Scope" json:"scope,omitempty"`
	FiscalYearId  string                 `protobuf:"bytes,2,opt,name=fiscal_year_id,json=fiscalYearId,proto3" json:"fiscal_year_id,omitempty"`
	WardId        string                 `protobuf:"bytes,3,opt,name=ward_id,json=wardId,proto3" json:"ward_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChalaniStatsRequest) Reset() {
	*x = GetChalaniStatsRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChalaniStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChalaniStatsRequest) ProtoMessage() {}

func (x *GetChalaniStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChalaniStatsRequest.ProtoReflect.Descriptor instead.
func (*GetChalaniStatsRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{38}
}

func (x *GetChalaniStatsRequest) GetScope() Scope {
	if x != nil {
		return x.Scope
	}
	return Scope_SCOPE_UNSPECIFIED
}

func (x *GetChalaniStatsRequest) GetFiscalYearId() string {
	if x != nil {
		return x.FiscalYearId
	}
	return ""
}

func (x *GetChalaniStatsRequest) GetWardId() string {
	if x != nil {
		return x.WardId
	}
	return ""
}

func (x *GetChalaniStatsRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type GetChalaniStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stats         *ChalaniStats          `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChalaniStatsResponse) Reset() {
	*x = GetChalaniStatsResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChalaniStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChalaniStatsResponse) ProtoMessage() {}

func (x *GetChalaniStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChalaniStatsResponse.ProtoReflect.Descriptor instead.
func (*GetChalaniStatsResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{39}
}

func (x *GetChalaniStatsResponse) GetStats() *ChalaniStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type ListChalaniTemplatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Category      string                 `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	ActiveOnly    bool                   `protobuf:"varint,2,opt,name=active_only,json=activeOnly,proto3" json:"active_only,omitempty"`
	Pagination    *PaginationInput       `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChalaniTemplatesRequest) Reset() {
	*x = ListChalaniTemplatesRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChalaniTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChalaniTemplatesRequest) ProtoMessage() {}

func (x *ListChalaniTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChalaniTemplatesRequest.ProtoReflect.Descriptor instead.
func (*ListChalaniTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{40}
}

func (x *ListChalaniTemplatesRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ListChalaniTemplatesRequest) GetActiveOnly() bool {
	if x != nil {
		return x.ActiveOnly
	}
	return false
}

func (x *ListChalaniTemplatesRequest) GetPagination() *PaginationInput {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListChalaniTemplatesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Templates     []*ChalaniTemplate     `protobuf:"bytes,1,rep,name=templates,proto3" json:"templates,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChalaniTemplatesResponse) Reset() {
	*x = ListChalaniTemplatesResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChalaniTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChalaniTemplatesResponse) ProtoMessage() {}

func (x *ListChalaniTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChalaniTemplatesResponse.ProtoReflect.Descriptor instead.
func (*ListChalaniTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{41}
}

func (x *ListChalaniTemplatesResponse) GetTemplates() []*ChalaniTemplate {
	if x != nil {
		return x.Templates
	}
	return nil
}

func (x *ListChalaniTemplatesResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetChalaniTemplateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChalaniTemplateRequest) Reset() {
	*x = GetChalaniTemplateRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChalaniTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChalaniTemplateRequest) ProtoMessage() {}

func (x *GetChalaniTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChalaniTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetChalaniTemplateRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{42}
}

func (x *GetChalaniTemplateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetChalaniTemplateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Template      *ChalaniTemplate       `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChalaniTemplateResponse) Reset() {
	*x = GetChalaniTemplateResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChalaniTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChalaniTemplateResponse) ProtoMessage() {}

func (x *GetChalaniTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChalaniTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetChalaniTemplateResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{43}
}

func (x *GetChalaniTemplateResponse) GetTemplate() *ChalaniTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

// Mutation requests/responses
type CreateChalaniRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Input         *CreateChalaniInput    `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChalaniRequest) Reset() {
	*x = CreateChalaniRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChalaniRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChalaniRequest) ProtoMessage() {}

func (x *CreateChalaniRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChalaniRequest.ProtoReflect.Descriptor instead.
func (*CreateChalaniRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{44}
}

func (x *CreateChalaniRequest) GetInput() *CreateChalaniInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type CreateChalaniResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chalani       *Chalani               `protobuf:"bytes,1,opt,name=chalani,proto3" json:"chalani,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChalaniResponse) Reset() {
	*x = CreateChalaniResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChalaniResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChalaniResponse) ProtoMessage() {}

func (x *CreateChalaniResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChalaniResponse.ProtoReflect.Descriptor instead.
func (*CreateChalaniResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{45}
}

func (x *CreateChalaniResponse) GetChalani() *Chalani {
	if x != nil {
		return x.Chalani
	}
	return nil
}

type SubmitChalaniRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChalaniId     string                 `protobuf:"bytes,1,opt,name=chalani_id,json=chalaniId,proto3" json:"chalani_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitChalaniRequest) Reset() {
	*x = SubmitChalaniRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitChalaniRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitChalaniRequest) ProtoMessage() {}

func (x *SubmitChalaniRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitChalaniRequest.ProtoReflect.Descriptor instead.
func (*SubmitChalaniRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{46}
}

func (x *SubmitChalaniRequest) GetChalaniId() string {
	if x != nil {
		return x.ChalaniId
	}
	return ""
}

type SubmitChalaniResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chalani       *Chalani               `protobuf:"bytes,1,opt,name=chalani,proto3" json:"chalani,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitChalaniResponse) Reset() {
	*x = SubmitChalaniResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitChalaniResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitChalaniResponse) ProtoMessage() {}

func (x *SubmitChalaniResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitChalaniResponse.ProtoReflect.Descriptor instead.
func (*SubmitChalaniResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{47}
}

func (x *SubmitChalaniResponse) GetChalani() *Chalani {
	if x != nil {
		return x.Chalani
	}
	return nil
}

type ReviewChalaniRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Input         *ReviewChalaniInput    `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewChalaniRequest) Reset() {
	*x = ReviewChalaniRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewChalaniRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewChalaniRequest) ProtoMessage() {}

func (x *ReviewChalaniRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewChalaniRequest.ProtoReflect.Descriptor instead.
func (*ReviewChalaniRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{48}
}

func (x *ReviewChalaniRequest) GetInput() *ReviewChalaniInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type ReviewChalaniResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chalani       *Chalani               `protobuf:"bytes,1,opt,name=chalani,proto3" json:"chalani,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewChalaniResponse) Reset() {
	*x = ReviewChalaniResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewChalaniResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewChalaniResponse) ProtoMessage() {}

func (x *ReviewChalaniResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewChalaniResponse.ProtoReflect.Descriptor instead.
func (*ReviewChalaniResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{49}
}

func (x *ReviewChalaniResponse) GetChalani() *Chalani {
	if x != nil {
		return x.Chalani
	}
	return nil
}

type ApproveChalaniRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Input         *ApproveChalaniInput   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveChalaniRequest) Reset() {
	*x = ApproveChalaniRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveChalaniRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveChalaniRequest) ProtoMessage() {}

func (x *ApproveChalaniRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveChalaniRequest.ProtoReflect.Descriptor instead.
func (*ApproveChalaniRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{50}
}

func (x *ApproveChalaniRequest) GetInput() *ApproveChalaniInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type ApproveChalaniResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chalani       *Chalani               `protobuf:"bytes,1,opt,name=chalani,proto3" json:"chalani,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveChalaniResponse) Reset() {
	*x = ApproveChalaniResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveChalaniResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveChalaniResponse) ProtoMessage() {}

func (x *ApproveChalaniResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveChalaniResponse.ProtoReflect.Descriptor instead.
func (*ApproveChalaniResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{51}
}

func (x *ApproveChalaniResponse) GetChalani() *Chalani {
	if x != nil {
		return x.Chalani
	}
	return nil
}

type ReserveChalaniNumberRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Input         *ReserveChalaniNumberInput `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReserveChalaniNumberRequest) Reset() {
	*x = ReserveChalaniNumberRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReserveChalaniNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveChalaniNumberRequest) ProtoMessage() {}

func (x *ReserveChalaniNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveChalaniNumberRequest.ProtoReflect.Descriptor instead.
func (*ReserveChalaniNumberRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{52}
}

func (x *ReserveChalaniNumberRequest) GetInput() *ReserveChalaniNumberInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type ReserveChalaniNumberResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chalani       *Chalani               `protobuf:"bytes,1,opt,name=chalani,proto3" json:"chalani,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReserveChalaniNumberResponse) Reset() {
	*x = ReserveChalaniNumberResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReserveChalaniNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveChalaniNumberResponse) ProtoMessage() {}

func (x *ReserveChalaniNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveChalaniNumberResponse.ProtoReflect.Descriptor instead.
func (*ReserveChalaniNumberResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{53}
}

func (x *ReserveChalaniNumberResponse) GetChalani() *Chalani {
	if x != nil {
		return x.Chalani
	}
	return nil
}

type FinalizeChalaniRegistrationRequest struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Input         *FinalizeChalaniRegistrationInput `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeChalaniRegistrationRequest) Reset() {
	*x = FinalizeChalaniRegistrationRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeChalaniRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeChalaniRegistrationRequest) ProtoMessage() {}

func (x *FinalizeChalaniRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeChalaniRegistrationRequest.ProtoReflect.Descriptor instead.
func (*FinalizeChalaniRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{54}
}

func (x *FinalizeChalaniRegistrationRequest) GetInput() *FinalizeChalaniRegistrationInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type FinalizeChalaniRegistrationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chalani       *Chalani               `protobuf:"bytes,1,opt,name=chalani,proto3" json:"chalani,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeChalaniRegistrationResponse) Reset() {
	*x = FinalizeChalaniRegistrationResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeChalaniRegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeChalaniRegistrationResponse) ProtoMessage() {}

func (x *FinalizeChalaniRegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeChalaniRegistrationResponse.ProtoReflect.Descriptor instead.
func (*FinalizeChalaniRegistrationResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{55}
}

func (x *FinalizeChalaniRegistrationResponse) GetChalani() *Chalani {
	if x != nil {
		return x.Chalani
	}
	return nil
}

type DirectRegisterChalaniRequest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Input         *DirectRegisterChalaniInput `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DirectRegisterChalaniRequest) Reset() {
	*x = DirectRegisterChalaniRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DirectRegisterChalaniRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectRegisterChalaniRequest) ProtoMessage() {}

func (x *DirectRegisterChalaniRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectRegisterChalaniRequest.ProtoReflect.Descriptor instead.
func (*DirectRegisterChalaniRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{56}
}

func (x *DirectRegisterChalaniRequest) GetInput() *DirectRegisterChalaniInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type DirectRegisterChalaniResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chalani       *Chalani               `protobuf:"bytes,1,opt,name=chalani,proto3" json:"chalani,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DirectRegisterChalaniResponse) Reset() {
	*x = DirectRegisterChalaniResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DirectRegisterChalaniResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectRegisterChalaniResponse) ProtoMessage() {}

func (x *DirectRegisterChalaniResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectRegisterChalaniResponse.ProtoReflect.Descriptor instead.
func (*DirectRegisterChalaniResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{57}
}

func (x *DirectRegisterChalaniResponse) GetChalani() *Chalani {
	if x != nil {
		return x.Chalani
	}
	return nil
}

type SignChalaniRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Input         *SignChalaniInput      `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignChalaniRequest) Reset() {
	*x = SignChalaniRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignChalaniRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignChalaniRequest) ProtoMessage() {}

func (x *SignChalaniRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignChalaniRequest.ProtoReflect.Descriptor instead.
func (*SignChalaniRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{58}
}

func (x *SignChalaniRequest) GetInput() *SignChalaniInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type SignChalaniResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chalani       *Chalani               `protobuf:"bytes,1,opt,name=chalani,proto3" json:"chalani,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignChalaniResponse) Reset() {
	*x = SignChalaniResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignChalaniResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignChalaniResponse) ProtoMessage() {}

func (x *SignChalaniResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignChalaniResponse.ProtoReflect.Descriptor instead.
func (*SignChalaniResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{59}
}

func (x *SignChalaniResponse) GetChalani() *Chalani {
	if x != nil {
		return x.Chalani
	}
	return nil
}

type SealChalaniRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Input         *SealChalaniInput      `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SealChalaniRequest) Reset() {
	*x = SealChalaniRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SealChalaniRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SealChalaniRequest) ProtoMessage() {}

func (x *SealChalaniRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SealChalaniRequest.ProtoReflect.Descriptor instead.
func (*SealChalaniRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{60}
}

func (x *SealChalaniRequest) GetInput() *SealChalaniInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type SealChalaniResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chalani       *Chalani               `protobuf:"bytes,1,opt,name=chalani,proto3" json:"chalani,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SealChalaniResponse) Reset() {
	*x = SealChalaniResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SealChalaniResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SealChalaniResponse) ProtoMessage() {}

func (x *SealChalaniResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SealChalaniResponse.ProtoReflect.Descriptor instead.
func (*SealChalaniResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{61}
}

func (x *SealChalaniResponse) GetChalani() *Chalani {
	if x != nil {
		return x.Chalani
	}
	return nil
}

type DispatchChalaniRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Input         *DispatchChalaniInput  `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DispatchChalaniRequest) Reset() {
	*x = DispatchChalaniRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DispatchChalaniRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatchChalaniRequest) ProtoMessage() {}

func (x *DispatchChalaniRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatchChalaniRequest.ProtoReflect.Descriptor instead.
func (*DispatchChalaniRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{62}
}

func (x *DispatchChalaniRequest) GetInput() *DispatchChalaniInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type DispatchChalaniResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chalani       *Chalani               `protobuf:"bytes,1,opt,name=chalani,proto3" json:"chalani,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DispatchChalaniResponse) Reset() {
	*x = DispatchChalaniResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DispatchChalaniResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatchChalaniResponse) ProtoMessage() {}

func (x *DispatchChalaniResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatchChalaniResponse.ProtoReflect.Descriptor instead.
func (*DispatchChalaniResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{63}
}

func (x *DispatchChalaniResponse) GetChalani() *Chalani {
	if x != nil {
		return x.Chalani
	}
	return nil
}

type MarkChalaniInTransitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Input         *MarkInTransitInput    `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkChalaniInTransitRequest) Reset() {
	*x = MarkChalaniInTransitRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkChalaniInTransitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkChalaniInTransitRequest) ProtoMessage() {}

func (x *MarkChalaniInTransitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkChalaniInTransitRequest.ProtoReflect.Descriptor instead.
func (*MarkChalaniInTransitRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{64}
}

func (x *MarkChalaniInTransitRequest) GetInput() *MarkInTransitInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type MarkChalaniInTransitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chalani       *Chalani               `protobuf:"bytes,1,opt,name=chalani,proto3" json:"chalani,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkChalaniInTransitResponse) Reset() {
	*x = MarkChalaniInTransitResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkChalaniInTransitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkChalaniInTransitResponse) ProtoMessage() {}

func (x *MarkChalaniInTransitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkChalaniInTransitResponse.ProtoReflect.Descriptor instead.
func (*MarkChalaniInTransitResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{65}
}

func (x *MarkChalaniInTransitResponse) GetChalani() *Chalani {
	if x != nil {
		return x.Chalani
	}
	return nil
}

type AcknowledgeChalaniRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Input         *AcknowledgeChalaniInput `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcknowledgeChalaniRequest) Reset() {
	*x = AcknowledgeChalaniRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcknowledgeChalaniRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeChalaniRequest) ProtoMessage() {}

func (x *AcknowledgeChalaniRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeChalaniRequest.ProtoReflect.Descriptor instead.
func (*AcknowledgeChalaniRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{66}
}

func (x *AcknowledgeChalaniRequest) GetInput() *AcknowledgeChalaniInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type AcknowledgeChalaniResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chalani       *Chalani               `protobuf:"bytes,1,opt,name=chalani,proto3" json:"chalani,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcknowledgeChalaniResponse) Reset() {
	*x = AcknowledgeChalaniResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcknowledgeChalaniResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeChalaniResponse) ProtoMessage() {}

func (x *AcknowledgeChalaniResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeChalaniResponse.ProtoReflect.Descriptor instead.
func (*AcknowledgeChalaniResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{67}
}

func (x *AcknowledgeChalaniResponse) GetChalani() *Chalani {
	if x != nil {
		return x.Chalani
	}
	return nil
}

type MarkChalaniDeliveredRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Input         *MarkDeliveredInput    `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkChalaniDeliveredRequest) Reset() {
	*x = MarkChalaniDeliveredRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkChalaniDeliveredRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkChalaniDeliveredRequest) ProtoMessage() {}

func (x *MarkChalaniDeliveredRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkChalaniDeliveredRequest.ProtoReflect.Descriptor instead.
func (*MarkChalaniDeliveredRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{68}
}

func (x *MarkChalaniDeliveredRequest) GetInput() *MarkDeliveredInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type MarkChalaniDeliveredResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chalani       *Chalani               `protobuf:"bytes,1,opt,name=chalani,proto3" json:"chalani,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkChalaniDeliveredResponse) Reset() {
	*x = MarkChalaniDeliveredResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkChalaniDeliveredResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkChalaniDeliveredResponse) ProtoMessage() {}

func (x *MarkChalaniDeliveredResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkChalaniDeliveredResponse.ProtoReflect.Descriptor instead.
func (*MarkChalaniDeliveredResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{69}
}

func (x *MarkChalaniDeliveredResponse) GetChalani() *Chalani {
	if x != nil {
		return x.Chalani
	}
	return nil
}

type MarkChalaniReturnedUndeliveredRequest struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Input         *MarkReturnedUndeliveredInput `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkChalaniReturnedUndeliveredRequest) Reset() {
	*x = MarkChalaniReturnedUndeliveredRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkChalaniReturnedUndeliveredRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkChalaniReturnedUndeliveredRequest) ProtoMessage() {}

func (x *MarkChalaniReturnedUndeliveredRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkChalaniReturnedUndeliveredRequest.ProtoReflect.Descriptor instead.
func (*MarkChalaniReturnedUndeliveredRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{70}
}

func (x *MarkChalaniReturnedUndeliveredRequest) GetInput() *MarkReturnedUndeliveredInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type MarkChalaniReturnedUndeliveredResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chalani       *Chalani               `protobuf:"bytes,1,opt,name=chalani,proto3" json:"chalani,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkChalaniReturnedUndeliveredResponse) Reset() {
	*x = MarkChalaniReturnedUndeliveredResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkChalaniReturnedUndeliveredResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkChalaniReturnedUndeliveredResponse) ProtoMessage() {}

func (x *MarkChalaniReturnedUndeliveredResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkChalaniReturnedUndeliveredResponse.ProtoReflect.Descriptor instead.
func (*MarkChalaniReturnedUndeliveredResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{71}
}

func (x *MarkChalaniReturnedUndeliveredResponse) GetChalani() *Chalani {
	if x != nil {
		return x.Chalani
	}
	return nil
}

type ResendChalaniRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Input         *ResendChalaniInput    `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResendChalaniRequest) Reset() {
	*x = ResendChalaniRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResendChalaniRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendChalaniRequest) ProtoMessage() {}

func (x *ResendChalaniRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendChalaniRequest.ProtoReflect.Descriptor instead.
func (*ResendChalaniRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{72}
}

func (x *ResendChalaniRequest) GetInput() *ResendChalaniInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type ResendChalaniResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chalani       *Chalani               `protobuf:"bytes,1,opt,name=chalani,proto3" json:"chalani,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResendChalaniResponse) Reset() {
	*x = ResendChalaniResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResendChalaniResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendChalaniResponse) ProtoMessage() {}

func (x *ResendChalaniResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendChalaniResponse.ProtoReflect.Descriptor instead.
func (*ResendChalaniResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{73}
}

func (x *ResendChalaniResponse) GetChalani() *Chalani {
	if x != nil {
		return x.Chalani
	}
	return nil
}

type VoidChalaniRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Input         *VoidChalaniInput      `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoidChalaniRequest) Reset() {
	*x = VoidChalaniRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoidChalaniRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoidChalaniRequest) ProtoMessage() {}

func (x *VoidChalaniRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoidChalaniRequest.ProtoReflect.Descriptor instead.
func (*VoidChalaniRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{74}
}

func (x *VoidChalaniRequest) GetInput() *VoidChalaniInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type VoidChalaniResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chalani       *Chalani               `protobuf:"bytes,1,opt,name=chalani,proto3" json:"chalani,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoidChalaniResponse) Reset() {
	*x = VoidChalaniResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoidChalaniResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoidChalaniResponse) ProtoMessage() {}

func (x *VoidChalaniResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoidChalaniResponse.ProtoReflect.Descriptor instead.
func (*VoidChalaniResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{75}
}

func (x *VoidChalaniResponse) GetChalani() *Chalani {
	if x != nil {
		return x.Chalani
	}
	return nil
}

type SupersedeChalaniRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Input         *SupersedeChalaniInput `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupersedeChalaniRequest) Reset() {
	*x = SupersedeChalaniRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupersedeChalaniRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupersedeChalaniRequest) ProtoMessage() {}

func (x *SupersedeChalaniRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupersedeChalaniRequest.ProtoReflect.Descriptor instead.
func (*SupersedeChalaniRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{76}
}

func (x *SupersedeChalaniRequest) GetInput() *SupersedeChalaniInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type SupersedeChalaniResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Result        *SupersedeChalaniResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupersedeChalaniResponse) Reset() {
	*x = SupersedeChalaniResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupersedeChalaniResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupersedeChalaniResponse) ProtoMessage() {}

func (x *SupersedeChalaniResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupersedeChalaniResponse.ProtoReflect.Descriptor instead.
func (*SupersedeChalaniResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{77}
}

func (x *SupersedeChalaniResponse) GetResult() *SupersedeChalaniResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type CloseChalaniRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChalaniId     string                 `protobuf:"bytes,1,opt,name=chalani_id,json=chalaniId,proto3" json:"chalani_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseChalaniRequest) Reset() {
	*x = CloseChalaniRequest{}
	mi := &file_darta_v1_chalani_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseChalaniRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseChalaniRequest) ProtoMessage() {}

func (x *CloseChalaniRequest) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseChalaniRequest.ProtoReflect.Descriptor instead.
func (*CloseChalaniRequest) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{78}
}

func (x *CloseChalaniRequest) GetChalaniId() string {
	if x != nil {
		return x.ChalaniId
	}
	return ""
}

type CloseChalaniResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chalani       *Chalani               `protobuf:"bytes,1,opt,name=chalani,proto3" json:"chalani,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseChalaniResponse) Reset() {
	*x = CloseChalaniResponse{}
	mi := &file_darta_v1_chalani_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseChalaniResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseChalaniResponse) ProtoMessage() {}

func (x *CloseChalaniResponse) ProtoReflect() protoreflect.Message {
	mi := &file_darta_v1_chalani_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseChalaniResponse.ProtoReflect.Descriptor instead.
func (*CloseChalaniResponse) Descriptor() ([]byte, []int) {
	return file_darta_v1_chalani_proto_rawDescGZIP(), []int{79}
}

func (x *CloseChalaniResponse) GetChalani() *Chalani {
	if x != nil {
		return x.Chalani
	}
	return nil
}

var File_darta_v1_chalani_proto protoreflect.FileDescriptor

const file_darta_v1_chalani_proto_rawDesc = "" +
	"\n" +
	"\x16darta/v1/chalani.proto\x12\bdarta.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x15darta/v1/common.proto\"\xdd\f\n" +
	"\aChalani\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\x0echalani_number\x18\x02 \x01(\x05R\rchalaniNumber\x128\n" +
	"\x18formatted_chalani_number\x18\x03 \x01(\tR\x16formattedChalaniNumber\x125\n" +
	"\vfiscal_year\x18\x04 \x01(\v2\x14.darta.v1.FiscalYearR\n" +
	"fiscalYear\x12%\n" +
	"\x05scope\x18\x05 \x01(\x0e2\x0f.darta.v1.ScopeR\x05scope\x12\"\n" +
	"\x04ward\x18\x06 \x01(\v2\x0e.darta.v1.WardR\x04ward\x12\x18\n" +
	"\asubject\x18\a \x01(\tR\asubject\x12\x12\n" +
	"\x04body\x18\b \x01(\tR\x04body\x12\x1f\n" +
	"\vtemplate_id\x18\t \x01(\tR\n" +
	"templateId\x126\n" +
	"\vattachments\x18\n" +
	" \x03(\v2\x14.darta.v1.AttachmentR\vattachments\x12&\n" +
	"\x0flinked_darta_id\x18\v \x01(\tR\rlinkedDartaId\x12/\n" +
	"\x06status\x18\f \x01(\x0e2\x17.darta.v1.ChalaniStatusR\x06status\x12F\n" +
	"\x14required_signatories\x18\r \x03(\v2\x13.darta.v1.SignatoryR\x13requiredSignatories\x120\n" +
	"\tapprovals\x18\x0e \x03(\v2\x12.darta.v1.ApprovalR\tapprovals\x12*\n" +
	"\x11is_fully_approved\x18\x0f \x01(\bR\x0fisFullyApproved\x12D\n" +
	"\x10dispatch_channel\x18\x10 \x01(\x0e2\x19.darta.v1.DispatchChannelR\x0fdispatchChannel\x121\n" +
	"\trecipient\x18\x11 \x01(\v2\x13.darta.v1.RecipientR\trecipient\x12?\n" +
	"\rdispatched_at\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\fdispatchedAt\x123\n" +
	"\rdispatched_by\x18\x13 \x01(\v2\x0e.darta.v1.UserR\fdispatchedBy\x12\x1f\n" +
	"\vtracking_id\x18\x14 \x01(\tR\n" +
	"trackingId\x12!\n" +
	"\fcourier_name\x18\x15 \x01(\tR\vcourierName\x12'\n" +
	"\x0fis_acknowledged\x18\x16 \x01(\bR\x0eisAcknowledged\x12C\n" +
	"\x0facknowledged_at\x18\x17 \x01(\v2\x1a.google.protobuf.TimestampR\x0eacknowledgedAt\x12'\n" +
	"\x0facknowledged_by\x18\x18 \x01(\tR\x0eacknowledgedBy\x12I\n" +
	"\x15acknowledgement_proof\x18\x19 \x01(\v2\x14.darta.v1.AttachmentR\x14acknowledgementProof\x12=\n" +
	"\fdelivered_at\x18\x1a \x01(\v2\x1a.google.protobuf.TimestampR\vdeliveredAt\x12=\n" +
	"\x0fdelivered_proof\x18\x1b \x01(\v2\x14.darta.v1.AttachmentR\x0edeliveredProof\x12-\n" +
	"\n" +
	"created_by\x18\x1c \x01(\v2\x0e.darta.v1.UserR\tcreatedBy\x129\n" +
	"\n" +
	"created_at\x18\x1d \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x1e \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x125\n" +
	"\vaudit_trail\x18\x1f \x03(\v2\x14.darta.v1.AuditEntryR\n" +
	"auditTrail\x12(\n" +
	"\x10superseded_by_id\x18  \x01(\tR\x0esupersededById\x12#\n" +
	"\rsupersedes_id\x18! \x01(\tR\fsupersedesId\x12\x1b\n" +
	"\ttenant_id\x18\" \x01(\tR\btenantId\"\x9a\x01\n" +
	"\tSignatory\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\"\n" +
	"\x04user\x18\x02 \x01(\v2\x0e.darta.v1.UserR\x04user\x12\"\n" +
	"\x04role\x18\x03 \x01(\v2\x0e.darta.v1.RoleR\x04role\x12\x14\n" +
	"\x05order\x18\x04 \x01(\x05R\x05order\x12\x1f\n" +
	"\vis_required\x18\x05 \x01(\bR\n" +
	"isRequired\"\xd8\x01\n" +
	"\bApproval\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x121\n" +
	"\tsignatory\x18\x02 \x01(\v2\x13.darta.v1.SignatoryR\tsignatory\x126\n" +
	"\bdecision\x18\x03 \x01(\x0e2\x1a.darta.v1.ApprovalDecisionR\bdecision\x12\x14\n" +
	"\x05notes\x18\x04 \x01(\tR\x05notes\x12;\n" +
	"\vapproved_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"approvedAt\"\xc6\x01\n" +
	"\tRecipient\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12+\n" +
	"\x04type\x18\x02 \x01(\x0e2\x17.darta.v1.RecipientTypeR\x04type\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\"\n" +
	"\forganization\x18\x04 \x01(\tR\forganization\x12\x14\n" +
	"\x05email\x18\x05 \x01(\tR\x05email\x12\x14\n" +
	"\x05phone\x18\x06 \x01(\tR\x05phone\x12\x18\n" +
	"\aaddress\x18\a \x01(\tR\aaddress\"q\n" +
	"\x11ChalaniConnection\x12+\n" +
	"\x05edges\x18\x01 \x03(\v2\x15.darta.v1.ChalaniEdgeR\x05edges\x12/\n" +
	"\tpage_info\x18\x02 \x01(\v2\x12.darta.v1.PageInfoR\bpageInfo\"L\n" +
	"\vChalaniEdge\x12\x16\n" +
	"\x06cursor\x18\x01 \x01(\tR\x06cursor\x12%\n" +
	"\x04node\x18\x02 \x01(\v2\x11.darta.v1.ChalaniR\x04node\"\x88\x02\n" +
	"\fChalaniStats\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x129\n" +
	"\tby_status\x18\x02 \x03(\v2\x1c.darta.v1.ChalaniStatusCountR\bbyStatus\x12=\n" +
	"\n" +
	"by_channel\x18\x03 \x03(\v2\x1e.darta.v1.DispatchChannelCountR\tbyChannel\x121\n" +
	"\x14acknowledgement_rate\x18\x04 \x01(\x01R\x13acknowledgementRate\x125\n" +
	"\x17avg_dispatch_time_hours\x18\x05 \x01(\x01R\x14avgDispatchTimeHours\"[\n" +
	"\x12ChalaniStatusCount\x12/\n" +
	"\x06status\x18\x01 \x01(\x0e2\x17.darta.v1.ChalaniStatusR\x06status\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"a\n" +
	"\x14DispatchChannelCount\x123\n" +
	"\achannel\x18\x01 \x01(\x0e2\x19.darta.v1.DispatchChannelR\achannel\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"b\n" +
	"\x16SupersedeChalaniResult\x12#\n" +
	"\x03old\x18\x01 \x01(\v2\x11.darta.v1.ChalaniR\x03old\x12#\n" +
	"\x03new\x18\x02 \x01(\v2\x11.darta.v1.ChalaniR\x03new\"\xd1\x02\n" +
	"\x0fChalaniTemplate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\bcategory\x18\x03 \x01(\tR\bcategory\x12\x18\n" +
	"\asubject\x18\x04 \x01(\tR\asubject\x12\x12\n" +
	"\x04body\x18\x05 \x01(\tR\x04body\x12=\n" +
	"\x1brequired_signatory_role_ids\x18\x06 \x03(\tR\x18requiredSignatoryRoleIds\x12\x1b\n" +
	"\tis_active\x18\a \x01(\bR\bisActive\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xe3\x03\n" +
	"\x12ChalaniFilterInput\x12$\n" +
	"\x0efiscal_year_id\x18\x01 \x01(\tR\ffiscalYearId\x12%\n" +
	"\x05scope\x18\x02 \x01(\x0e2\x0f.darta.v1.ScopeR\x05scope\x12\x17\n" +
	"\award_id\x18\x03 \x01(\tR\x06wardId\x12/\n" +
	"\x06status\x18\x04 \x01(\x0e2\x17.darta.v1.ChalaniStatusR\x06status\x12D\n" +
	"\x10dispatch_channel\x18\x05 \x01(\x0e2\x19.darta.v1.DispatchChannelR\x0fdispatchChannel\x12%\n" +
	"\x0erecipient_name\x18\x06 \x01(\tR\rrecipientName\x127\n" +
	"\tfrom_date\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\bfromDate\x123\n" +
	"\ato_date\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\x06toDate\x12\x16\n" +
	"\x06search\x18\t \x01(\tR\x06search\x12&\n" +
	"\x0flinked_darta_id\x18\n" +
	" \x01(\tR\rlinkedDartaId\x12\x1b\n" +
	"\ttenant_id\x18\v \x01(\tR\btenantId\"\xbb\x01\n" +
	"\x0eRecipientInput\x12+\n" +
	"\x04type\x18\x01 \x01(\x0e2\x17.darta.v1.RecipientTypeR\x04type\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\"\n" +
	"\forganization\x18\x03 \x01(\tR\forganization\x12\x14\n" +
	"\x05email\x18\x04 \x01(\tR\x05email\x12\x14\n" +
	"\x05phone\x18\x05 \x01(\tR\x05phone\x12\x18\n" +
	"\aaddress\x18\x06 \x01(\tR\aaddress\"y\n" +
	"\x0eSignatoryInput\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x17\n" +
	"\arole_id\x18\x02 \x01(\tR\x06roleId\x12\x14\n" +
	"\x05order\x18\x03 \x01(\x05R\x05order\x12\x1f\n" +
	"\vis_required\x18\x04 \x01(\bR\n" +
	"isRequired\"\xac\x03\n" +
	"\x12CreateChalaniInput\x12%\n" +
	"\x05scope\x18\x01 \x01(\x0e2\x0f.darta.v1.ScopeR\x05scope\x12\x17\n" +
	"\award_id\x18\x02 \x01(\tR\x06wardId\x12\x18\n" +
	"\asubject\x18\x03 \x01(\tR\asubject\x12\x12\n" +
	"\x04body\x18\x04 \x01(\tR\x04body\x12\x1f\n" +
	"\vtemplate_id\x18\x05 \x01(\tR\n" +
	"templateId\x12%\n" +
	"\x0eattachment_ids\x18\x06 \x03(\tR\rattachmentIds\x12&\n" +
	"\x0flinked_darta_id\x18\a \x01(\tR\rlinkedDartaId\x126\n" +
	"\trecipient\x18\b \x01(\v2\x18.darta.v1.RecipientInputR\trecipient\x12:\n" +
	"\vsignatories\x18\t \x03(\v2\x18.darta.v1.SignatoryInputR\vsignatories\x12'\n" +
	"\x0fidempotency_key\x18\n" +
	" \x01(\tR\x0eidempotencyKey\x12\x1b\n" +
	"\ttenant_id\x18\v \x01(\tR\btenantId\"e\n" +
	"\x12ReviewChalaniInput\x12\x1d\n" +
	"\n" +
	"chalani_id\x18\x01 \x01(\tR\tchalaniId\x12\x14\n" +
	"\x05notes\x18\x02 \x01(\tR\x05notes\x12\x1a\n" +
	"\bapproved\x18\x03 \x01(\bR\bapproved\"\xb3\x01\n" +
	"\x13ApproveChalaniInput\x12\x1d\n" +
	"\n" +
	"chalani_id\x18\x01 \x01(\tR\tchalaniId\x126\n" +
	"\bdecision\x18\x02 \x01(\x0e2\x1a.darta.v1.ApprovalDecisionR\bdecision\x12\x14\n" +
	"\x05notes\x18\x03 \x01(\tR\x05notes\x12/\n" +
	"\x14delegated_to_user_id\x18\x04 \x01(\tR\x11delegatedToUserId\"_\n" +
	"\x19ReserveChalaniNumberInput\x12\x1d\n" +
	"\n" +
	"chalani_id\x18\x01 \x01(\tR\tchalaniId\x12#\n" +
	"\rallocation_id\x18\x02 \x01(\tR\fallocationId\"f\n" +
	" FinalizeChalaniRegistrationInput\x12\x1d\n" +
	"\n" +
	"chalani_id\x18\x01 \x01(\tR\tchalaniId\x12#\n" +
	"\rallocation_id\x18\x02 \x01(\tR\fallocationId\";\n" +
	"\x1aDirectRegisterChalaniInput\x12\x1d\n" +
	"\n" +
	"chalani_id\x18\x01 \x01(\tR\tchalaniId\"i\n" +
	"\x10SignChalaniInput\x12\x1d\n" +
	"\n" +
	"chalani_id\x18\x01 \x01(\tR\tchalaniId\x126\n" +
	"\x17signature_attachment_id\x18\x02 \x01(\tR\x15signatureAttachmentId\"_\n" +
	"\x10SealChalaniInput\x12\x1d\n" +
	"\n" +
	"chalani_id\x18\x01 \x01(\tR\tchalaniId\x12,\n" +
	"\x12seal_attachment_id\x18\x02 \x01(\tR\x10sealAttachmentId\"\xd5\x01\n" +
	"\x14DispatchChalaniInput\x12\x1d\n" +
	"\n" +
	"chalani_id\x18\x01 \x01(\tR\tchalaniId\x12D\n" +
	"\x10dispatch_channel\x18\x02 \x01(\x0e2\x19.darta.v1.DispatchChannelR\x0fdispatchChannel\x12\x1f\n" +
	"\vtracking_id\x18\x03 \x01(\tR\n" +
	"trackingId\x12!\n" +
	"\fcourier_name\x18\x04 \x01(\tR\vcourierName\x12\x14\n" +
	"\x05notes\x18\x05 \x01(\tR\x05notes\"e\n" +
	"\x12MarkInTransitInput\x12\x1d\n" +
	"\n" +
	"chalani_id\x18\x01 \x01(\tR\tchalaniId\x12\x1a\n" +
	"\blocation\x18\x02 \x01(\tR\blocation\x12\x14\n" +
	"\x05notes\x18\x03 \x01(\tR\x05notes\"\x9b\x01\n" +
	"\x17AcknowledgeChalaniInput\x12\x1d\n" +
	"\n" +
	"chalani_id\x18\x01 \x01(\tR\tchalaniId\x12'\n" +
	"\x0facknowledged_by\x18\x02 \x01(\tR\x0eacknowledgedBy\x128\n" +
	"\x18acknowledgement_proof_id\x18\x03 \x01(\tR\x16acknowledgementProofId\"w\n" +
	"\x12MarkDeliveredInput\x12\x1d\n" +
	"\n" +
	"chalani_id\x18\x01 \x01(\tR\tchalaniId\x12,\n" +
	"\x12delivered_proof_id\x18\x02 \x01(\tR\x10deliveredProofId\x12\x14\n" +
	"\x05notes\x18\x03 \x01(\tR\x05notes\"U\n" +
	"\x1cMarkReturnedUndeliveredInput\x12\x1d\n" +
	"\n" +
	"chalani_id\x18\x01 \x01(\tR\tchalaniId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\xd5\x01\n" +
	"\x12ResendChalaniInput\x12\x1d\n" +
	"\n" +
	"chalani_id\x18\x01 \x01(\tR\tchalaniId\x12K\n" +
	"\x14new_dispatch_channel\x18\x02 \x01(\x0e2\x19.darta.v1.DispatchChannelR\x12newDispatchChannel\x12=\n" +
	"\rnew_recipient\x18\x03 \x01(\v2\x18.darta.v1.RecipientInputR\fnewRecipient\x12\x14\n" +
	"\x05notes\x18\x04 \x01(\tR\x05notes\"I\n" +
	"\x10VoidChalaniInput\x12\x1d\n" +
	"\n" +
	"chalani_id\x18\x01 \x01(\tR\tchalaniId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\x8d\x01\n" +
	"\x15SupersedeChalaniInput\x12\x1d\n" +
	"\n" +
	"chalani_id\x18\x01 \x01(\tR\tchalaniId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12=\n" +
	"\vnew_chalani\x18\x03 \x01(\v2\x1c.darta.v1.CreateChalaniInputR\n" +
	"newChalani\"#\n" +
	"\x11GetChalaniRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"A\n" +
	"\x12GetChalaniResponse\x12+\n" +
	"\achalani\x18\x01 \x01(\v2\x11.darta.v1.ChalaniR\achalani\"\xa8\x01\n" +
	"\x19GetChalaniByNumberRequest\x12%\n" +
	"\x0echalani_number\x18\x01 \x01(\x05R\rchalaniNumber\x12$\n" +
	"\x0efiscal_year_id\x18\x02 \x01(\tR\ffiscalYearId\x12%\n" +
	"\x05scope\x18\x03 \x01(\x0e2\x0f.darta.v1.ScopeR\x05scope\x12\x17\n" +
	"\award_id\x18\x04 \x01(\tR\x06wardId\"I\n" +
	"\x1aGetChalaniByNumberResponse\x12+\n" +
	"\achalani\x18\x01 \x01(\v2\x11.darta.v1.ChalaniR\achalani\"\x86\x01\n" +
	"\x13ListChalanisRequest\x124\n" +
	"\x06filter\x18\x01 \x01(\v2\x1c.darta.v1.ChalaniFilterInputR\x06filter\x129\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x19.darta.v1.PaginationInputR\n" +
	"pagination\"S\n" +
	"\x14ListChalanisResponse\x12;\n" +
	"\n" +
	"connection\x18\x01 \x01(\v2\x1b.darta.v1.ChalaniConnectionR\n" +
	"connection\"\x9a\x01\n" +
	"\x13GetMyChalaniRequest\x12/\n" +
	"\x06status\x18\x01 \x01(\x0e2\x17.darta.v1.ChalaniStatusR\x06status\x129\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x19.darta.v1.PaginationInputR\n" +
	"pagination\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\"S\n" +
	"\x14GetMyChalaniResponse\x12;\n" +
	"\n" +
	"connection\x18\x01 \x01(\v2\x1b.darta.v1.ChalaniConnectionR\n" +
	"connection\"\x9b\x01\n" +
	"\x16GetChalaniStatsRequest\x12%\n" +
	"\x05scope\x18\x01 \x01(\x0e2\x0f.darta.v1.ScopeR\x05scope\x12$\n" +
	"\x0efiscal_year_id\x18\x02 \x01(\tR\ffiscalYearId\x12\x17\n" +
	"\award_id\x18\x03 \x01(\tR\x06wardId\x12\x1b\n" +
	"\ttenant_id\x18\x04 \x01(\tR\btenantId\"G\n" +
	"\x17GetChalaniStatsResponse\x12,\n" +
	"\x05stats\x18\x01 \x01(\v2\x16.darta.v1.ChalaniStatsR\x05stats\"\x95\x01\n" +
	"\x1bListChalaniTemplatesRequest\x12\x1a\n" +
	"\bcategory\x18\x01 \x01(\tR\bcategory\x12\x1f\n" +
	"\vactive_only\x18\x02 \x01(\bR\n" +
	"activeOnly\x129\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2\x19.darta.v1.PaginationInputR\n" +
	"pagination\"m\n" +
	"\x1cListChalaniTemplatesResponse\x127\n" +
	"\ttemplates\x18\x01 \x03(\v2\x19.darta.v1.ChalaniTemplateR\ttemplates\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\"+\n" +
	"\x19GetChalaniTemplateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"S\n" +
	"\x1aGetChalaniTemplateResponse\x125\n" +
	"\btemplate\x18\x01 \x01(\v2\x19.darta.v1.ChalaniTemplateR\btemplate\"J\n" +
	"\x14CreateChalaniRequest\x122\n" +
	"\x05input\x18\x01 \x01(\v2\x1c.darta.v1.CreateChalaniInputR\x05input\"D\n" +
	"\x15CreateChalaniResponse\x12+\n" +
	"\achalani\x18\x01 \x01(\v2\x11.darta.v1.ChalaniR\achalani\"5\n" +
	"\x14SubmitChalaniRequest\x12\x1d\n" +
	"\n" +
	"chalani_id\x18\x01 \x01(\tR\tchalaniId\"D\n" +
	"\x15SubmitChalaniResponse\x12+\n" +
	"\achalani\x18\x01 \x01(\v2\x11.darta.v1.ChalaniR\achalani\"J\n" +
	"\x14ReviewChalaniRequest\x122\n" +
	"\x05input\x18\x01 \x01(\v2\x1c.darta.v1.ReviewChalaniInputR\x05input\"D\n" +
	"\x15ReviewChalaniResponse\x12+\n" +
	"\achalani\x18\x01 \x01(\v2\x11.darta.v1.ChalaniR\achalani\"L\n" +
	"\x15ApproveChalaniRequest\x123\n" +
	"\x05input\x18\x01 \x01(\v2\x1d.darta.v1.ApproveChalaniInputR\x05input\"E\n" +
	"\x16ApproveChalaniResponse\x12+\n" +
	"\achalani\x18\x01 \x01(\v2\x11.darta.v1.ChalaniR\achalani\"X\n" +
	"\x1bReserveChalaniNumberRequest\x129\n" +
	"\x05input\x18\x01 \x01(\v2#.darta.v1.ReserveChalaniNumberInputR\x05input\"K\n" +
	"\x1cReserveChalaniNumberResponse\x12+\n" +
	"\achalani\x18\x01 \x01(\v2\x11.darta.v1.ChalaniR\achalani\"f\n" +
	"\"FinalizeChalaniRegistrationRequest\x12@\n" +
	"\x05input\x18\x01 \x01(\v2*.darta.v1.FinalizeChalaniRegistrationInputR\x05input\"R\n" +
	"#FinalizeChalaniRegistrationResponse\x12+\n" +
	"\achalani\x18\x01 \x01(\v2\x11.darta.v1.ChalaniR\achalani\"Z\n" +
	"\x1cDirectRegisterChalaniRequest\x12:\n" +
	"\x05input\x18\x01 \x01(\v2$.darta.v1.DirectRegisterChalaniInputR\x05input\"L\n" +
	"\x1dDirectRegisterChalaniResponse\x12+\n" +
	"\achalani\x18\x01 \x01(\v2\x11.darta.v1.ChalaniR\achalani\"F\n" +
	"\x12SignChalaniRequest\x120\n" +
	"\x05input\x18\x01 \x01(\v2\x1a.darta.v1.SignChalaniInputR\x05input\"B\n" +
	"\x13SignChalaniResponse\x12+\n" +
	"\achalani\x18\x01 \x01(\v2\x11.darta.v1.ChalaniR\achalani\"F\n" +
	"\x12SealChalaniRequest\x120\n" +
	"\x05input\x18\x01 \x01(\v2\x1a.darta.v1.SealChalaniInputR\x05input\"B\n" +
	"\x13SealChalaniResponse\x12+\n" +
	"\achalani\x18\x01 \x01(\v2\x11.darta.v1.ChalaniR\achalani\"N\n" +
	"\x16DispatchChalaniRequest\x124\n" +
	"\x05input\x18\x01 \x01(\v2\x1e.darta.v1.DispatchChalaniInputR\x05input\"F\n" +
	"\x17DispatchChalaniResponse\x12+\n" +
	"\achalani\x18\x01 \x01(\v2\x11.darta.v1.ChalaniR\achalani\"Q\n" +
	"\x1bMarkChalaniInTransitRequest\x122\n" +
	"\x05input\x18\x01 \x01(\v2\x1c.darta.v1.MarkInTransitInputR\x05input\"K\n" +
	"\x1cMarkChalaniInTransitResponse\x12+\n" +
	"\achalani\x18\x01 \x01(\v2\x11.darta.v1.ChalaniR\achalani\"T\n" +
	"\x19AcknowledgeChalaniRequest\x127\n" +
	"\x05input\x18\x01 \x01(\v2!.darta.v1.AcknowledgeChalaniInputR\x05input\"I\n" +
	"\x1aAcknowledgeChalaniResponse\x12+\n" +
	"\achalani\x18\x01 \x01(\v2\x11.darta.v1.ChalaniR\achalani\"Q\n" +
	"\x1bMarkChalaniDeliveredRequest\x122\n" +
	"\x05input\x18\x01 \x01(\v2\x1c.darta.v1.MarkDeliveredInputR\x05input\"K\n" +
	"\x1cMarkChalaniDeliveredResponse\x12+\n" +
	"\achalani\x18\x01 \x01(\v2\x11.darta.v1.ChalaniR\achalani\"e\n" +
	"%MarkChalaniReturnedUndeliveredRequest\x12<\n" +
	"\x05input\x18\x01 \x01(\v2&.darta.v1.MarkReturnedUndeliveredInputR\x05input\"U\n" +
	"&MarkChalaniReturnedUndeliveredResponse\x12+\n" +
	"\achalani\x18\x01 \x01(\v2\x11.darta.v1.ChalaniR\achalani\"J\n" +
	"\x14ResendChalaniRequest\x122\n" +
	"\x05input\x18\x01 \x01(\v2\x1c.darta.v1.ResendChalaniInputR\x05input\"D\n" +
	"\x15ResendChalaniResponse\x12+\n" +
	"\achalani\x18\x01 \x01(\v2\x11.darta.v1.ChalaniR\achalani\"F\n" +
	"\x12VoidChalaniRequest\x120\n" +
	"\x05input\x18\x01 \x01(\v2\x1a.darta.v1.VoidChalaniInputR\x05input\"B\n" +
	"\x13VoidChalaniResponse\x12+\n" +
	"\achalani\x18\x01 \x01(\v2\x11.darta.v1.ChalaniR\achalani\"P\n" +
	"\x17SupersedeChalaniRequest\x125\n" +
	"\x05input\x18\x01 \x01(\v2\x1f.darta.v1.SupersedeChalaniInputR\x05input\"T\n" +
	"\x18SupersedeChalaniResponse\x128\n" +
	"\x06result\x18\x01 \x01(\v2 .darta.v1.SupersedeChalaniResultR\x06result\"4\n" +
	"\x13CloseChalaniRequest\x12\x1d\n" +
	"\n" +
	"chalani_id\x18\x01 \x01(\tR\tchalaniId\"C\n" +
	"\x14CloseChalaniResponse\x12+\n" +
	"\achalani\x18\x01 \x01(\v2\x11.darta.v1.ChalaniR\achalani*\xa2\x04\n" +
	"\rChalaniStatus\x12\x1e\n" +
	"\x1aCHALANI_STATUS_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14CHALANI_STATUS_DRAFT\x10\x01\x12!\n" +
	"\x1dCHALANI_STATUS_PENDING_REVIEW\x10\x02\x12#\n" +
	"\x1fCHALANI_STATUS_PENDING_APPROVAL\x10\x03\x12\x1b\n" +
	"\x17CHALANI_STATUS_APPROVED\x10\x04\x12\"\n" +
	"\x1eCHALANI_STATUS_NUMBER_RESERVED\x10\x05\x12\x1d\n" +
	"\x19CHALANI_STATUS_REGISTERED\x10\x06\x12\x19\n" +
	"\x15CHALANI_STATUS_SIGNED\x10\a\x12\x19\n" +
	"\x15CHALANI_STATUS_SEALED\x10\b\x12\x1d\n" +
	"\x19CHALANI_STATUS_DISPATCHED\x10\t\x12\x1d\n" +
	"\x19CHALANI_STATUS_IN_TRANSIT\x10\n" +
	"\x12\x1f\n" +
	"\x1bCHALANI_STATUS_ACKNOWLEDGED\x10\v\x12'\n" +
	"#CHALANI_STATUS_RETURNED_UNDELIVERED\x10\f\x12\x1c\n" +
	"\x18CHALANI_STATUS_DELIVERED\x10\r\x12\x19\n" +
	"\x15CHALANI_STATUS_VOIDED\x10\x0e\x12\x1d\n" +
	"\x19CHALANI_STATUS_SUPERSEDED\x10\x0f\x12\x19\n" +
	"\x15CHALANI_STATUS_CLOSED\x10\x10*\xac\x01\n" +
	"\rRecipientType\x12\x1e\n" +
	"\x1aRECIPIENT_TYPE_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16RECIPIENT_TYPE_CITIZEN\x10\x01\x12\x1f\n" +
	"\x1bRECIPIENT_TYPE_ORGANIZATION\x10\x02\x12$\n" +
	" RECIPIENT_TYPE_GOVERNMENT_OFFICE\x10\x03\x12\x18\n" +
	"\x14RECIPIENT_TYPE_OTHER\x10\x04*\x96\x01\n" +
	"\x10ApprovalDecision\x12!\n" +
	"\x1dAPPROVAL_DECISION_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aAPPROVAL_DECISION_APPROVED\x10\x01\x12\x1e\n" +
	"\x1aAPPROVAL_DECISION_REJECTED\x10\x02\x12\x1f\n" +
	"\x1bAPPROVAL_DECISION_DELEGATED\x10\x032\xc9\x12\n" +
	"\x0eChalaniService\x12G\n" +
	"\n" +
	"GetChalani\x12\x1b.darta.v1.GetChalaniRequest\x1a\x1c.darta.v1.GetChalaniResponse\x12_\n" +
	"\x12GetChalaniByNumber\x12#.darta.v1.GetChalaniByNumberRequest\x1a$.darta.v1.GetChalaniByNumberResponse\x12M\n" +
	"\fListChalanis\x12\x1d.darta.v1.ListChalanisRequest\x1a\x1e.darta.v1.ListChalanisResponse\x12M\n" +
	"\fGetMyChalani\x12\x1d.darta.v1.GetMyChalaniRequest\x1a\x1e.darta.v1.GetMyChalaniResponse\x12V\n" +
	"\x0fGetChalaniStats\x12 .darta.v1.GetChalaniStatsRequest\x1a!.darta.v1.GetChalaniStatsResponse\x12e\n" +
	"\x14ListChalaniTemplates\x12%.darta.v1.ListChalaniTemplatesRequest\x1a&.darta.v1.ListChalaniTemplatesResponse\x12_\n" +
	"\x12GetChalaniTemplate\x12#.darta.v1.GetChalaniTemplateRequest\x1a$.darta.v1.GetChalaniTemplateResponse\x12P\n" +
	"\rCreateChalani\x12\x1e.darta.v1.CreateChalaniRequest\x1a\x1f.darta.v1.CreateChalaniResponse\x12P\n" +
	"\rSubmitChalani\x12\x1e.darta.v1.SubmitChalaniRequest\x1a\x1f.darta.v1.SubmitChalaniResponse\x12P\n" +
	"\rReviewChalani\x12\x1e.darta.v1.ReviewChalaniRequest\x1a\x1f.darta.v1.ReviewChalaniResponse\x12S\n" +
	"\x0eApproveChalani\x12\x1f.darta.v1.ApproveChalaniRequest\x1a .darta.v1.ApproveChalaniResponse\x12e\n" +
	"\x14ReserveChalaniNumber\x12%.darta.v1.ReserveChalaniNumberRequest\x1a&.darta.v1.ReserveChalaniNumberResponse\x12z\n" +
	"\x1bFinalizeChalaniRegistration\x12,.darta.v1.FinalizeChalaniRegistrationRequest\x1a-.darta.v1.FinalizeChalaniRegistrationResponse\x12h\n" +
	"\x15DirectRegisterChalani\x12&.darta.v1.DirectRegisterChalaniRequest\x1a'.darta.v1.DirectRegisterChalaniResponse\x12J\n" +
	"\vSignChalani\x12\x1c.darta.v1.SignChalaniRequest\x1a\x1d.darta.v1.SignChalaniResponse\x12J\n" +
	"\vSealChalani\x12\x1c.darta.v1.SealChalaniRequest\x1a\x1d.darta.v1.SealChalaniResponse\x12V\n" +
	"\x0fDispatchChalani\x12 .darta.v1.DispatchChalaniRequest\x1a!.darta.v1.DispatchChalaniResponse\x12e\n" +
	"\x14MarkChalaniInTransit\x12%.darta.v1.MarkChalaniInTransitRequest\x1a&.darta.v1.MarkChalaniInTransitResponse\x12_\n" +
	"\x12AcknowledgeChalani\x12#.darta.v1.AcknowledgeChalaniRequest\x1a$.darta.v1.AcknowledgeChalaniResponse\x12e\n" +
	"\x14MarkChalaniDelivered\x12%.darta.v1.MarkChalaniDeliveredRequest\x1a&.darta.v1.MarkChalaniDeliveredResponse\x12\x83\x01\n" +
	"\x1eMarkChalaniReturnedUndelivered\x12/.darta.v1.MarkChalaniReturnedUndeliveredRequest\x1a0.darta.v1.MarkChalaniReturnedUndeliveredResponse\x12P\n" +
	"\rResendChalani\x12\x1e.darta.v1.ResendChalaniRequest\x1a\x1f.darta.v1.ResendChalaniResponse\x12J\n" +
	"\vVoidChalani\x12\x1c.darta.v1.VoidChalaniRequest\x1a\x1d.darta.v1.VoidChalaniResponse\x12Y\n" +
	"\x10SupersedeChalani\x12!.darta.v1.SupersedeChalaniRequest\x1a\".darta.v1.SupersedeChalaniResponse\x12M\n" +
	"\fCloseChalani\x12\x1d.darta.v1.CloseChalaniRequest\x1a\x1e.darta.v1.CloseChalaniResponse\x12J\n" +
	"\vHealthCheck\x12\x1c.darta.v1.HealthCheckRequest\x1a\x1d.darta.v1.HealthCheckResponseB9Z7git.ninjainfosys.com/ePalika/proto/gen/darta/v1;dartav1b\x06proto3"

var (
	file_darta_v1_chalani_proto_rawDescOnce sync.Once
	file_darta_v1_chalani_proto_rawDescData []byte
)

func file_darta_v1_chalani_proto_rawDescGZIP() []byte {
	file_darta_v1_chalani_proto_rawDescOnce.Do(func() {
		file_darta_v1_chalani_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_darta_v1_chalani_proto_rawDesc), len(file_darta_v1_chalani_proto_rawDesc)))
	})
	return file_darta_v1_chalani_proto_rawDescData
}

var file_darta_v1_chalani_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_darta_v1_chalani_proto_msgTypes = make([]protoimpl.MessageInfo, 80)
var file_darta_v1_chalani_proto_goTypes = []any{
	(ChalaniStatus)(0),                             // 0: darta.v1.ChalaniStatus
	(RecipientType)(0),                             // 1: darta.v1.RecipientType
	(ApprovalDecision)(0),                          // 2: darta.v1.ApprovalDecision
	(*Chalani)(nil),                                // 3: darta.v1.Chalani
	(*Signatory)(nil),                              // 4: darta.v1.Signatory
	(*Approval)(nil),                               // 5: darta.v1.Approval
	(*Recipient)(nil),                              // 6: darta.v1.Recipient
	(*ChalaniConnection)(nil),                      // 7: darta.v1.ChalaniConnection
	(*ChalaniEdge)(nil),                            // 8: darta.v1.ChalaniEdge
	(*ChalaniStats)(nil),                           // 9: darta.v1.ChalaniStats
	(*ChalaniStatusCount)(nil),                     // 10: darta.v1.ChalaniStatusCount
	(*DispatchChannelCount)(nil),                   // 11: darta.v1.DispatchChannelCount
	(*SupersedeChalaniResult)(nil),                 // 12: darta.v1.SupersedeChalaniResult
	(*ChalaniTemplate)(nil),                        // 13: darta.v1.ChalaniTemplate
	(*ChalaniFilterInput)(nil),                     // 14: darta.v1.ChalaniFilterInput
	(*RecipientInput)(nil),                         // 15: darta.v1.RecipientInput
	(*SignatoryInput)(nil),                         // 16: darta.v1.SignatoryInput
	(*CreateChalaniInput)(nil),                     // 17: darta.v1.CreateChalaniInput
	(*ReviewChalaniInput)(nil),                     // 18: darta.v1.ReviewChalaniInput
	(*ApproveChalaniInput)(nil),                    // 19: darta.v1.ApproveChalaniInput
	(*ReserveChalaniNumberInput)(nil),              // 20: darta.v1.ReserveChalaniNumberInput
	(*FinalizeChalaniRegistrationInput)(nil),       // 21: darta.v1.FinalizeChalaniRegistrationInput
	(*DirectRegisterChalaniInput)(nil),             // 22: darta.v1.DirectRegisterChalaniInput
	(*SignChalaniInput)(nil),                       // 23: darta.v1.SignChalaniInput
	(*SealChalaniInput)(nil),                       // 24: darta.v1.SealChalaniInput
	(*DispatchChalaniInput)(nil),                   // 25: darta.v1.DispatchChalaniInput
	(*MarkInTransitInput)(nil),                     // 26: darta.v1.MarkInTransitInput
	(*AcknowledgeChalaniInput)(nil),                // 27: darta.v1.AcknowledgeChalaniInput
	(*MarkDeliveredInput)(nil),                     // 28: darta.v1.MarkDeliveredInput
	(*MarkReturnedUndeliveredInput)(nil),           // 29: darta.v1.MarkReturnedUndeliveredInput
	(*ResendChalaniInput)(nil),                     // 30: darta.v1.ResendChalaniInput
	(*VoidChalaniInput)(nil),                       // 31: darta.v1.VoidChalaniInput
	(*SupersedeChalaniInput)(nil),                  // 32: darta.v1.SupersedeChalaniInput
	(*GetChalaniRequest)(nil),                      // 33: darta.v1.GetChalaniRequest
	(*GetChalaniResponse)(nil),                     // 34: darta.v1.GetChalaniResponse
	(*GetChalaniByNumberRequest)(nil),              // 35: darta.v1.GetChalaniByNumberRequest
	(*GetChalaniByNumberResponse)(nil),             // 36: darta.v1.GetChalaniByNumberResponse
	(*ListChalanisRequest)(nil),                    // 37: darta.v1.ListChalanisRequest
	(*ListChalanisResponse)(nil),                   // 38: darta.v1.ListChalanisResponse
	(*GetMyChalaniRequest)(nil),                    // 39: darta.v1.GetMyChalaniRequest
	(*GetMyChalaniResponse)(nil),                   // 40: darta.v1.GetMyChalaniResponse
	(*GetChalaniStatsRequest)(nil),                 // 41: darta.v1.GetChalaniStatsRequest
	(*GetChalaniStatsResponse)(nil),                // 42: darta.v1.GetChalaniStatsResponse
	(*ListChalaniTemplatesRequest)(nil),            // 43: darta.v1.ListChalaniTemplatesRequest
	(*ListChalaniTemplatesResponse)(nil),           // 44: darta.v1.ListChalaniTemplatesResponse
	(*GetChalaniTemplateRequest)(nil),              // 45: darta.v1.GetChalaniTemplateRequest
	(*GetChalaniTemplateResponse)(nil),             // 46: darta.v1.GetChalaniTemplateResponse
	(*CreateChalaniRequest)(nil),                   // 47: darta.v1.CreateChalaniRequest
	(*CreateChalaniResponse)(nil),                  // 48: darta.v1.CreateChalaniResponse
	(*SubmitChalaniRequest)(nil),                   // 49: darta.v1.SubmitChalaniRequest
	(*SubmitChalaniResponse)(nil),                  // 50: darta.v1.SubmitChalaniResponse
	(*ReviewChalaniRequest)(nil),                   // 51: darta.v1.ReviewChalaniRequest
	(*ReviewChalaniResponse)(nil),                  // 52: darta.v1.ReviewChalaniResponse
	(*ApproveChalaniRequest)(nil),                  // 53: darta.v1.ApproveChalaniRequest
	(*ApproveChalaniResponse)(nil),                 // 54: darta.v1.ApproveChalaniResponse
	(*ReserveChalaniNumberRequest)(nil),            // 55: darta.v1.ReserveChalaniNumberRequest
	(*ReserveChalaniNumberResponse)(nil),           // 56: darta.v1.ReserveChalaniNumberResponse
	(*FinalizeChalaniRegistrationRequest)(nil),     // 57: darta.v1.FinalizeChalaniRegistrationRequest
	(*FinalizeChalaniRegistrationResponse)(nil),    // 58: darta.v1.FinalizeChalaniRegistrationResponse
	(*DirectRegisterChalaniRequest)(nil),           // 59: darta.v1.DirectRegisterChalaniRequest
	(*DirectRegisterChalaniResponse)(nil),          // 60: darta.v1.DirectRegisterChalaniResponse
	(*SignChalaniRequest)(nil),                     // 61: darta.v1.SignChalaniRequest
	(*SignChalaniResponse)(nil),                    // 62: darta.v1.SignChalaniResponse
	(*SealChalaniRequest)(nil),                     // 63: darta.v1.SealChalaniRequest
	(*SealChalaniResponse)(nil),                    // 64: darta.v1.SealChalaniResponse
	(*DispatchChalaniRequest)(nil),                 // 65: darta.v1.DispatchChalaniRequest
	(*DispatchChalaniResponse)(nil),                // 66: darta.v1.DispatchChalaniResponse
	(*MarkChalaniInTransitRequest)(nil),            // 67: darta.v1.MarkChalaniInTransitRequest
	(*MarkChalaniInTransitResponse)(nil),           // 68: darta.v1.MarkChalaniInTransitResponse
	(*AcknowledgeChalaniRequest)(nil),              // 69: darta.v1.AcknowledgeChalaniRequest
	(*AcknowledgeChalaniResponse)(nil),             // 70: darta.v1.AcknowledgeChalaniResponse
	(*MarkChalaniDeliveredRequest)(nil),            // 71: darta.v1.MarkChalaniDeliveredRequest
	(*MarkChalaniDeliveredResponse)(nil),           // 72: darta.v1.MarkChalaniDeliveredResponse
	(*MarkChalaniReturnedUndeliveredRequest)(nil),  // 73: darta.v1.MarkChalaniReturnedUndeliveredRequest
	(*MarkChalaniReturnedUndeliveredResponse)(nil), // 74: darta.v1.MarkChalaniReturnedUndeliveredResponse
	(*ResendChalaniRequest)(nil),                   // 75: darta.v1.ResendChalaniRequest
	(*ResendChalaniResponse)(nil),                  // 76: darta.v1.ResendChalaniResponse
	(*VoidChalaniRequest)(nil),                     // 77: darta.v1.VoidChalaniRequest
	(*VoidChalaniResponse)(nil),                    // 78: darta.v1.VoidChalaniResponse
	(*SupersedeChalaniRequest)(nil),                // 79: darta.v1.SupersedeChalaniRequest
	(*SupersedeChalaniResponse)(nil),               // 80: darta.v1.SupersedeChalaniResponse
	(*CloseChalaniRequest)(nil),                    // 81: darta.v1.CloseChalaniRequest
	(*CloseChalaniResponse)(nil),                   // 82: darta.v1.CloseChalaniResponse
	(*FiscalYear)(nil),                             // 83: darta.v1.FiscalYear
	(Scope)(0),                                     // 84: darta.v1.Scope
	(*Ward)(nil),                                   // 85: darta.v1.Ward
	(*Attachment)(nil),                             // 86: darta.v1.Attachment
	(DispatchChannel)(0),                           // 87: darta.v1.DispatchChannel
	(*timestamppb.Timestamp)(nil),                  // 88: google.protobuf.Timestamp
	(*User)(nil),                                   // 89: darta.v1.User
	(*AuditEntry)(nil),                             // 90: darta.v1.AuditEntry
	(*Role)(nil),                                   // 91: darta.v1.Role
	(*PageInfo)(nil),                               // 92: darta.v1.PageInfo
	(*PaginationInput)(nil),                        // 93: darta.v1.PaginationInput
	(*HealthCheckRequest)(nil),                     // 94: darta.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),                    // 95: darta.v1.HealthCheckResponse
}
var file_darta_v1_chalani_proto_depIdxs = []int32{
	83,  // 0: darta.v1.Chalani.fiscal_year:type_name -> darta.v1.FiscalYear
	84,  // 1: darta.v1.Chalani.scope:type_name -> darta.v1.Scope
	85,  // 2: darta.v1.Chalani.ward:type_name -> darta.v1.Ward
	86,  // 3: darta.v1.Chalani.attachments:type_name -> darta.v1.Attachment
	0,   // 4: darta.v1.Chalani.status:type_name -> darta.v1.ChalaniStatus
	4,   // 5: darta.v1.Chalani.required_signatories:type_name -> darta.v1.Signatory
	5,   // 6: darta.v1.Chalani.approvals:type_name -> darta.v1.Approval
	87,  // 7: darta.v1.Chalani.dispatch_channel:type_name -> darta.v1.DispatchChannel
	6,   // 8: darta.v1.Chalani.recipient:type_name -> darta.v1.Recipient
	88,  // 9: darta.v1.Chalani.dispatched_at:type_name -> google.protobuf.Timestamp
	89,  // 10: darta.v1.Chalani.dispatched_by:type_name -> darta.v1.User
	88,  // 11: darta.v1.Chalani.acknowledged_at:type_name -> google.protobuf.Timestamp
	86,  // 12: darta.v1.Chalani.acknowledgement_proof:type_name -> darta.v1.Attachment
	88,  // 13: darta.v1.Chalani.delivered_at:type_name -> google.protobuf.Timestamp
	86,  // 14: darta.v1.Chalani.delivered_proof:type_name -> darta.v1.Attachment
	89,  // 15: darta.v1.Chalani.created_by:type_name -> darta.v1.User
	88,  // 16: darta.v1.Chalani.created_at:type_name -> google.protobuf.Timestamp
	88,  // 17: darta.v1.Chalani.updated_at:type_name -> google.protobuf.Timestamp
	90,  // 18: darta.v1.Chalani.audit_trail:type_name -> darta.v1.AuditEntry
	89,  // 19: darta.v1.Signatory.user:type_name -> darta.v1.User
	91,  // 20: darta.v1.Signatory.role:type_name -> darta.v1.Role
	4,   // 21: darta.v1.Approval.signatory:type_name -> darta.v1.Signatory
	2,   // 22: darta.v1.Approval.decision:type_name -> darta.v1.ApprovalDecision
	88,  // 23: darta.v1.Approval.approved_at:type_name -> google.protobuf.Timestamp
	1,   // 24: darta.v1.Recipient.type:type_name -> darta.v1.RecipientType
	8,   // 25: darta.v1.ChalaniConnection.edges:type_name -> darta.v1.ChalaniEdge
	92,  // 26: darta.v1.ChalaniConnection.page_info:type_name -> darta.v1.PageInfo
	3,   // 27: darta.v1.ChalaniEdge.node:type_name -> darta.v1.Chalani
	10,  // 28: darta.v1.ChalaniStats.by_status:type_name -> darta.v1.ChalaniStatusCount
	11,  // 29: darta.v1.ChalaniStats.by_channel:type_name -> darta.v1.DispatchChannelCount
	0,   // 30: darta.v1.ChalaniStatusCount.status:type_name -> darta.v1.ChalaniStatus
	87,  // 31: darta.v1.DispatchChannelCount.channel:type_name -> darta.v1.DispatchChannel
	3,   // 32: darta.v1.SupersedeChalaniResult.old:type_name -> darta.v1.Chalani
	3,   // 33: darta.v1.SupersedeChalaniResult.new:type_name -> darta.v1.Chalani
	88,  // 34: darta.v1.ChalaniTemplate.created_at:type_name -> google.protobuf.Timestamp
	88,  // 35: darta.v1.ChalaniTemplate.updated_at:type_name -> google.protobuf.Timestamp
	84,  // 36: darta.v1.ChalaniFilterInput.scope:type_name -> darta.v1.Scope
	0,   // 37: darta.v1.ChalaniFilterInput.status:type_name -> darta.v1.ChalaniStatus
	87,  // 38: darta.v1.ChalaniFilterInput.dispatch_channel:type_name -> darta.v1.DispatchChannel
	88,  // 39: darta.v1.ChalaniFilterInput.from_date:type_name -> google.protobuf.Timestamp
	88,  // 40: darta.v1.ChalaniFilterInput.to_date:type_name -> google.protobuf.Timestamp
	1,   // 41: darta.v1.RecipientInput.type:type_name -> darta.v1.RecipientType
	84,  // 42: darta.v1.CreateChalaniInput.scope:type_name -> darta.v1.Scope
	15,  // 43: darta.v1.CreateChalaniInput.recipient:type_name -> darta.v1.RecipientInput
	16,  // 44: darta.v1.CreateChalaniInput.signatories:type_name -> darta.v1.SignatoryInput
	2,   // 45: darta.v1.ApproveChalaniInput.decision:type_name -> darta.v1.ApprovalDecision
	87,  // 46: darta.v1.DispatchChalaniInput.dispatch_channel:type_name -> darta.v1.DispatchChannel
	87,  // 47: darta.v1.ResendChalaniInput.new_dispatch_channel:type_name -> darta.v1.DispatchChannel
	15,  // 48: darta.v1.ResendChalaniInput.new_recipient:type_name -> darta.v1.RecipientInput
	17,  // 49: darta.v1.SupersedeChalaniInput.new_chalani:type_name -> darta.v1.CreateChalaniInput
	3,   // 50: darta.v1.GetChalaniResponse.chalani:type_name -> darta.v1.Chalani
	84,  // 51: darta.v1.GetChalaniByNumberRequest.scope:type_name -> darta.v1.Scope
	3,   // 52: darta.v1.GetChalaniByNumberResponse.chalani:type_name -> darta.v1.Chalani
	14,  // 53: darta.v1.ListChalanisRequest.filter:type_name -> darta.v1.ChalaniFilterInput
	93,  // 54: darta.v1.ListChalanisRequest.pagination:type_name -> darta.v1.PaginationInput
	7,   // 55: darta.v1.ListChalanisResponse.connection:type_name -> darta.v1.ChalaniConnection
	0,   // 56: darta.v1.GetMyChalaniRequest.status:type_name -> darta.v1.ChalaniStatus
	93,  // 57: darta.v1.GetMyChalaniRequest.pagination:type_name -> darta.v1.PaginationInput
	7,   // 58: darta.v1.GetMyChalaniResponse.connection:type_name -> darta.v1.ChalaniConnection
	84,  // 59: darta.v1.GetChalaniStatsRequest.scope:type_name -> darta.v1.Scope
	9,   // 60: darta.v1.GetChalaniStatsResponse.stats:type_name -> darta.v1.ChalaniStats
	93,  // 61: darta.v1.ListChalaniTemplatesRequest.pagination:type_name -> darta.v1.PaginationInput
	13,  // 62: darta.v1.ListChalaniTemplatesResponse.templates:type_name -> darta.v1.ChalaniTemplate
	13,  // 63: darta.v1.GetChalaniTemplateResponse.template:type_name -> darta.v1.ChalaniTemplate
	17,  // 64: darta.v1.CreateChalaniRequest.input:type_name -> darta.v1.CreateChalaniInput
	3,   // 65: darta.v1.CreateChalaniResponse.chalani:type_name -> darta.v1.Chalani
	3,   // 66: darta.v1.SubmitChalaniResponse.chalani:type_name -> darta.v1.Chalani
	18,  // 67: darta.v1.ReviewChalaniRequest.input:type_name -> darta.v1.ReviewChalaniInput
	3,   // 68: darta.v1.ReviewChalaniResponse.chalani:type_name -> darta.v1.Chalani
	19,  // 69: darta.v1.ApproveChalaniRequest.input:type_name -> darta.v1.ApproveChalaniInput
	3,   // 70: darta.v1.ApproveChalaniResponse.chalani:type_name -> darta.v1.Chalani
	20,  // 71: darta.v1.ReserveChalaniNumberRequest.input:type_name -> darta.v1.ReserveChalaniNumberInput
	3,   // 72: darta.v1.ReserveChalaniNumberResponse.chalani:type_name -> darta.v1.Chalani
	21,  // 73: darta.v1.FinalizeChalaniRegistrationRequest.input:type_name -> darta.v1.FinalizeChalaniRegistrationInput
	3,   // 74: darta.v1.FinalizeChalaniRegistrationResponse.chalani:type_name -> darta.v1.Chalani
	22,  // 75: darta.v1.DirectRegisterChalaniRequest.input:type_name -> darta.v1.DirectRegisterChalaniInput
	3,   // 76: darta.v1.DirectRegisterChalaniResponse.chalani:type_name -> darta.v1.Chalani
	23,  // 77: darta.v1.SignChalaniRequest.input:type_name -> darta.v1.SignChalaniInput
	3,   // 78: darta.v1.SignChalaniResponse.chalani:type_name -> darta.v1.Chalani
	24,  // 79: darta.v1.SealChalaniRequest.input:type_name -> darta.v1.SealChalaniInput
	3,   // 80: darta.v1.SealChalaniResponse.chalani:type_name -> darta.v1.Chalani
	25,  // 81: darta.v1.DispatchChalaniRequest.input:type_name -> darta.v1.DispatchChalaniInput
	3,   // 82: darta.v1.DispatchChalaniResponse.chalani:type_name -> darta.v1.Chalani
	26,  // 83: darta.v1.MarkChalaniInTransitRequest.input:type_name -> darta.v1.MarkInTransitInput
	3,   // 84: darta.v1.MarkChalaniInTransitResponse.chalani:type_name -> darta.v1.Chalani
	27,  // 85: darta.v1.AcknowledgeChalaniRequest.input:type_name -> darta.v1.AcknowledgeChalaniInput
	3,   // 86: darta.v1.AcknowledgeChalaniResponse.chalani:type_name -> darta.v1.Chalani
	28,  // 87: darta.v1.MarkChalaniDeliveredRequest.input:type_name -> darta.v1.MarkDeliveredInput
	3,   // 88: darta.v1.MarkChalaniDeliveredResponse.chalani:type_name -> darta.v1.Chalani
	29,  // 89: darta.v1.MarkChalaniReturnedUndeliveredRequest.input:type_name -> darta.v1.MarkReturnedUndeliveredInput
	3,   // 90: darta.v1.MarkChalaniReturnedUndeliveredResponse.chalani:type_name -> darta.v1.Chalani
	30,  // 91: darta.v1.ResendChalaniRequest.input:type_name -> darta.v1.ResendChalaniInput
	3,   // 92: darta.v1.ResendChalaniResponse.chalani:type_name -> darta.v1.Chalani
	31,  // 93: darta.v1.VoidChalaniRequest.input:type_name -> darta.v1.VoidChalaniInput
	3,   // 94: darta.v1.VoidChalaniResponse.chalani:type_name -> darta.v1.Chalani
	32,  // 95: darta.v1.SupersedeChalaniRequest.input:type_name -> darta.v1.SupersedeChalaniInput
	12,  // 96: darta.v1.SupersedeChalaniResponse.result:type_name -> darta.v1.SupersedeChalaniResult
	3,   // 97: darta.v1.CloseChalaniResponse.chalani:type_name -> darta.v1.Chalani
	33,  // 98: darta.v1.ChalaniService.GetChalani:input_type -> darta.v1.GetChalaniRequest
	35,  // 99: darta.v1.ChalaniService.GetChalaniByNumber:input_type -> darta.v1.GetChalaniByNumberRequest
	37,  // 100: darta.v1.ChalaniService.ListChalanis:input_type -> darta.v1.ListChalanisRequest
	39,  // 101: darta.v1.ChalaniService.GetMyChalani:input_type -> darta.v1.GetMyChalaniRequest
	41,  // 102: darta.v1.ChalaniService.GetChalaniStats:input_type -> darta.v1.GetChalaniStatsRequest
	43,  // 103: darta.v1.ChalaniService.ListChalaniTemplates:input_type -> darta.v1.ListChalaniTemplatesRequest
	45,  // 104: darta.v1.ChalaniService.GetChalaniTemplate:input_type -> darta.v1.GetChalaniTemplateRequest
	47,  // 105: darta.v1.ChalaniService.CreateChalani:input_type -> darta.v1.CreateChalaniRequest
	49,  // 106: darta.v1.ChalaniService.SubmitChalani:input_type -> darta.v1.SubmitChalaniRequest
	51,  // 107: darta.v1.ChalaniService.ReviewChalani:input_type -> darta.v1.ReviewChalaniRequest
	53,  // 108: darta.v1.ChalaniService.ApproveChalani:input_type -> darta.v1.ApproveChalaniRequest
	55,  // 109: darta.v1.ChalaniService.ReserveChalaniNumber:input_type -> darta.v1.ReserveChalaniNumberRequest
	57,  // 110: darta.v1.ChalaniService.FinalizeChalaniRegistration:input_type -> darta.v1.FinalizeChalaniRegistrationRequest
	59,  // 111: darta.v1.ChalaniService.DirectRegisterChalani:input_type -> darta.v1.DirectRegisterChalaniRequest
	61,  // 112: darta.v1.ChalaniService.SignChalani:input_type -> darta.v1.SignChalaniRequest
	63,  // 113: darta.v1.ChalaniService.SealChalani:input_type -> darta.v1.SealChalaniRequest
	65,  // 114: darta.v1.ChalaniService.DispatchChalani:input_type -> darta.v1.DispatchChalaniRequest
	67,  // 115: darta.v1.ChalaniService.MarkChalaniInTransit:input_type -> darta.v1.MarkChalaniInTransitRequest
	69,  // 116: darta.v1.ChalaniService.AcknowledgeChalani:input_type -> darta.v1.AcknowledgeChalaniRequest
	71,  // 117: darta.v1.ChalaniService.MarkChalaniDelivered:input_type -> darta.v1.MarkChalaniDeliveredRequest
	73,  // 118: darta.v1.ChalaniService.MarkChalaniReturnedUndelivered:input_type -> darta.v1.MarkChalaniReturnedUndeliveredRequest
	75,  // 119: darta.v1.ChalaniService.ResendChalani:input_type -> darta.v1.ResendChalaniRequest
	77,  // 120: darta.v1.ChalaniService.VoidChalani:input_type -> darta.v1.VoidChalaniRequest
	79,  // 121: darta.v1.ChalaniService.SupersedeChalani:input_type -> darta.v1.SupersedeChalaniRequest
	81,  // 122: darta.v1.ChalaniService.CloseChalani:input_type -> darta.v1.CloseChalaniRequest
	94,  // 123: darta.v1.ChalaniService.HealthCheck:input_type -> darta.v1.HealthCheckRequest
	34,  // 124: darta.v1.ChalaniService.GetChalani:output_type -> darta.v1.GetChalaniResponse
	36,  // 125: darta.v1.ChalaniService.GetChalaniByNumber:output_type -> darta.v1.GetChalaniByNumberResponse
	38,  // 126: darta.v1.ChalaniService.ListChalanis:output_type -> darta.v1.ListChalanisResponse
	40,  // 127: darta.v1.ChalaniService.GetMyChalani:output_type -> darta.v1.GetMyChalaniResponse
	42,  // 128: darta.v1.ChalaniService.GetChalaniStats:output_type -> darta.v1.GetChalaniStatsResponse
	44,  // 129: darta.v1.ChalaniService.ListChalaniTemplates:output_type -> darta.v1.ListChalaniTemplatesResponse
	46,  // 130: darta.v1.ChalaniService.GetChalaniTemplate:output_type -> darta.v1.GetChalaniTemplateResponse
	48,  // 131: darta.v1.ChalaniService.CreateChalani:output_type -> darta.v1.CreateChalaniResponse
	50,  // 132: darta.v1.ChalaniService.SubmitChalani:output_type -> darta.v1.SubmitChalaniResponse
	52,  // 133: darta.v1.ChalaniService.ReviewChalani:output_type -> darta.v1.ReviewChalaniResponse
	54,  // 134: darta.v1.ChalaniService.ApproveChalani:output_type -> darta.v1.ApproveChalaniResponse
	56,  // 135: darta.v1.ChalaniService.ReserveChalaniNumber:output_type -> darta.v1.ReserveChalaniNumberResponse
	58,  // 136: darta.v1.ChalaniService.FinalizeChalaniRegistration:output_type -> darta.v1.FinalizeChalaniRegistrationResponse
	60,  // 137: darta.v1.ChalaniService.DirectRegisterChalani:output_type -> darta.v1.DirectRegisterChalaniResponse
	62,  // 138: darta.v1.ChalaniService.SignChalani:output_type -> darta.v1.SignChalaniResponse
	64,  // 139: darta.v1.ChalaniService.SealChalani:output_type -> darta.v1.SealChalaniResponse
	66,  // 140: darta.v1.ChalaniService.DispatchChalani:output_type -> darta.v1.DispatchChalaniResponse
	68,  // 141: darta.v1.ChalaniService.MarkChalaniInTransit:output_type -> darta.v1.MarkChalaniInTransitResponse
	70,  // 142: darta.v1.ChalaniService.AcknowledgeChalani:output_type -> darta.v1.AcknowledgeChalaniResponse
	72,  // 143: darta.v1.ChalaniService.MarkChalaniDelivered:output_type -> darta.v1.MarkChalaniDeliveredResponse
	74,  // 144: darta.v1.ChalaniService.MarkChalaniReturnedUndelivered:output_type -> darta.v1.MarkChalaniReturnedUndeliveredResponse
	76,  // 145: darta.v1.ChalaniService.ResendChalani:output_type -> darta.v1.ResendChalaniResponse
	78,  // 146: darta.v1.ChalaniService.VoidChalani:output_type -> darta.v1.VoidChalaniResponse
	80,  // 147: darta.v1.ChalaniService.SupersedeChalani:output_type -> darta.v1.SupersedeChalaniResponse
	82,  // 148: darta.v1.ChalaniService.CloseChalani:output_type -> darta.v1.CloseChalaniResponse
	95,  // 149: darta.v1.ChalaniService.HealthCheck:output_type -> darta.v1.HealthCheckResponse
	124, // [124:150] is the sub-list for method output_type
	98,  // [98:124] is the sub-list for method input_type
	98,  // [98:98] is the sub-list for extension type_name
	98,  // [98:98] is the sub-list for extension extendee
	0,   // [0:98] is the sub-list for field type_name
}

func init() { file_darta_v1_chalani_proto_init() }
func file_darta_v1_chalani_proto_init() {
	if File_darta_v1_chalani_proto != nil {
		return
	}
	file_darta_v1_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_darta_v1_chalani_proto_rawDesc), len(file_darta_v1_chalani_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   80,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_darta_v1_chalani_proto_goTypes,
		DependencyIndexes: file_darta_v1_chalani_proto_depIdxs,
		EnumInfos:         file_darta_v1_chalani_proto_enumTypes,
		MessageInfos:      file_darta_v1_chalani_proto_msgTypes,
	}.Build()
	File_darta_v1_chalani_proto = out.File
	file_darta_v1_chalani_proto_goTypes = nil
	file_darta_v1_chalani_proto_depIdxs = nil
}
